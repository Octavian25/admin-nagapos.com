{"version":3,"sources":["pages/Pesanan/ModalDataCustomer.jsx","pages/Pesanan/HeadInputPembayaran.jsx","pages/Pesanan/ModalPembayaran.jsx","pages/Pesanan/ModalTambahBarangPesanan.jsx","pages/Pesanan/index.jsx","Validasi/Penjualan/ValidasiPembayaran.jsx","Validasi/Penjualan/ValidasiFormDataMemberPenjualan.jsx"],"names":["jenis_pelanggan","value","name","ModalDataCustomer","Component","constructor","props","super","this","state","showMember","componentDidMount","dispatch","getDataSales","data_customer","localStoragedecryp","length","JSON","parse","setState","change","changemember","e","document","getElementById","focus","getMember","getData","then","res","data","ToastNotification","forEach","item","index","nama_customer","no_hp","alamat_customer","catch","err","render","library","createElement","onSubmit","handleSubmit","onKeyPress","key","preventDefault","autoComplete","className","label","placeholder","options","DataSales","filter","list","undefined","kode_sales","map","component","ReanderSelect","id","onChange","target","ReanderField","type","readOnly","normalize","NumberOnly","disabled","isLoadingDataCustomer","Fragment","reduxForm","form","enableReinitialize","validate","ValidasiFormDataMemberPenjualan","connect","initialValues","kode_customer","datamaster","currencyMask","createNumberMask","prefix","locale","jenis_pembayaran","HeadInputPembayaran","isLoading","type_pembayaran","lebih","columns","dataField","text","footerAttrs","colSpan","footer","setStartDate","bind","data_barang_penjualan","total","sub_total","setTimeout","hitungTotal","kembali","nominal_kembali","pilihPembyaran","date","tgl_awal","Date","copyValue","parseInt","Object","assign","style","display","tabIndex","onFocus","notif","InputDate","defaultValue","getTglSystem","selected","ValidasiPembayaran","selector","formValueSelector","_selector","cash","harus_bayar_rp","localStorage","getItem","element","nominal","hasil","parseFloat","toString","replace","estimasi_pesanan","ModalPembayaran","formatter","cell","toLocaleString","columnData","reduce","acc","csvExport","headerClasses","rowcontent","row","keterangan","onClick","hapusdata","Swal","fire","title","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","result","isConfirmed","splice","setItem","status","simpanPembayaran","no_card","jenis","nama_bank","datacek","total_transaksi","sisa_bayar","a","b","findIndex","formatDate","moment","format","toUpperCase","fee","push","masuk","data_pembayaran","element2","Pesanan_HeadInputPembayaran","keyField","exportCsv","empty","pagination","textEmpty","isLoadingPembayranTitipan","bayarSekarang","loading_default","loading","background","loaderColor","data_barang","no_titip_group","ModalTambahBarangPesanan","React","bawa_sendiri","dari_toko","isChecked","kategori_harga","GetDataGroup","getData2","chnageValue","getBarcode","nama_barang","berat","response","hideModal","setIndex","harga","DataGroup","kode_group","Gramasi","checked","ongkos","kadar","harga_pergram","harga_atribut","data1","pembulatan","Pesanan","loadingreset","FormModal","isLoadingPembayran","localStorageencryp","stringify","ShowModalCustomer","showModal","ShowModalBarang","simpanBarang","cek","kode_kategori","perkiraan_berat","perkiraan_kadar","harga_gram","attribut","atribut","jenis_barang","deskripsi","deskripsi_pesanan","barang_contoh_internal","options_value","kode_barcode","kode_dari_toko","deskripsi_contoh","deskripsi_dari_toko","deskripsi_bawa_sediri","berat_barang_contoh","berat_dari_toko","berat_bawa_sendiri","reset","data_estimasi","pembayaran","total_pembayarn","jumlah_rp","Math","abs","detail_barang","total_harga","datapenjualan","estimasi_tanggal","jumlah_bayar","postData2","notapesanan","feedback","concat","tanggal","detail","no_pesanan","dp","join","TextFilenotapesanan","message","showModalPembayaran","customer","barang","file","Blob","href","URL","createObjectURL","download","body","appendChild","click","expandRow","renderer","showExpandColumn","expandByColumnOnly","to","rows","cols","tambahData","btnText","btnOptional","namaCustomer","jenisCustomer","btnTextOptional","handleClick","handleClickOptional","margin","size","content","Pesanan_ModalDataCustomer","Pesanan_ModalTambahBarangPesanan","isLoadingTopBar","hideModa","Pesanan_ModalPembayaran","errors","alamat"],"mappings":"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","file":"static/js/17.8824b990.chunk.js","sourcesContent":["\r\n\r\nimport {\r\n  React,\r\n  reduxForm, Field,\r\n  ReanderField, ReanderSelect,\r\n  Component,\r\n  connect,\r\n  getData,\r\n  ToastNotification,\r\n  localStoragedecryp,\r\n  NumberOnly,\r\n} from \"../../components/helpers/library\";\r\n\r\nimport ValidasiFormDataMemberPenjualan from \"../../Validasi/Penjualan/ValidasiFormDataMemberPenjualan\";\r\nimport { getDataSales } from \"../../actions/datamaster_action\";\r\n\r\nconst maptostate = (state) => {\r\n  let data_customer = localStoragedecryp(\"data_customer_tmp\").length  === 0 ? [] :  JSON.parse(localStoragedecryp(\"data_customer_tmp\") || []);\r\n  return {\r\n    initialValues:{\r\n      kode_sales :   data_customer.kode_sales || \"\",\r\n      jenis_pelanggan : data_customer.jenis_pelanggan || \"\",\r\n      kode_customer : data_customer.kode_customer || \"\",\r\n      nama_customer : data_customer.nama_customer || \"\",\r\n      no_hp : data_customer.no_hp || \"\",\r\n      alamat_customer : data_customer.alamat_customer || \"\",\r\n    },\r\n    DataSales: state.datamaster.getDataSales,\r\n  };\r\n};\r\n\r\nconst jenis_pelanggan = [\r\n  {\r\n    value: \"MEMBER\",\r\n    name: \"MEMBER\",\r\n  },\r\n  {\r\n    value: \"NONMEMBER\",\r\n    name: \"NON MEMBER\",\r\n  },\r\n];\r\nclass ModalDataCustomer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showMember: true,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getDataSales());\r\n    let data_customer = localStoragedecryp(\"data_customer_tmp\").length  === 0 ? [] :  JSON.parse(localStoragedecryp(\"data_customer_tmp\") || []);\r\n    if (data_customer && data_customer.jenis_pelanggan === \"MEMBER\") {\r\n      this.setState({\r\n        showMember: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        showMember: true,\r\n      });\r\n      this.props.change(\"jenis_pelanggan\", \"NONMEMBER\")\r\n    }\r\n    // this.props.change(\"jenis_pelanggan\", \"NONMEMBER\")\r\n    // this.props.change(\"kode_customer\", \"NONMEMBER\");\r\n\r\n    \r\n    // setTimeout(() => {\r\n    //   this.props.change(\"jenis_pelanggan\", \"MEMBER\");\r\n    //   this.setState({\r\n    //     showMember: false,\r\n    //   });\r\n    // }, 100);\r\n  }\r\n  changemember(e) {\r\n    // console.log(e);\r\n\r\n    if (e === \"MEMBER\") {\r\n      this.setState({\r\n        showMember: false,\r\n      });\r\n      document.getElementById('kode_member').focus()\r\n      this.props.change(\"kode_customer\", \"\");\r\n    } else {\r\n      this.props.change(\"kode_customer\", \"NONMEMBER\");\r\n      document.getElementById('nama_customer').focus()\r\n      this.props.change(\"nama_customer\", \"\");\r\n      this.props.change(\"no_hp\", \"\");\r\n      this.props.change(\"alamat_customer\", \"\");\r\n      this.setState({\r\n        showMember: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  getMember(e) {\r\n    // console.log(e);\r\n    getData(\"member/get/by-kode-member/\" + e).then((res) => {\r\n      // console.log(res.data);\r\n      if (res.data.length === 0) {\r\n        ToastNotification(\"info\", \"Member Yang Anda Masukan Tidak Ada !!!\");\r\n      } else {\r\n        res.data.forEach((item, index) => {\r\n          this.props.change(\"nama_customer\", item.nama_customer);\r\n          this.props.change(\"no_hp\", item.no_hp);\r\n          this.props.change(\"alamat_customer\", item.alamat_customer);\r\n        })\r\n      }\r\n    }).catch((err) => {\r\n      ToastNotification(\"info\", \"Terjadi Kesalahan SIlahkan Ulangi Kembali !!!\");\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n        autoComplete=\"off\"\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <Field\r\n              name=\"kode_sales\"\r\n              label=\"Pilih Kode Sales\"\r\n              placeholder=\"Masukan Kode Sales\"\r\n              options={this.props.DataSales.filter(\r\n                (list) => list.kode_sales !== undefined\r\n              ).map((list) => {\r\n                let data = {\r\n                  value: list.kode_sales,\r\n                  name: list.kode_sales ,\r\n                };\r\n                return data;\r\n              })}\r\n              component={ReanderSelect}\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              id=\"jenis_pelanggan\"\r\n              name=\"jenis_pelanggan\"\r\n              label=\"Pilih Pelanggan\"\r\n              onChange={(e) => this.changemember(e)}\r\n              placeholder=\"Silahkan Pilih Pelanggan\"\r\n              options={jenis_pelanggan}\r\n              component={ReanderSelect}\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              id=\"kode_member\"\r\n              name=\"kode_customer\"\r\n              onChange={(e) => this.getMember(e.target.value)}\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              readOnly={this.state.showMember}\r\n              label=\"Kode Customer\"\r\n              placeholder=\"Masukan Kode Customer\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              id=\"nama_customer\"\r\n              name=\"nama_customer\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Nama Customer\"\r\n              placeholder=\"Masukan Nama Customer\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              name=\"no_hp\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              normalize={NumberOnly}\r\n              label=\"No Hp\"\r\n              placeholder=\"Masukan No Hp\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              name=\"alamat_customer\"\r\n              component={ReanderField}\r\n              type=\"textarea\"\r\n              label=\"Alamat Customer\"\r\n              placeholder=\"Masukan Alamat Customer\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-8\"></div>\r\n          <div className=\"col-4\">\r\n            <button\r\n              className=\"btn btn-primary btn-block\"\r\n              disabled={this.props.isLoadingDataCustomer}\r\n              type=\"submit\"\r\n            >\r\n              {this.props.isLoadingDataCustomer ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Menyimpan\r\n                </>\r\n              ) : (\r\n                \"Simpan Data\"\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nModalDataCustomer = reduxForm({\r\n  form: \"ModalDataCustomer\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiFormDataMemberPenjualan,\r\n})(ModalDataCustomer);\r\nexport default connect(maptostate)(ModalDataCustomer);\r\n","import {\r\n  React,\r\n  Component,\r\n  connect,\r\n  Field,\r\n  createNumberMask,\r\n  formValueSelector,\r\n  reduxForm,\r\n  NumberOnly,\r\n  localStoragedecryp,\r\n  ReanderField,\r\n  ReanderSelect,\r\n  getTglSystem,\r\n  InputDate,\r\n} from \"../../components/helpers/library\";\r\nimport { getDataSales } from \"../../actions/datamaster_action\";\r\nimport ValidasiPembayaran from \"../../Validasi/Penjualan/ValidasiPembayaran\";\r\n\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  locale: \"kr-KO\",\r\n});\r\nconst jenis_pembayaran = [\r\n  {\r\n    value: \"CASH\",\r\n    name: \"CASH\",\r\n  },\r\n  {\r\n    value: \"DEBET\",\r\n    name: \"DEBET\",\r\n  },\r\n  {\r\n    value: \"TRANSFER\",\r\n    name: \"TRANSFER\",\r\n  },\r\n  {\r\n    value : \"CREDIT\",\r\n    name: \"CREDIT\"\r\n  }\r\n];\r\nclass HeadInputPembayaran extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      type_pembayaran: \"CASH\",\r\n      lebih: false,\r\n      columns: [\r\n        // {\r\n        //   dataField: \"nama_bank\",\r\n        //   text: \"Nama Bank\",\r\n        //   footerAttrs: {\r\n        //     colSpan: \"2\",\r\n        //   },\r\n        //   footer: \"Grand Total\",\r\n        // },\r\n        {\r\n          dataField: \"type\",\r\n          text: \"Type\",\r\n          footerAttrs: {\r\n            colSpan: \"1\",\r\n          },\r\n          footer: \"Grand Total\",\r\n        },\r\n        {\r\n          dataField: \"Total\",\r\n          text: \"Total\",\r\n          footer: \"\",\r\n        },\r\n      ],\r\n    };\r\n    this.setStartDate = this.setStartDate.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getDataSales());\r\n    let data_barang_penjualan = JSON.parse(\r\n      localStoragedecryp(\"data_barang_pesanan\")\r\n    );\r\n\r\n    let total = 0;\r\n    data_barang_penjualan.forEach((item, index) => {\r\n      // console.log(item.total);\r\n      total = total + item.sub_total;\r\n      this.props.change(\"grand_total_pembayaran\", total);\r\n      this.props.change(\"harus_bayar_rp\", total);\r\n    });\r\n    this.props.change(\"jenis\", \"CASH\");\r\n    setTimeout(() => {\r\n      document.getElementById(\"cash_trx_penjualan\").focus();\r\n    }, 100);\r\n  }\r\n  hitungTotal() {\r\n    this.props.change(\"kembali\", this.props.kembali);\r\n    this.props.change(\"nominal_kembali\", this.props.nominal_kembali);\r\n\r\n  }\r\n\r\n  pilihPembyaran(e) {\r\n    if (e === \"CASH\") {\r\n      this.setState({\r\n        type_pembayaran: \"CASH\",\r\n      });\r\n    } else if (e === \"TRANSFER\") {\r\n      this.setState({\r\n        type_pembayaran: \"TRANSFER\",\r\n      });\r\n    } else if (e === \"DEBET\") {\r\n      this.setState({\r\n        type_pembayaran: \"DEBET\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        type_pembayaran: \"CREDIT\"\r\n      })\r\n    }\r\n    this.props.change(\"cash\", \"\");\r\n\r\n    // document.getElementById('cash_trx_penjualan').focus()\r\n  }\r\n  setStartDate(date) {\r\n    this.setState({\r\n      tgl_awal: new Date(date),\r\n    });\r\n  }\r\n  copyValue(e) {\r\n    this.props.change(\"cash\",parseInt(NumberOnly(e)))\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n        autoComplete=\"off\"\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <Field\r\n              name=\"grand_total_pembayaran\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              onChange={this.hitungTotal()}\r\n              readOnly={true}\r\n              {...currencyMask}\r\n              label=\"Total Harga Jual\"\r\n              placeholder=\"Total Harga Jual\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-6\">\r\n            <Field\r\n              id=\"harus_bayar_rp\"\r\n              name=\"harus_bayar_rp\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              onChange={this.hitungTotal()}\r\n              readOnly={true}\r\n              {...currencyMask}\r\n              label=\"Harus Bayar Rp\"\r\n              placeholder=\"Harus Bayar Rp\"\r\n            />\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <Field\r\n              name=\"jenis\"\r\n              label=\"Pilih Jenis Bayar\"\r\n              placeholder=\"Pilih Jenis Pembayaran\"\r\n              options={jenis_pembayaran}\r\n              onChange={(e) => this.pilihPembyaran(e)}\r\n              component={ReanderSelect}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            className=\"col-6\"\r\n            style={{\r\n              display:\r\n                this.state.type_pembayaran === \"CASH\"\r\n                  ? \"none\"\r\n                  : this.state.type_pembayaran === \"DEBET\"\r\n                  ? \"block\"\r\n                  : \"block\",\r\n            }}\r\n          >\r\n            <Field\r\n              tabIndex=\"1\"\r\n              name=\"nama_bank\"\r\n              id=\"nama_bank\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Bank\"\r\n              placeholder=\"Masukan Nama Bank\"\r\n            />\r\n          </div>\r\n          <div\r\n            className=\"col-6\"\r\n            style={{\r\n              display:\r\n                this.state.type_pembayaran === \"CASH\"\r\n                  ? \"none\"\r\n                  : this.state.type_pembayaran === \"DEBET\"\r\n                  ? \"none\"\r\n                  : \"block\",\r\n            }}\r\n          >\r\n            <Field\r\n              tabIndex=\"1\"\r\n              name=\"no_card\"\r\n              id=\"no_card\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label={this.state.type_pembayaran === \"TRANSFER\" ? \"No Rek\" : \"Card No\"}\r\n              placeholder={this.state.type_pembayaran === \"TRANSFER\" ? \"Masukan No Rek\" : \"Masukan Card No\"}\r\n            />\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <Field\r\n              tabIndex=\"1\"\r\n              name=\"cash\"\r\n              id=\"cash_trx_penjualan\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Nominal\"\r\n              onChange={this.hitungTotal()}\r\n              {...currencyMask}\r\n              normalize={NumberOnly}\r\n              placeholder=\"Masukan Nominal\"\r\n            />\r\n          </div>\r\n          <div className=\"col-6\" \r\n          style={{\r\n              display:\r\n                this.state.type_pembayaran === \"CREDIT\"\r\n                  ? \"block\"\r\n                  : \"none\"\r\n            }}>\r\n            <Field\r\n              tabIndex=\"1\"\r\n              name=\"fee\"\r\n              id=\"fee\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Fee (%)\"\r\n              normalize={NumberOnly}\r\n              placeholder=\"5\"\r\n            />\r\n          </div>\r\n          <div className=\"col-6 d-none\">\r\n            <Field\r\n              tabIndex=\"1\"\r\n              name=\"nominal_kembali\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Nominal\"\r\n              placeholder=\"Masukan Nominal\"\r\n            />\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <Field\r\n              name=\"kembali\"\r\n              id=\"sisa_bayar\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              readOnly={true}\r\n              label=\"Sisa\"\r\n              //   {...currencyMask}\r\n              onFocus={(e)=>this.copyValue(e.target.value)}\r\n\r\n              // normalize={NumberOnly}\r\n              placeholder=\"Sisa Pembayaran\"\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            className={\r\n              this.state.type_pembayaran === \"CASH\"\r\n                ? \"col-6 text-right\"\r\n                : this.state.type_pembayaran === \"TRANSFER\"\r\n                ? \"col-6 text-right\"\r\n                : \"col-12 text-right\"\r\n            }\r\n          >\r\n            <br />\r\n\r\n            <label>&nbsp;</label>\r\n            <button\r\n              tabIndex=\"2\"\r\n              disabled={this.props.notif}\r\n              className=\"btn btn-primary\"\r\n            >\r\n              {\" \"}\r\n              <i className=\"fa fa-plus\"></i>\r\n            </button>\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <Field\r\n              name=\"estimasi_pesanan\"\r\n              component={InputDate}\r\n              type=\"text\"\r\n              label=\"Estimasi Pesanan Selesai\"\r\n              defaultValue={getTglSystem()}\r\n              selected={this.state.tgl_awal}\r\n              onChange={(date) => this.setStartDate(date)}\r\n              placeholder=\"Estimasi Pesanan\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadInputPembayaran = reduxForm({\r\n  form: \"HeadInputPembayaran\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiPembayaran,\r\n})(HeadInputPembayaran);\r\n\r\nconst selector = formValueSelector(\"HeadInputPembayaran\"); // <-- same as form name\r\n\r\nexport default connect((state) => {\r\n  const { cash,harus_bayar_rp } = selector(\r\n    state,\r\n    \"grand_total_pembayaran\",\r\n    \"harus_bayar_rp\",\r\n    \"cash\"\r\n  );\r\n  let data = JSON.parse(localStorage.getItem(\"trx_pemabayaran_pesanan\")) || [];\r\n  let total = 0;\r\n  data.forEach((element) => {\r\n    total = element.nominal + total;\r\n  });\r\n  let hasil = parseFloat(total || 0) - parseFloat(harus_bayar_rp || 0);\r\n\r\n  // let verifikasi_pembayaran_lebih = ;\r\n  \r\n  return {\r\n    kembali: hasil.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\r\n    nominal_kembali : hasil + parseInt(cash),\r\n\r\n    initialValues: {\r\n      estimasi_pesanan: getTglSystem(),\r\n      // tgl_akhir: getTglSystem(),\r\n    },\r\n  };\r\n})(HeadInputPembayaran);\r\n","import {\r\n  React,\r\n  reduxForm,\r\n  Component,\r\n  connect,\r\n  getItem,\r\n  setItem,\r\n  Tabel,\r\n  Swal,\r\n  formatDate,\r\n  moment,\r\n  ToastNotification\r\n} from \"../../components/helpers/library\";\r\n\r\nimport ValidasiPembayaran from \"../../Validasi/Penjualan/ValidasiPembayaran\";\r\nimport HeadInputPembayaran from \"./HeadInputPembayaran\";\r\nimport Loading from 'react-fullscreen-loading';\r\n\r\n// data_barang_penjualan_tmp\r\n\r\n\r\nconst maptostate = (state) => {\r\n  let data_barang = getItem(\"data_barang_penjualan_tmp\") || [];\r\n  let status = \"PENJUALAN\";\r\n  data_barang.forEach((element) => {\r\n    if (element.no_titip_group === \"-\") {\r\n      status = \"PENJUALAN\";\r\n    } else {\r\n      status = \"TITIPAN\";\r\n    }\r\n  });\r\n  return {\r\n    status: status,\r\n  };\r\n};\r\nclass ModalPembayaran extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      type_pembayaran: \"CASH\",\r\n      columns: [\r\n        {\r\n          dataField: \"jenis\",\r\n          text: \"Jenis\",\r\n          footerAttrs: {\r\n            colSpan: \"2\",\r\n          },\r\n          footer: \"Grand Total\",\r\n        },\r\n        {\r\n          dataField: \"keterangan\",\r\n          text: \"Keterangan\",\r\n        },\r\n        {\r\n          dataField: \"nominal\",\r\n          text: \"Total\",\r\n          formatter: (cell) => {\r\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\r\n          },\r\n          footer: (columnData) =>\r\n            parseInt(\r\n              columnData.reduce((acc, item) => acc + item, 0)\r\n            ).toLocaleString(\"kr-KO\"),\r\n        },\r\n        {\r\n          dataField: \"action\",\r\n          text: \"Action\",\r\n          csvExport: false,\r\n          headerClasses: \"text-center\",\r\n          formatter: (rowcontent, row, index) => {\r\n            return (\r\n              <div className=\"row text-center\">\r\n                <div className=\"col-12\">\r\n                  <button\r\n                    type=\"button\"\r\n                    disabled={row.keterangan === \"TITIPAN\" ? true : false}\r\n                    onClick={() => this.hapusdata(index)}\r\n                    className=\"btn btn-danger mr-3\"\r\n                  >\r\n                    <i className=\"fa fa-trash\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n          footer: \"\",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n  hapusdata(id) {\r\n    Swal.fire({\r\n      title: \"Anda Yakin !!\",\r\n      text: \"Ingin Menghapus Data Ini ?\",\r\n      icon: \"warning\",\r\n      position: \"top-center\",\r\n      cancelButtonText: \"Tidak\",\r\n      showCancelButton: true,\r\n      confirmButtonText: \"OK\",\r\n      showConfirmButton: true,\r\n    }).then((result) => {\r\n      // console.log(id);\r\n      if (result.isConfirmed) {\r\n        let data = getItem(\"trx_pemabayaran_pesanan\");\r\n        data.splice(id, 1);\r\n        setItem(\"trx_pemabayaran_pesanan\", data);\r\n        this.setState({\r\n          status: \"berhasil\",\r\n        });\r\n        // deleteLocalItemBarcode(\"data_barang_hancur_tmp\", id);\r\n        // this.props.dispatch(getListReturnSupplier());\r\n      }\r\n    });\r\n  }\r\n  simpanPembayaran(row) {\r\n    if(row.no_card === undefined && row.jenis !== \"CASH\" && row.jenis !== \"DEBET\"){\r\n      ToastNotification(\"info\", \"Nomor kartu tidak boleh kosong\");\r\n      return false;\r\n    }\r\n    if(row.nama_bank === undefined && row.jenis !== \"CASH\"){\r\n      ToastNotification(\"info\", \"Nama Bank tidak boleh kosong\");\r\n      return false;\r\n    }\r\n    if(row.cash === undefined || row.cash === \"0\"){\r\n      ToastNotification(\"info\", \"Nominal tidak boleh kosong\");\r\n      return false;\r\n    }\r\n    let datacek = {\r\n      total_transaksi : row.harus_bayar_rp,\r\n      sisa_bayar : row.nominal_kembali\r\n    }\r\n    setItem('sisa_bayar_pesanan',datacek)\r\n    let data = JSON.parse(localStorage.getItem(\"trx_pemabayaran_pesanan\")) || [];\r\n    if (row.jenis !== \"CASH\" && !data.length) {\r\n      if (row.kembali.replace(/[^0-9]/g, \"\") - row.cash < 0) {\r\n        ToastNotification(\"info\", \"Pembayaran tidak boleh lebih dari sisa\");\r\n        return false;\r\n      }\r\n    } else {\r\n      if(row.jenis !== \"CASH\"){\r\n      if (row.kembali.replace(/[^0-9]/g, \"\") - row.cash < 0 && parseInt(row.kembali) !== 0){\r\n        ToastNotification(\"info\", \"Pembayaran tidak boleh lebih dari sisa\");\r\n        return false;\r\n      } else {\r\n        if (data.reduce((a, b) => a + b.nominal, 0) >= row.harus_bayar_rp) {\r\n          ToastNotification(\"info\", \"Pembayaran Sudah Cukup\");\r\n          return false;\r\n        }\r\n        }\r\n      }\r\n    }\r\n   \r\n\r\n    let cash = data.findIndex((hasil) => hasil.jenis === \"CASH\");\r\n    if (cash >= 0) {\r\n      if (row.kembali.replace(/[^0-9]/g, \"\") - row.cash < 0 && data.reduce((a, b) => a + b.nominal, 0) > row.harus_bayar_rp) {\r\n        ToastNotification(\"info\", \"Pembayaran Sudah Cukup\");\r\n        return false;\r\n      } else {\r\n        if (data.reduce((a, b) => a + b.nominal, 0) >= row.harus_bayar_rp) {\r\n          ToastNotification(\"info\", \"Pembayaran Sudah Cukup\");\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    setItem('estimasi_pesanan', formatDate(moment(new Date(row.estimasi_pesanan)).format(\"YYYY-MM-DD\")))\r\n    \r\n    let index = data.findIndex((hasil) => hasil.jenis === row.jenis);\r\n    if (index === -1) {\r\n      let keterangan = \"\";\r\n      if (row.jenis === \"CASH\") {\r\n        keterangan = \"CASH\";\r\n      } else if (row.jenis === \"TRANSFER\") {\r\n        keterangan = row.no_card + \" - \" + row.nama_bank;\r\n      } else {\r\n        keterangan = row.nama_bank;\r\n      }\r\n      let hasil = {\r\n        jenis: row.jenis,\r\n        nominal: parseInt(row.cash || 0),\r\n        nama_bank: row.nama_bank !== undefined ? row.nama_bank.toUpperCase() : \"-\",\r\n        fee : row.jenis === \"CREDIT\" ? row.fee || 0 : 0 ,\r\n        no_card: row.no_card || \"-\",\r\n        keterangan: keterangan.toUpperCase(),\r\n      };\r\n      data.push(hasil);\r\n      this.setState({\r\n        masuk: true,\r\n      });\r\n      setItem(\"trx_pemabayaran_pesanan\", data);\r\n    } else {\r\n      let data_pembayaran = getItem(\"trx_pemabayaran_pesanan\");\r\n      data_pembayaran = data_pembayaran.map((element2) => {\r\n        if (element2.jenis === row.jenis) {\r\n          element2.nominal += parseInt(row.cash);\r\n        }\r\n        return element2;\r\n      });\r\n      setItem(\"trx_pemabayaran_pesanan\", data_pembayaran);\r\n      this.setState({\r\n        status: true,\r\n      });\r\n      // ToastNotification(\r\n      //   \"info\",\r\n      //   \"Pembayaran dengan \" + row.jenis + \" sudah ada\"\r\n      // );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <HeadInputPembayaran onSubmit={(data) => this.simpanPembayaran(data)} />\r\n        <hr />\r\n        <form\r\n          onSubmit={this.props.handleSubmit}\r\n          onKeyPress={(e) => {\r\n            e.key === \"Enter\" && e.preventDefault();\r\n          }}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Tabel\r\n            // handleClick={() => this.simpanpembbayaran()}\r\n            keyField=\"jenis\"\r\n            // tambahData={true}\r\n            // btnText=\"Tambah Pembyaran\"\r\n            exportCsv={false}\r\n            data={getItem(\"trx_pemabayaran_pesanan\") || []}\r\n            columns={this.state.columns}\r\n            empty={true}\r\n            pagination=\"off\"\r\n            textEmpty=\"Data Pembayaran Kosong\"\r\n          />\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n            \r\n            </div>\r\n            <div className=\"col-6 text-right\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                disabled={this.props.isLoadingPembayranTitipan}\r\n                onClick={() => this.props.bayarSekarang()}\r\n                type=\"button\"\r\n              >\r\n                {this.props.isLoadingPembayranTitipan ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Diproses\r\n                  </>\r\n                ) : (\r\n                  \"Bayar Sekarang\"\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          {this.props.isLoadingPembayranTitipan ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null}\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nModalPembayaran = reduxForm({\r\n  form: \"ModalPembayaran\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiPembayaran,\r\n})(ModalPembayaran);\r\n\r\nexport default connect(maptostate)(ModalPembayaran);\r\n","import { GetDataGroup, hideModal } from \"../../actions/datamaster_action\";\r\nimport { pembulatan } from \"../../components/helpers/function\";\r\nimport {\r\n  React,\r\n  connect,\r\n  reduxForm,\r\n  ReanderSelect,\r\n  Field,\r\n  ReanderField,\r\n  Gramasi,\r\n  NumberOnly,\r\n  createNumberMask,\r\n  formValueSelector,\r\n  ToastNotification,\r\n  getData,\r\n} from \"../../components/helpers/library\";\r\nimport { getData2 } from \"../../config/axios\";\r\n\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  locale: \"kr-KO\",\r\n});\r\nclass ModalTambahBarangPesanan extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      bawa_sendiri: false,\r\n      dari_toko: true,\r\n      isChecked: true,\r\n      kategori_harga : true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(GetDataGroup());\r\n    setTimeout(() => {\r\n      getData2(\"para-system/key/kategori_harga\").then((res) => {\r\n        // console.log(res.data.value);\r\n        if (res.data.value === \"harga_100%\") {\r\n          this.setState({\r\n            kategori_harga: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            kategori_harga: false,\r\n          });\r\n        }\r\n  \r\n        this.props.change(\"kadar\", this.state.kategori_harga ? 0 : 100);\r\n      });\r\n\r\n    }, 200);\r\n  }\r\n  hitungTotal() {\r\n    this.props.change(\"sub_total\", this.props.sub_total);\r\n  }\r\n\r\n  chnageValue(e) {\r\n    // console.log();\r\n    if (e.target.value === \"dari_toko\") {\r\n      document.getElementById(\"kode_dari_toko\").focus();\r\n      this.props.change(\"deskripsi_bawa_sediri\", \"\");\r\n      this.props.change(\"berat_bawa_sendiri\", \"\");\r\n      this.setState({\r\n        dari_toko: false,\r\n        bawa_sendiri: true,\r\n        isChecked: false,\r\n      });\r\n    } else {\r\n      document.getElementById(\"deskripsi_bawa_sediri\").focus();\r\n      this.props.change(\"kode_dari_toko\", \"\");\r\n      this.props.change(\"deskripsi_dari_toko\", \"\");\r\n      this.props.change(\"berat_dari_toko\", \"\");\r\n      this.setState({\r\n        dari_toko: true,\r\n        bawa_sendiri: false,\r\n        isChecked: true,\r\n      });\r\n    }\r\n  }\r\n  getBarcode(e) {\r\n    getData(\"barang/get/by-kode-barcode/\" + e)\r\n      .then((res) => {\r\n        //   console.log(res.data);\r\n        res.data.forEach((element) => {\r\n          this.props.change(\"deskripsi_dari_toko\", element.nama_barang);\r\n          this.props.change(\"berat_dari_toko\", element.berat);\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        // console.log();\r\n        if (err.response.status !== 404) {\r\n          ToastNotification(\"info\", err.response.data);\r\n        }\r\n      });\r\n  }\r\n  hideModal() {\r\n    this.props.dispatch(hideModal());\r\n  }\r\n  setIndex(e) {\r\n    document.getElementById(\"jenis_barang\").focus()\r\n    getData(\"group/get/by-kode-group/\" + e).then((res) => {\r\n      // console.log(res.data);\r\n      this.props.change(\"harga_pergram\",res.data.harga)\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n        autoComplete=\"off\"\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-2\">\r\n            <Field\r\n              name=\"kode_group\"\r\n              label=\"Kategori\"\r\n              onChange={(e)=>this.setIndex(e)}\r\n              placeholder=\"Pilih Kategori\"\r\n              options={this.props.DataGroup.filter(\r\n                (list) => list.kode_group !== undefined\r\n              ).map((list) => {\r\n                let data = {\r\n                  value: list.kode_group,\r\n                  name: list.kode_group,\r\n                };\r\n                return data;\r\n              })}\r\n              component={ReanderSelect}\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              id=\"jenis_barang\"\r\n              name=\"jenis_barang\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Nama Barang\"\r\n              placeholder=\"Masukan Nama Barang\"\r\n            />\r\n          </div>\r\n          <div className=\"col-2\">\r\n            <Field\r\n              id=\"betat\"\r\n              name=\"berat\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              onChange={this.hitungTotal()}\r\n              normalize={Gramasi}\r\n              label=\"Berat\"\r\n              placeholder=\"Masukan Berat\"\r\n            />\r\n          </div>\r\n          <div className={\r\n                this.state.kategori_harga ? \"col-lg-2\" : \"col-lg-2 d-none\"\r\n              }>\r\n            <Field\r\n              id=\"kadar\"\r\n              name=\"kadar\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              onChange={this.hitungTotal()}\r\n              normalize={NumberOnly}\r\n              label=\"Kadar\"\r\n              placeholder=\"Masukan Kadar\"\r\n            />\r\n          </div>\r\n          <div className={\r\n                this.state.kategori_harga ? \"col-lg-2\" : \"col-lg-4\"\r\n              }>\r\n            <Field\r\n              name=\"harga_pergram\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              onChange={this.hitungTotal()}\r\n              {...currencyMask}\r\n              label=\"Harga / Gram\"\r\n              placeholder=\"Masukan Harga / Gram\"\r\n            />\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <Field\r\n              id=\"atribut\"\r\n              name=\"atribut\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Atribut\"\r\n              placeholder=\"Masukan Atribut\"\r\n            />\r\n          </div>\r\n          <div className=\"col-2\">\r\n            <Field\r\n              name=\"harga_atribut\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              {...currencyMask}\r\n              label=\"Harga Atribut\"\r\n              onChange={this.hitungTotal()}\r\n              placeholder=\"Masukan Harga\"\r\n            />\r\n          </div>\r\n          <div className=\"col-2\">\r\n            <Field\r\n              name=\"ongkos\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              {...currencyMask}\r\n              onChange={this.hitungTotal()}\r\n              label=\"Ongkos\"\r\n              placeholder=\"Masukan Ongkos\"\r\n            />\r\n          </div>\r\n          <div className=\"col-2\">\r\n            <Field\r\n              name=\"sub_total\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              {...currencyMask}\r\n              readOnly={true}\r\n              label=\"Sub Total\"\r\n              placeholder=\"Masukan Sub Total\"\r\n            />\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <Field\r\n              name=\"deskripsi_pesanan\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Deskripsi\"\r\n              placeholder=\"Masukan Deskripsi\"\r\n            />\r\n          </div>\r\n          <div className=\"col-2\">\r\n            <div className=\"form-group\">\r\n              <label>&nbsp;</label>\r\n              <br />\r\n              <label>\r\n                <Field\r\n                  name=\"options_value\"\r\n                  component=\"input\"\r\n                  onClick={(e) => this.chnageValue(e)}\r\n                  type=\"radio\"\r\n                  checked={this.state.isChecked}\r\n                  value=\"bawa_sendiri\"\r\n                />{\" \"}\r\n                Bawa Sendiri\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-7\">\r\n            <Field\r\n              id=\"deskripsi_bawa_sediri\"\r\n              name=\"deskripsi_bawa_sediri\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              readOnly={this.state.bawa_sendiri}\r\n              label=\"Deskripsi\"\r\n              placeholder=\"Masukan Deskripsi\"\r\n            />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <Field\r\n              readOnly={this.state.bawa_sendiri}\r\n              name=\"berat_bawa_sendiri\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              normalize={Gramasi}\r\n              label=\"Berat\"\r\n              placeholder=\"Masukan Berat\"\r\n            />\r\n          </div>\r\n          <div className=\"col-2\">\r\n            <div className=\"form-group\">\r\n              <label>&nbsp;</label>\r\n              <br />\r\n              <label>\r\n                <Field\r\n                  name=\"options_value\"\r\n                  component=\"input\"\r\n                  type=\"radio\"\r\n                  onClick={(e) => this.chnageValue(e)}\r\n                  value=\"dari_toko\"\r\n                />{\" \"}\r\n                Dari Toko\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <Field\r\n              id=\"kode_dari_toko\"\r\n              name=\"kode_dari_toko\"\r\n              onChange={(e) => this.getBarcode(e.target.value)}\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Kode Barcode\"\r\n              readOnly={this.state.dari_toko}\r\n              placeholder=\"Masukan Kode Barcode\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              name=\"deskripsi_dari_toko\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Deskripsi\"\r\n              readOnly={true}\r\n              placeholder=\"Masukan Deskripsi\"\r\n            />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <Field\r\n              name=\"berat_dari_toko\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              normalize={Gramasi}\r\n              label=\"Berat\"\r\n              readOnly={true}\r\n              placeholder=\"Masukan Berat\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-6\">\r\n            <button\r\n              className=\"btn btn-warning\"\r\n              type=\"button\"\r\n              onClick={() => this.hideModal()}\r\n            >\r\n              {\" \"}\r\n              Close{\" \"}\r\n            </button>\r\n          </div>\r\n          <div className=\"col-6 text-right\">\r\n            <button className=\"btn btn-primary\"> Add </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nModalTambahBarangPesanan = reduxForm({\r\n  form: \"ModalTambahBarangPesanan\",\r\n  enableReinitialize: true,\r\n})(ModalTambahBarangPesanan);\r\nexport default connect((state) => {\r\n  const selector = formValueSelector(\"ModalTambahBarangPesanan\");\r\n  const { ongkos, kadar, harga_pergram, berat, harga_atribut } = selector(\r\n    state,\r\n    \"kadar\",\r\n    \"berat\",\r\n    \"harga_pergram\",\r\n    \"ongkos\",\r\n    \"harga_atribut\"\r\n  );\r\n  let data1 = pembulatan(((parseInt(harga_pergram || 0) * parseInt(kadar || 0)) / parseInt(100)) * parseFloat(berat || 0));\r\n  let hasil = parseInt(data1 || 0) + parseInt(ongkos || 0) + parseInt(harga_atribut || 0);\r\n  return {\r\n    DataGroup: state.datamaster.GetDataGroup,\r\n    sub_total: parseFloat(hasil),\r\n  };\r\n})(ModalTambahBarangPesanan);\r\n","import {\r\n  React,\r\n  Swal,\r\n  connect,\r\n  Link,\r\n  reduxForm,\r\n  Panel,\r\n  PanelHeader,\r\n  Tabel,\r\n  ModalGlobal,\r\n  showModal,\r\n  hideModal,\r\n  localStorageencryp,\r\n  localStoragedecryp,\r\n  setItem,\r\n  reset,\r\n  getItem,\r\n  ToastNotification,\r\n  PanelBody,\r\n} from \"../../components/helpers/library\";\r\nimport { postData2 } from \"../../config/axios\";\r\nimport ModalDataCustomer from \"./ModalDataCustomer\";\r\nimport ModalPembayaran from \"./ModalPembayaran\";\r\nimport ModalTambahBarangPesanan from \"./ModalTambahBarangPesanan\";\r\nimport Loading from 'react-fullscreen-loading';\r\n\r\nclass Pesanan extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      loadingreset: false,\r\n      FormModal: \"\",\r\n      isLoadingPembayranTitipan: false,\r\n      isLoadingPembayran: false,\r\n      columns: [\r\n        {\r\n          dataField: \"kode_kategori\",\r\n          text: \"Kategori\",\r\n          footerAttrs: {\r\n            colSpan: \"5\",\r\n          },\r\n          footer: \"Total\",\r\n        },\r\n        {\r\n          dataField: \"kode_barcode\",\r\n          text: \"Kode Barcode\",\r\n        },\r\n        {\r\n          dataField: \"keterangan\",\r\n          text: \"Nama Barang\",\r\n        },\r\n        {\r\n          dataField: \"perkiraan_berat\",\r\n          text: \"Perkiraan Berat\",\r\n        },\r\n        {\r\n          dataField: \"perkiraan_kadar\",\r\n          text: \"Perkiraan Kadar\",\r\n        },\r\n        {\r\n          dataField: \"harga_gram\",\r\n          text: \"Harga / Gram\",\r\n          formatter: (cell) => {\r\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\r\n          },\r\n          footer: (columnData) =>\r\n            parseInt(\r\n              columnData.reduce((acc, item) => acc + item, 0)\r\n            ).toLocaleString(\"kr-KO\"),\r\n        },\r\n        {\r\n          dataField: \"sub_total\",\r\n          text: \"Sub Total\",\r\n          formatter: (cell) => {\r\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\r\n          },\r\n          footer: (columnData) =>\r\n            parseInt(\r\n              columnData.reduce((acc, item) => acc + item, 0)\r\n            ).toLocaleString(\"kr-KO\"),\r\n        },\r\n\r\n        {\r\n          dataField: \"action\",\r\n          text: \"Action\",\r\n          csvExport: false,\r\n          headerClasses: \"text-center\",\r\n          formatter: (rowcontent, row, index) => {\r\n            return (\r\n              <div className=\"row text-center\">\r\n                <div className=\"col-12\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => this.hapusdata(index, row)}\r\n                    className=\"btn btn-danger mr-3\"\r\n                  >\r\n                    <i className=\"fa fa-trash\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n          footer: \"\",\r\n        },\r\n      ],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    let hasil = {\r\n      alamat_customer: data.alamat_customer || \"-\",\r\n      jenis_pelanggan: data.jenis_pelanggan || \"NONMEMBER\",\r\n      kode_customer: data.jenis_pelanggan === \"NONMEMBER\" ? \"NONMEMBER\" : data.kode_customer,\r\n      kode_sales: data.kode_sales,\r\n      nama_customer: data.nama_customer || \"REGULER\",\r\n      no_hp: data.no_hp || \"-\"\r\n    }\r\n    localStorageencryp(\"data_customer_tmp\", JSON.stringify(hasil));\r\n    this.setState({\r\n      isLoadingDataCustomer: true,\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({\r\n        isLoadingDataCustomer: false,\r\n      });\r\n      this.props.dispatch(hideModal());\r\n    }, 500);\r\n  }\r\n  ShowModalCustomer() {\r\n    this.setState({ FormModal: \"ShowModalCustomer\" });\r\n    this.props.dispatch(showModal());\r\n  }\r\n  ShowModalBarang() {\r\n    this.setState({ FormModal: \"ShowModalBarang\" });\r\n    this.props.dispatch(showModal());\r\n  }\r\n  simpanBarang(data) {\r\n    // let cek =\r\n    //   getItem(\"data_barang_pesanan\").length === 0\r\n    //     ? []\r\n    //     : getItem(\"data_barang_pesanan\");\r\n    // let hasil_cek = cek.findIndex((hasil) => hasil.kode_barcode === \"\");\r\n    // if (hasil_cek === -1) {\r\n    let cek =[]\r\n      let row = {\r\n        kode_kategori: data.kode_group,\r\n        perkiraan_berat: parseFloat(data.berat),\r\n        perkiraan_kadar: parseInt(data.kadar),\r\n        harga_gram: parseInt(data.harga_pergram),\r\n        attribut: data.atribut || \"-\",\r\n        harga_atribut: parseInt(data.harga_atribut || 0),\r\n        ongkos: parseInt(data.ongkos || 0),\r\n        sub_total: parseInt(data.sub_total),\r\n        keterangan: data.jenis_barang || \"-\",\r\n        deskripsi: data.deskripsi_pesanan || \"-\",\r\n        barang_contoh_internal:\r\n          data.options_value === \"dari_toko\" ? true : false,\r\n        kode_barcode: data.kode_dari_toko || \"-\",\r\n        deskripsi_contoh:\r\n          data.options_value === \"dari_toko\"\r\n            ? data.deskripsi_dari_toko || \"-\"\r\n            : data.deskripsi_bawa_sediri || \"-\",\r\n        berat_barang_contoh:\r\n          data.options_value === \"dari_toko\"\r\n            ? data.berat_dari_toko || 0\r\n            : data.berat_bawa_sendiri || 0,\r\n      };\r\n      cek.push(row);\r\n      setItem(\"data_barang_pesanan\", cek);\r\n      this.setState({\r\n        status: true,\r\n      });\r\n    // }\r\n\r\n    this.props.dispatch(reset(\"ModalTambahBarangPesanan\"));\r\n    this.props.dispatch(hideModal());\r\n  }\r\n  hapusdata(id, row) {\r\n    Swal.fire({\r\n      title: \"Anda Yakin !!\",\r\n      text: \"Ingin Menghapus Data Ini ?\",\r\n      icon: \"warning\",\r\n      position: \"top-center\",\r\n      cancelButtonText: \"Tidak\",\r\n      showCancelButton: true,\r\n      confirmButtonText: \"OK\",\r\n      showConfirmButton: true,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        let data = getItem(\"data_barang_pesanan\");\r\n        data.splice(id, 1);\r\n        setItem(\"data_barang_pesanan\", data);\r\n        this.setState({\r\n          status: \"berhasil\",\r\n        });\r\n      }\r\n    });\r\n  }\r\n  bayarSekarang() {\r\n    this.setState({\r\n      isLoadingPembayranTitipan: true,\r\n    });\r\n    let data_estimasi = getItem(\"estimasi_pesanan\");\r\n    let pembayaran = getItem(\"trx_pemabayaran_pesanan\");\r\n\r\n    let data_pembayaran = [];\r\n    let total_pembayarn = 0;\r\n    let jumlah_rp = 0;\r\n    pembayaran.forEach((element) => {\r\n      if (element.jenis === \"CASH\") {\r\n        if (parseInt(element.nominal) <= Math.abs(parseInt(getItem(\"sisa_bayar_pesanan\").sisa_bayar))) {\r\n          jumlah_rp = Math.abs(parseInt(getItem(\"sisa_bayar_pesanan\").sisa_bayar) - parseInt(element.nominal));\r\n        } else {\r\n          jumlah_rp = parseInt(element.nominal);\r\n        }\r\n        if (parseInt(element.nominal) >= Math.abs(parseInt(getItem(\"sisa_bayar_pesanan\").total_transaksi))) {\r\n          jumlah_rp = parseInt(element.nominal) - Math.abs(parseInt(getItem(\"sisa_bayar_pesanan\").sisa_bayar));\r\n        } else {\r\n          jumlah_rp = parseInt(element.nominal);\r\n        }\r\n      } else {\r\n        jumlah_rp = parseInt(element.nominal);\r\n      }\r\n      // console.log(\"JUMLAH RP - NOMINAL\", element.nominal );\r\n      // console.log(\"JUMLAH RP - SISA BAYAR\", getItem('sisa_bayar_pesanan').sisa_bayar );\r\n      let row = {\r\n        jenis: element.jenis,\r\n        keterangan: element.keterangan,\r\n        fee: element.jenis === \"CREDIT\" ? parseInt(element.fee) || 0 : 0,\r\n        jumlah_rp : jumlah_rp\r\n        // jumlah_rp: element.nominal >= parseInt(getItem('sisa_bayar_pesanan').total_transaksi) ? parseInt(element.nominal) - parseInt(getItem('sisa_bayar_pesanan').sisa_bayar) : parseInt(element.nominal),\r\n      };\r\n      total_pembayarn = element.nominal + total_pembayarn;\r\n      data_pembayaran.push(row);\r\n    });\r\n\r\n    let data_customer = JSON.parse(localStoragedecryp(\"data_customer_tmp\"));\r\n    let data_barang_penjualan = getItem(\"data_barang_pesanan\");\r\n\r\n    let detail_barang = [];\r\n    let total_harga = 0;\r\n    data_barang_penjualan.forEach((item, index) => {\r\n      total_harga = item.sub_total + total_harga;\r\n      let row = {\r\n        kode_kategori: item.kode_kategori,\r\n        perkiraan_berat: parseFloat(item.perkiraan_berat),\r\n        perkiraan_kadar: parseInt(item.perkiraan_kadar),\r\n        harga_gram: parseInt(item.harga_gram),\r\n        attribut: item.attribut || \"-\",\r\n        kode_barcode: item.kode_barcode|| \"-\",\r\n        harga_atribut: parseInt(item.harga_atribut),\r\n        ongkos: parseInt(item.ongkos || 0),\r\n        sub_total: parseInt(item.sub_total),\r\n        keterangan: item.keterangan || \"-\",\r\n        deskripsi: item.deskripsi || \"-\",\r\n        barang_contoh_internal: item.barang_contoh_internal || false,\r\n        deskripsi_contoh: item.deskripsi_contoh || \"-\",\r\n        berat_barang_contoh: parseFloat(item.berat_barang_contoh),\r\n      };\r\n      detail_barang.push(row);\r\n    });\r\n    let datapenjualan = {\r\n      status: \"PESANAN\",\r\n      estimasi_tanggal: data_estimasi,\r\n      kode_sales: data_customer.kode_sales,\r\n      kode_customer:\r\n        data_customer.jenis_pelanggan === \"NONMEMBER\"\r\n          ? data_customer.jenis_pelanggan\r\n          : data_customer.kode_customer,\r\n      nama_customer: data_customer.nama_customer,\r\n      alamat_customer: data_customer.alamat_customer,\r\n      no_hp: data_customer.no_hp,\r\n      detail_barang: detail_barang,\r\n      pembayaran: data_pembayaran,\r\n      total_harga: total_harga,\r\n      jumlah_bayar: total_pembayarn,\r\n      sisa_bayar: Math.abs(parseInt(total_harga) - parseInt(total_pembayarn)),\r\n    };\r\n    postData2(\"pesanan/create\", datapenjualan)\r\n      .then((res) => {\r\n        setItem(\"data_barang_pesanan\", []);\r\n        ToastNotification(\"success\", \"Transaksi Pesanan Berhasil\");\r\nif (res.data.length !== 0) {\r\nlet notapesanan = [];\r\nfor (let index = 0; index < 2; index++) {  \r\nlet feedback = '';\r\nfeedback += `========================================\\n`\r\nfeedback += `               NOTA PESANAN             \\n`\r\nfeedback += `========================================\r\nTanggal          : ${res.data.tanggal}\r\nNama Customer    : ${res.data.nama_customer}\r\nNo Hp            : ${res.data.no_hp}\\n`\r\nfeedback += `========================================\\n`\r\nfeedback += `Keterangan\\n`\r\nfeedback += `========================================\\n`\r\nres.data.detail_barang.forEach((detail, index) => {\r\nfeedback += `No Faktur Pesanan  : ${res.data.no_pesanan}\\n`\r\n// feedback += `Nama Barang        : ${detail.nama_barang}\\n`\r\nfeedback += `Dp                 : ${res.data.dp.toLocaleString(\"kr-KO\")}\\n`\r\nfeedback += `Estimasi Pesanan   : ${res.data.estimasi_tanggal}\\n`\r\nfeedback += `========================================\\n`;\r\nfeedback += `                               TTD      \\n`\r\nfeedback += `                                        \\n`\r\nfeedback += `                                        \\n`\r\nfeedback += `                                        \\n`\r\nfeedback += `                         (             )\\n`\r\nfeedback += `                                        \\n`\r\nfeedback += `                                        \\n`\r\nfeedback += `                                        \\n`\r\n})\r\nnotapesanan.push(feedback)\r\n}\r\ndocument.getElementById(\"nota_pesanan\").value = notapesanan.join('');;\r\nsetTimeout(() => {\r\nthis.TextFilenotapesanan();\r\n}, 100);\r\n}\r\n      })\r\n      .then(() => {\r\n        this.props.dispatch(hideModal());\r\n      })\r\n      .then(() => {\r\n        this.props.dispatch(reset(\"ModalPembayaran\"));\r\n      })\r\n      .then(() => {\r\n        setItem(\"data_barang_pesanan\", []);\r\n        setItem(\"trx_pemabayaran_pesanan\", []);\r\n        setItem(\"data_customer_tmp\", []);\r\n        setItem(\"estimasi_pesanan\", []);\r\n      })\r\n      .then(() => {\r\n        this.setState({\r\n          isLoadingPembayranTitipan: false,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({\r\n          isLoadingPembayranTitipan: false,\r\n        });\r\n        ToastNotification(\"info\", err.response === undefined ? \"Terjadi Kesalahan Saat Request Data, Silahkan Ulangi Lagi\" : err.response.data.message || \"Terjadi Kesalahan Saat Request Data, Silahkan Ulangi Lagi\");\r\n      });\r\n  }\r\n\r\n  showModalPembayaran() {\r\n    // document.getElementById('jenis_pembayaran').focus();\r\n    let customer = getItem(\"data_customer_tmp\") || [];\r\n    let barang = getItem(\"data_barang_pesanan\") || [];\r\n    if (customer.length === 0 || barang.length === 0) {\r\n      ToastNotification(\r\n        \"info\",\r\n        \"Data Customer Atau Data Barang Belum Diisi !!!\"\r\n      );\r\n    } else {\r\n      this.setState({ FormModal: \"ShowModalPembayaran\" });\r\n      this.props.dispatch(showModal());\r\n    }\r\n  }\r\n  TextFilenotapesanan() {\r\n    const element = document.createElement(\"a\");\r\n    const file = new Blob([document.getElementById(\"nota_pesanan\").value], {\r\n      type: \"text/plain;charset=utf-8\",\r\n    });\r\n    element.href = URL.createObjectURL(file);\r\n    element.download = \"autoprint_pesanan.txt\";\r\n    document.body.appendChild(element);\r\n    element.click();\r\n  }\r\n  reset() {\r\n    this.setState({\r\n      loadingreset : true,\r\n    })\r\n    setTimeout(() => {\r\n      setItem(\"data_barang_pesanan\", []);\r\n      setItem(\"trx_pemabayaran_pesanan\", []);\r\n      setItem(\"data_customer_tmp\", []);\r\n      setItem(\"estimasi_pesanan\", []);\r\n      this.setState({\r\n        loadingreset : false,\r\n      })\r\n    }, 100);\r\n  }\r\n  render() {\r\n    const expandRow = {\r\n      renderer: (row) => (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              Ongkos : {row.ongkos.toLocaleString(\"kr-KO\")} <br />\r\n              Nama Atribut : {row.attribut} <br />\r\n              Harga Atribut : {row.harga_atribut.toLocaleString(\"kr-KO\")} <br />\r\n              Betar Barang Contoh : {row.berat_barang_contoh} <br />\r\n              Deskripsi Contoh : {row.deskripsi_contoh} <br />\r\n              Deskripsi Pesanan : {row.deskripsi} <br />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ),\r\n      showExpandColumn: true,\r\n      expandByColumnOnly: true,\r\n    };\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Pesanan</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Transaksi Pesanan</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Transaksi Pesanan </h1>\r\n        <textarea\r\n            style={{ display: \"none\" }}\r\n            id=\"nota_pesanan\"\r\n            rows=\"100\"\r\n            cols=\"100\"\r\n          />\r\n        <Panel>\r\n          <PanelHeader>Transaksi Pesanan</PanelHeader>\r\n          <br />\r\n          {/* Transaksi Pesanan */}\r\n          <PanelBody>\r\n            <Tabel\r\n              keyField=\"kode_barcode\"\r\n              exportCsv={false}\r\n              data={getItem(\"data_barang_pesanan\") || []}\r\n              tambahData={true}\r\n              btnText=\"Data Customer\"\r\n              columns={this.state.columns}\r\n              btnOptional={true}\r\n              namaCustomer={true}\r\n              jenisCustomer={true}\r\n              form=\"Penjualan\"\r\n              btnTextOptional=\"Data Barang\"\r\n              handleClick={() => this.ShowModalCustomer()}\r\n              handleClickOptional={() => this.ShowModalBarang()}\r\n              empty={true}\r\n              textEmpty=\"Data Barang Kosong\"\r\n              expandRow={expandRow}\r\n              margin\r\n              // form=\"Service\"\r\n            />\r\n            <div className=\"row\">\r\n              <div className=\"col-6 text-left\">\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={() => this.showModalPembayaran()}\r\n                >\r\n                  {\" \"}\r\n                  Simpan Pesanan{\" \"}\r\n                </button>\r\n                &nbsp;\r\n                <button\r\n                  className=\"btn btn-warning\"\r\n                  onClick={() => this.reset()}\r\n                >\r\n                 {this.state.loadingreset ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Reset\r\n                  </>\r\n                ) : (\r\n                  \"Reset\"\r\n                )}\r\n                </button>\r\n              </div>\r\n            </div>\r\n            </PanelBody>\r\n          <br />\r\n          {/* End Tambah Blank Page  */}\r\n        </Panel>\r\n        <ModalGlobal\r\n          size={\r\n            this.state.FormModal === \"ShowModalCustomer\"\r\n              ? \"xl\"\r\n              : this.state.FormModal === \"ShowModalBarang\"\r\n              ? \"xl\"\r\n              : \"l\"\r\n          }\r\n          title={\r\n            this.state.FormModal === \"ShowModalCustomer\"\r\n              ? \"Data Customer\"\r\n              : this.state.FormModal === \"ShowModalBarang\"\r\n              ? \"Tambah Barang Pesanan\"\r\n              : \"Form Pembayaran\"\r\n          }\r\n          content={\r\n            this.state.FormModal === \"ShowModalCustomer\" ? (\r\n              <ModalDataCustomer\r\n                isLoadingDataCustomer={this.state.isLoadingDataCustomer}\r\n                onSubmit={(data) => this.handleSubmit(data)}\r\n              />\r\n            ) : this.state.FormModal === \"ShowModalBarang\" ? (\r\n              <ModalTambahBarangPesanan\r\n                isLoadingTopBar={this.props.isLoadingTopBar}\r\n                hideModal={() => this.hideModa()}\r\n                onSubmit={(data) => this.simpanBarang(data)}\r\n              />\r\n            ) : (\r\n              <ModalPembayaran\r\n                isLoadingPembayranTitipan={this.state.isLoadingPembayranTitipan}\r\n                isLoadingPembayran={this.state.isLoadingPembayran}\r\n                bayarSekarang={(data) => this.bayarSekarang(data)}\r\n                simpanPembayaran={(data) => this.simpanPembayaran(data)}\r\n              />\r\n            )\r\n          }\r\n        />\r\n        {this.props.isLoadingPembayranTitipan ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPesanan = reduxForm({\r\n  form: \"Pesanan\",\r\n  enableReinitialize: true,\r\n})(Pesanan);\r\nexport default connect()(Pesanan);\r\n","const ValidasiPembayaran = (value) => {\r\n    const errors = {};\r\n    if (!value.jenis) {\r\n        errors.jenis = \"Jenis Tidak Boleh Kosong\";\r\n    }\r\n    // if (!value.cash) {\r\n    //     errors.cash = \"Nominal Tidak Boleh Kosong\";\r\n    // }\r\n\r\n    return errors;\r\n}\r\n\r\nexport default ValidasiPembayaran;\r\n\r\n\r\n","const ValidasiFormDataMemberPenjualan = (value) => {\r\n    const errors = {};\r\n    if (!value.kode_sales) {\r\n        errors.kode_sales = \"Kode Sales Harus Dipilih\";\r\n    }\r\n    if (!value.nama_customer) {\r\n        errors.nama_customer = \"Nama Customer Harus Diisi\";\r\n    }\r\n    if (!value.no_hp) {\r\n        errors.no_hp = \"No Hp Harus Diisi\";\r\n    }\r\n    if (!value.alamat) {\r\n        errors.alamat = \"Alamat Harus Diisi\";\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\nexport default ValidasiFormDataMemberPenjualan;\r\n\r\n\r\n"],"sourceRoot":""}