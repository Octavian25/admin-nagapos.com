{"version":3,"sources":["pages/Laporan/LaporanPenjualan/LaporanPenjualanTukar/pdf/ExportPenjualanTukar.jsx","pages/Laporan/LaporanPenjualan/LaporanPenjualanTukar/exel/LaporanExelPenjualanTukar.jsx","pages/Laporan/LaporanPenjualan/LaporanPenjualanTukar/HeadFormLaporanPenjualanTukar.jsx"],"names":["ExportBatalPenjualan","data","username","tanggal_dari","tanggal_sampai","doc","jsPDF","tableRows","footRows","tableColumn","finalY","total_baraang","total_qty","total_harga_gram","total_harga_beli","total_berat","setFontSize","text","getUserdata","nama_toko","jml_alamat","alamat_toko","length","slice","setProperties","title","concat","localStoragedecryp","JSON","parse","tgl_awal","tgl_akhir","content","styles","halign","forEach","item","index","tot_qty","tot_berat","tot_harga_beli","tot_harga_gram","header","no_faktur_group_user","colSpan","push","detail_barang","rows","nama_barang","parseInt","qty","pembulatan","harga_gram","toLocaleString","berat","toFixed","harga_beli","parseFloat","footer","fillColor","textColor","printed","user_id","getToday","fontStyle","autoTable","head","body","foot","startY","theme","rowPageBreak","margin","top","footStyles","fontSize","bodyStyles","headStyles","tableLineColor","tableLineWidth","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","string","output","x","window","open","document","write","LaporanExelPenjualanTukar","Component","constructor","props","super","this","state","render","total_barang","barang","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","style","display","textAlign","backgroundColor","color","map","row","HeadFormLaporanPenjualanTukar","date","Date","setStartDate","bind","setLastDate","exportPdf","LaporanDataPenjualan","setState","databarang","kadar","harga_nota","element","detail","columns","dataField","footerAttrs","cell","num","headerClasses","formatter","onSubmit","handleSubmit","autoComplete","Field","name","component","InputDate","label","type","selected","onChange","placeholder","value","isLoading","tabel","keyField","export","empty","textEmpty","onClick","exel_LaporanExelPenjualanTukar","loading_default","loading","background","loaderColor","reduxForm","form","enableReinitialize","validate","ValidasiTanggalLaporan","connect","initialValues","getTglSystem"],"mappings":"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","file":"static/js/96.2b6e896f.chunk.js","sourcesContent":["import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport {\r\n  getToday,\r\n  getUserdata,\r\n  localStoragedecryp,\r\n  pembulatan,\r\n} from \"../../../../../components/helpers/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst ExportBatalPenjualan = (\r\n  data = \"\",\r\n  username = \"\",\r\n  tanggal_dari = \"\",\r\n  tanggal_sampai = \"\"\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  let footRows = [];\r\n  let tableColumn = [];\r\n  let finalY = 30;\r\n  let total_baraang = 0;\r\n  let total_qty = 0;\r\n  let total_harga_gram = 0;\r\n  let total_harga_beli = 0;\r\n  let total_berat = 0;\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN BARANG TUKAR\", 14, 15);\r\n  doc.setFontSize(20);\r\n  doc.text(getUserdata().nama_toko, 200, 15);\r\n  doc.setFontSize(8);\r\n  let jml_alamat = getUserdata().alamat_toko.length;\r\n  if (jml_alamat > 20) {\r\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\r\n  }\r\n  if (jml_alamat > 50) {\r\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\r\n  }\r\n  doc.setFontSize(10);\r\n  doc.setProperties({\r\n    title: \"LAPORAN BARANG TUKAR\",\r\n  });\r\n  //row 1\r\n  doc.text(\r\n    `PERIODE : ${\r\n      localStoragedecryp(\"tgl_laporan\").length === 0\r\n        ? null\r\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n          \" s/d \" +\r\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\r\n    }`,\r\n    14,\r\n    25\r\n  );\r\n  tableColumn = [\r\n    [\r\n      {\r\n        content: `NAMA BARANG`,\r\n      },\r\n      {\r\n        content: `QTY`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      {\r\n        content: `HARGA/GRAM`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      {\r\n        content: `BERAT`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      \r\n      {\r\n        content: `TOTAL HARGA`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n    ],\r\n  ];\r\n  data.forEach((item, index) => {\r\n    let tot_qty = 0;\r\n    let tot_berat = 0;\r\n    let tot_harga_beli = 0;\r\n    let tot_harga_gram = 0;\r\n    let header = [\r\n      {\r\n        content: `Nomor Faktur Group : ${\r\n          item.no_faktur_group_user\r\n        }`,\r\n        colSpan: 5,\r\n      },\r\n    ];\r\n    tableRows.push(header);\r\n    item.detail_barang.forEach((item, index) => {\r\n      let rows = [\r\n        item.nama_barang,\r\n        {\r\n          content: parseInt(item.qty),\r\n          styles: {\r\n            halign: 'right',\r\n          },\r\n        },\r\n        {\r\n          content:pembulatan(parseInt(item.harga_gram)).toLocaleString(\"kr-KO\"),\r\n          styles: {\r\n            halign: 'right',\r\n          },\r\n        },\r\n        {\r\n          content: item.berat.toFixed(2),\r\n          styles: {\r\n            halign: 'right',\r\n          },\r\n        },\r\n        \r\n        {\r\n          content:  parseInt(item.harga_beli).toLocaleString(\"kr-KO\"),\r\n          styles: {\r\n            halign: 'right',\r\n          },\r\n        },\r\n\r\n      ];\r\n      total_qty = parseFloat(total_qty) + parseFloat(item.qty);\r\n      total_harga_gram = total_harga_gram + parseInt(item.harga_gram);\r\n      total_berat = total_berat + parseFloat(item.berat);\r\n      total_harga_beli = total_harga_beli + parseInt(item.harga_beli);\r\n\r\n      tot_qty = tot_qty + parseFloat(item.qty);\r\n      tot_harga_gram = tot_harga_gram + parseInt(item.harga_gram);\r\n      tot_berat = tot_berat + parseFloat(item.berat);\r\n      tot_harga_beli = tot_harga_beli + parseInt(item.harga_beli);\r\n\r\n      tableRows.push(rows);\r\n    });\r\n\r\n    total_baraang = total_baraang + item.detail_barang.length;\r\n    // localStorage.setItem('hasil',JSON.stringify(item.detail.length))\r\n    // console.log();\r\n    // let total = [\r\n    //   {\r\n    //     content: `Sub Total : ${item.detail_barang.length}`,\r\n    //     colSpan: 1,\r\n    //     styles: {\r\n    //       halign: 'center',\r\n    //       fillColor: \"#E8E5E5\",\r\n    //       textColor: \"#000\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     content: `${tot_qty}`,\r\n    //     styles: {\r\n    //       halign: 'right',\r\n    //       fillColor: \"#E8E5E5\",\r\n    //       textColor: \"#000\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     content: `${parseInt(tot_harga_gram).toLocaleString(\"kr-KO\")}`,\r\n    //     styles: {\r\n    //       halign: 'right',\r\n    //       fillColor: \"#E8E5E5\",\r\n    //       textColor: \"#000\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     content: `${formatGram(tot_berat,3)}`,\r\n    //     styles: {\r\n    //       halign: 'right',\r\n    //       fillColor: \"#E8E5E5\",\r\n    //       textColor: \"#000\",\r\n    //     },\r\n    //   },\r\n     \r\n    //   {\r\n    //     content: `${parseInt(tot_harga_beli).toLocaleString(\"kr-KO\")}`,\r\n    //     styles: {\r\n    //       halign: 'right',\r\n    //       fillColor: \"#E8E5E5\",\r\n    //       textColor: \"#000\",\r\n    //     },\r\n    //   },\r\n    // ];\r\n    // tableRows.push(total);\r\n\r\n  });\r\n  let footer = [\r\n    {\r\n      content: `Grand Total Barang : ${total_baraang}`,\r\n      colSpan: 1,\r\n      styles: {\r\n        halign: 'center',\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: `${total_qty}`,\r\n      styles: {\r\n        halign: 'right',\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: `${pembulatan(parseInt(total_harga_gram)).toLocaleString(\"kr-KO\")}`,\r\n      styles: {\r\n        halign: 'right',\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: `${total_berat.toFixed(2)}`,\r\n      styles: {\r\n        halign: 'right',\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n   \r\n    {\r\n      content: `${parseInt(total_harga_beli).toLocaleString(\"kr-KO\")}`,\r\n      styles: {\r\n        halign: 'right',\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n  ];\r\n  tableRows.push(footer);\r\n\r\n  let printed = [\r\n    {\r\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\r\n      colSpan: 11,\r\n      styles: {\r\n        // lineWidth: 0.1,\r\n        fontStyle: \"italic\",\r\n        textColor: \"#000\",\r\n        // fillColor: \"#E8E5E5\"\r\n      },\r\n    },\r\n  ]\r\n  tableRows.push(printed);\r\n\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    foot: footRows,\r\n    startY: finalY,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    // pageBreak: \"avoid\",\r\n    margin: { top: 10 },\r\n    footStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    bodyStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    headStyles: {\r\n      fontSize: 8,\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      textColor: \"#000\",\r\n      fillColor: \"#E8E5E5\",\r\n    },\r\n    tableLineColor: [255, 255, 255],\r\n    tableLineWidth: 1,\r\n  });\r\n  finalY = doc.autoTableEndPosY() + 3;\r\n  tableRows = [];\r\n  footRows = [];\r\n  // total_baraang = 0;\r\n  // tot_berat = 0;\r\n  // tot_onkos = 0;\r\n  // tot_harga_jual = 0;\r\n  // tot_harga_gram = 0;\r\n  // tot_berat_atribut = 0;\r\n  // tot_harga_atribut = 0;\r\n  // tot_harga_total = 0;\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  // doc.text(\r\n  //   `User                           :  ${\r\n  //     JSON.parse(localStoragedecryp(\"userdata\")).user_id\r\n  //   }`,\r\n  //   14,\r\n  //   finalY + 10\r\n  // );\r\n  // doc.text(`Cetak                        : ${getToday()}`, 14, finalY + 16);\r\n  // doc.text(`Total Barang Yang Di batal : ${total_baraang}`, 14, finalY + 20);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  // doc.autoPrint();\r\n  // doc.save(`LAPORAN BATAL PENJUALAN.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(\r\n    \"<html><head><title>LAPORAN BARANG TUKAR</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n      string +\r\n      \"></embed></body></html>\"\r\n  );\r\n  // x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default ExportBatalPenjualan;\r\n","import React, { Component } from \"react\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport { getUserdata, localStoragedecryp, pembulatan } from \"../../../../../components/helpers/function\";\r\nclass LaporanExelPenjualanTukar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    let qty = 0;\r\n    let berat = 0;\r\n    let harga_beli = 0;\r\n    let harga_gram = 0;\r\n    let total_barang = 0;\r\n    this.props.data.forEach((barang, index) => {\r\n      barang.detail_barang.forEach((item, index) => {\r\n        qty = qty + item.qty;\r\n        berat = berat + item.berat;\r\n        harga_beli = harga_beli + item.harga_beli;\r\n        harga_gram = harga_gram + item.harga_gram\r\n      });\r\n      total_barang = total_barang + barang.detail_barang.length;\r\n    });\r\n    return (\r\n      <>\r\n        <ReactHTMLTableToExcel\r\n          id=\"test-table-xls-button\"\r\n          className=\"btn btn-success btn-block\"\r\n          table=\"table-to-xls\"\r\n          filename=\"Laporan Barang Tukar\"\r\n          sheet=\"Laporan Barang Tukar\"\r\n          buttonText=\"Export Exel\"\r\n        />\r\n        <table id=\"table-to-xls\" style={{ display: \"none\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan=\"5\" style={{ textAlign: \"center\" }}>\r\n                {\" \"}\r\n                LAPORAN BARANG TUKAR{\" \"}\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"5\"> Periode </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"5\">\r\n                {\" \"}\r\n                {localStoragedecryp(\"tgl_laporan\").length === 0\r\n                  ? null\r\n                  : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n                    \" s/d \" +\r\n                    JSON.parse(localStoragedecryp(\"tgl_laporan\"))\r\n                      .tgl_akhir}{\" \"}\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"5\"> TOKO :  {getUserdata().nama_toko} </th>\r\n            </tr>\r\n           \r\n            <tr>\r\n              <th colSpan=\"5\"> ALAMAT :  {getUserdata().alamat_toko} </th>\r\n            </tr>\r\n            <tr></tr>\r\n            <tr>\r\n                  <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                    NAMA BARANG\r\n                  </td>\r\n                  <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                    QTY\r\n                  </td>\r\n                  <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                    HARGA/GRAM\r\n              </td>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                    BERAT\r\n                  </td>\r\n                  <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign: \"right\" }}>\r\n                    TOTAL HARGA\r\n                  </td>\r\n                </tr>\r\n          </thead>\r\n          {this.props.data.map((item, index) => (\r\n            <>\r\n              <tbody>\r\n                {item.detail_barang.map((row, index) => (\r\n                  <tr>\r\n                    <td>\r\n                      {row.nama_barang}\r\n                    </td>\r\n                    <td>\r\n                      {row.qty}\r\n                    </td>\r\n                    <td style={{textAlign: \"right\"}}>\r\n                      {pembulatan(row.harga_gram).toLocaleString(\"kr-KO\")}\r\n                    </td>\r\n                    <td style={{textAlign: \"right\"}}>\r\n                      {row.berat.toFixed(2)}\r\n                    </td>\r\n                    <td style={{textAlign: \"right\"}}>\r\n                      {row.harga_beli.toLocaleString(\"kr-KO\")}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n             \r\n            </>\r\n          ))}\r\n          <tfoot>\r\n          <tr>\r\n                  <td colSpan=\"1\" style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",  textAlign: \"center\" }}>\r\n                    Grand Total Barang : {total_barang}\r\n                  </td>\r\n                  <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\", textAlign: \"right\"  }}>\r\n                    {\" \"}\r\n                    {qty}{\" \"}\r\n                  </td>\r\n                  <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign: \"right\"   }}>\r\n                    {\" \"}\r\n                    {pembulatan(harga_gram).toLocaleString(\"kr-KO\")}{\" \"}\r\n                  </td>\r\n                  <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\", textAlign: \"right\"  }}>\r\n                    {\" \"}\r\n                    {berat.toFixed(2)}{\" \"}\r\n                  </td>\r\n                \r\n                  <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\", textAlign: \"right\"  }}>\r\n                    {\" \"}\r\n                    {harga_beli.toLocaleString(\"kr-KO\")}{\" \"}\r\n                  </td>\r\n            </tr>\r\n            </tfoot>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default LaporanExelPenjualanTukar;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { InputDate } from \"../../../../components/helpers/field\";\r\nimport { getTglSystem, pembulatan } from \"../../../../components/helpers/function\";\r\nimport Tabel from \"../../../../components/helpers/tabel\";\r\nimport ValidasiTanggalLaporan from \"../../../../Validasi/ValidasiTanggalLaporan\";\r\n// import LaporanBatalServiceExel from \"./exel/LaporanBatalServiceExel\";\r\nimport ExportBatalPenjualan from \"./pdf/ExportPenjualanTukar\";\r\nimport Loading from 'react-fullscreen-loading';\r\nimport LaporanExelPenjualanTukar from \"./exel/LaporanExelPenjualanTukar\";\r\n\r\nclass HeadFormLaporanPenjualanTukar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: new Date(),\r\n    };\r\n    // this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.setStartDate = this.setStartDate.bind(this);\r\n    this.setLastDate = this.setLastDate.bind(this);\r\n  }\r\n\r\n  exportPdf() {\r\n    ExportBatalPenjualan(this.props.LaporanDataPenjualan);\r\n  }\r\n  setStartDate(date) {\r\n    this.setState({\r\n      tgl_awal: new Date(date),\r\n    });\r\n  }\r\n  setLastDate(date) {\r\n    this.setState({\r\n      tgl_akhir: new Date(date),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let databarang = [];\r\n    let qty = 0;\r\n    let kadar = 0;\r\n    let berat = 0;\r\n    let harga_nota = 0;\r\n    let harga_beli = 0;\r\n    let harga_gram = 0;\r\n    this.props.LaporanDataPenjualan.forEach((element) => {\r\n      element.detail_barang.forEach((detail) => {\r\n        databarang.push(detail);\r\n        qty = qty + detail.qty\r\n        kadar = kadar + detail.kadar\r\n        berat = berat + detail.berat\r\n        harga_nota = harga_nota + detail.harga_nota\r\n        harga_beli = harga_beli + detail.harga_beli\r\n        harga_gram = harga_gram + detail.harga_gram\r\n      });\r\n    });\r\n    const columns = [\r\n      // {\r\n      //   dataField: \"kode_dept\",\r\n      //   text: \"Jenis\",\r\n      //   footer: '',\r\n      // },\r\n      {\r\n        dataField: \"nama_barang\",\r\n        text: \"Nama Barang\",\r\n        footerAttrs: {\r\n          colSpan: \"1\",\r\n        },\r\n        footer: (cell, row, num, index) => {\r\n          return <div>Total Barang  : {databarang.length} </div>;\r\n        },\r\n      },\r\n     \r\n      {\r\n        dataField: \"qty\",\r\n        text: \"Qty\",\r\n        headerClasses: 'text-right',\r\n        footer: (cell, row, num, index) => {\r\n          return <div className=\"text-right\">{qty} </div>;\r\n        },\r\n        formatter: (cell) => {\r\n          return <div className=\"text-right\">{cell}</div>;\r\n        },\r\n      },\r\n\r\n      {\r\n        dataField: \"harga_gram\",\r\n        text: \"Harga/Gram\",\r\n        headerClasses: 'text-right',\r\n        footer: (cell, row, num, index) => {\r\n          return <div className=\"text-right\">{pembulatan(harga_gram).toLocaleString(\"kr-KO\")} </div>;\r\n        },\r\n        formatter: (cell) => {\r\n          return <div className=\"text-right\">{pembulatan(cell).toLocaleString(\"kr-KO\")}</div>;\r\n        },\r\n      },\r\n     \r\n      {\r\n        dataField: \"berat\",\r\n        text: \"Berat\",\r\n        headerClasses: 'text-right',\r\n        footer: (cell, row, num, index) => {\r\n          return <div className=\"text-right\">{berat.toFixed(2)} </div>;\r\n        },\r\n        formatter: (cell) => {\r\n          return <div className=\"text-right\">{cell.toFixed(2)}</div>;\r\n        },\r\n      },\r\n      {\r\n        dataField: \"harga_beli\",\r\n        text: \"Total Harga\",\r\n        headerClasses: 'text-right',\r\n        footer: (cell, row, num, index) => {\r\n          return <div className=\"text-right\">{harga_beli.toLocaleString(\"kr-KO\")} </div>;\r\n        },\r\n        formatter: (cell) => {\r\n          return <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>;\r\n        },\r\n      }\r\n    ];\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_awal\"\r\n              component={InputDate}\r\n              label=\"Tanggal Dari\"\r\n              type=\"text\"\r\n              selected={this.state.tgl_awal}\r\n              onChange={(date) => this.setStartDate(date)}\r\n              placeholder=\"Masukan Tanggal Dari\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_akhir\"\r\n              component={InputDate}\r\n              type=\"text\"\r\n              selected={this.state.tgl_akhir}\r\n              onChange={(date) => this.setLastDate(date)}\r\n              label=\"Tanggal Akhir\"\r\n              placeholder=\"Masukan Tanggal Akhir\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-4\">\r\n            <div className=\"text-right\">\r\n              <label>&nbsp;</label>\r\n              <button\r\n                type=\"submit\"\r\n                value=\"PDF\"\r\n                name=\"type_btn\"\r\n                className=\"btn btn-primary btn-block\"\r\n              >\r\n                {this.props.isLoading ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Mencari\r\n                  </>\r\n                ) : (\r\n                  \"Cari Laporan\"\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <Tabel\r\n              keyField=\"kode_barcode\"\r\n              data={this.props.export ? databarang  :  []}\r\n              columns={columns}\r\n              empty={true}\r\n              textEmpty=\"Data Laporan Batal Penjualan Kosong\"\r\n            />\r\n          </div>\r\n          \r\n          <div className={this.props.export ? \"col-lg-12\" : \"col-lg-12 d-none\"}>\r\n            {/* <label htmlFor=\"\">&nbsp;</label> */}\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-6\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => this.exportPdf()}\r\n                  className=\"btn btn-warning btn-block\"\r\n                >\r\n                  {\" \"}\r\n                  Export PDF{\" \"}\r\n                </button>\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <LaporanExelPenjualanTukar data={this.props.LaporanDataPenjualan} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {this.props.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadFormLaporanPenjualanTukar = reduxForm({\r\n  form: \"HeadFormLaporanPenjualanTukar\",\r\n    enableReinitialize: true,\r\n  validate: ValidasiTanggalLaporan \r\n})(HeadFormLaporanPenjualanTukar);\r\nexport default connect((state) => {\r\n  return {\r\n    initialValues: {\r\n      tgl_awal: getTglSystem(),\r\n      tgl_akhir: getTglSystem(),\r\n    },\r\n  };\r\n})(HeadFormLaporanPenjualanTukar);\r\n\r\n\r\n// import React, { Component } from \"react\";\r\n// import { connect } from \"react-redux\";\r\n// import { Field, reduxForm } from \"redux-form\";\r\n// import { ReanderField } from \"../../../../components/helpers/field\";\r\n// import { getToday } from \"../../../../components/helpers/function\";\r\n// import ValidasiLaporanPenjualanSales from \"../../../../Validasi/Penjualan/ValidasiLaporanPenjualanSales\";\r\n\r\n// class HeadFormLaporanPenjualanTukar extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       date: new Date(),\r\n//     };\r\n//   }\r\n//   render() {\r\n//     return (\r\n//       <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\r\n//         <div className=\"row\">\r\n//           <div className=\"col-lg-4\">\r\n//             <Field\r\n//               name=\"tanggal_awal\"\r\n//               component={ReanderField}\r\n//               type=\"date\"\r\n//               label=\"Dari Tanggal\"\r\n//               placeholder=\"Masukan Tanggal Awal\"\r\n//             />\r\n//           </div>\r\n//           <div className=\"col-lg-4\">\r\n//             <Field\r\n//               name=\"sampai_tgl\"\r\n//               component={ReanderField}\r\n//               type=\"date\"\r\n//               label=\"Sampai Tanggal\"\r\n//             />\r\n//           </div>\r\n\r\n//           <div className=\"col-lg-4\">\r\n//             <div className=\"text-right\">\r\n//               <label>&nbsp;</label>\r\n//               <button\r\n//                 type=\"submit\"\r\n//                 value=\"PDF\"\r\n//                 name=\"type_btn\"\r\n//                 className=\"btn btn-primary btn-block\"\r\n//                 disabled={this.props.isLoading}\r\n//               >\r\n//                 {this.props.isLoading ? (\r\n//                   <>\r\n//                     <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n//                     Mencari\r\n//                   </>\r\n//                 ) : (\r\n//                   \"Cari Laporan\"\r\n//                 )}\r\n//               </button>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </form>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// HeadFormLaporanPenjualanTukar = reduxForm({\r\n//   form: \"HeadFormLaporanPenjualanTukar\",\r\n//   enableReinitialize: true,\r\n//   validate: ValidasiLaporanPenjualanSales,\r\n// })(HeadFormLaporanPenjualanTukar);\r\n// // export default connect(null)(HeadFormLaporanPenjualanTukar);\r\n\r\n// export default connect((state) => {\r\n//   return {\r\n//     initialValues: {\r\n//       tanggal_awal : getToday(),\r\n//       sampai_tgl : getToday(),\r\n//     },\r\n//   };\r\n// })(HeadFormLaporanPenjualanTukar);\r\n"],"sourceRoot":""}