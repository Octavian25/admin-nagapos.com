{"version":3,"sources":["pages/Pembelian/LihatPembelian.jsx/HeadBatalBeli.jsx","pages/Pembelian/LihatPembelian.jsx/HeadPembelian.jsx","pages/Pembelian/LihatPembelian.jsx/FormLihatPembelian.jsx","Validasi/ManageUsers/ValidasiDataUsers.jsx","Validasi/Services/ValidasiServicesSelesai.jsx"],"names":["HeadBatalBeli","Component","constructor","props","super","this","state","date","Date","columns","dataField","text","footer","formatter","cell","react_default","a","createElement","parseFloat","toFixed","columnData","reduce","acc","item","parseInt","toLocaleString","render","onSubmit","handleSubmit","onKeyPress","e","key","preventDefault","autoComplete","className","Field","id","name","component","HiidenFiled","type","readOnly","ReanderField","label","placeholder","tabel","keyField","exportCsv","data","detail_barang","pagination","empty","textEmpty","onClick","back","tabIndex","disabled","isLoadingBatalBeli","Fragment","loading_default","loading","background","loaderColor","reduxForm","form","enableReinitialize","validate","ValidasiServicesSelesai","connect","pembelian","showModalBatalBeli","initialValues","no_faktur_group","nama_customer","no_hp","alamat_customer","HeadPembelian","isLoading","isLoadingBatal","FormModal","setStartDate","bind","setLastDate","componentDidMount","setState","tgl_awal","tgl_akhir","InputDate","selected","onChange","ValidasiDataUsers","getTglSystem","React","isLoadingServicesSelesai","dataservices","pembayaran","footerAttrs","colSpan","csvExport","headerClasses","rowcontent","row","index","data-tooltip","shoBatalPembelian","ReprintPembelian","hasil","postData","then","res","feedback","notabeli","forEach","jml_alamat","head","n_alamat_customer","length","concat","tgl_system","split","total","harga_nota","detail","harga","no_faktur_beli","kode_dept","nama_barang","berat","document","getElementById","value","console","log","element","file","Blob","href","URL","createObjectURL","download","body","appendChild","click","catch","err","ToastNotification","message","_id","kode_sales","kode_gudang","dispatch","data_post","formatDate","moment","format","localStorageencryp","JSON","stringify","datapembelian","batalPembelian","setTimeout","tgl_laporan","localStoragedecryp","parse","react_router_dom","to","panel","style","display","rows","cols","LihatPembelian_jsx_HeadBatalBeli","LihatPembelian_jsx_HeadPembelian","errors","user_id","user_name","level","tgl_selesai","tgl_ambil"],"mappings":"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","file":"static/js/15.ae7c8da1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { HiidenFiled, ReanderField } from \"../../../components/helpers/field\";\r\nimport Tabel from \"../../../components/helpers/tabel\";\r\nimport ValidasiServicesSelesai from \"../../../Validasi/Services/ValidasiServicesSelesai\";\r\nimport Loading from 'react-fullscreen-loading';\r\n\r\nclass HeadBatalBeli extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: new Date(\"Y-m-d\"),\r\n      columns: [\r\n        {\r\n          dataField: \"nama_barang\",\r\n          text: \"Nama Barang\",\r\n          footer: \"\",\r\n        },\r\n        {\r\n          dataField: \"berat\",\r\n          text: \"Berat\",\r\n          formatter: (cell) => {\r\n            return <span>{parseFloat(cell).toFixed(1)}</span>;\r\n          },\r\n          footer: (columnData) =>\r\n            parseFloat(columnData.reduce((acc, item) => acc + item, 0)).toFixed(\r\n              1\r\n            ),\r\n        },\r\n        {\r\n          dataField: \"berat_nota\",\r\n          text: \"Berat Nota\",\r\n          formatter: (cell) => {\r\n            return <span>{parseFloat(cell).toFixed(1)}</span>;\r\n          },\r\n          footer: (columnData) =>\r\n            parseFloat(columnData.reduce((acc, item) => acc + item, 0)).toFixed(\r\n              1\r\n            ),\r\n        },\r\n        {\r\n          dataField: \"harga_nota\",\r\n          text: \"Harga Nota\",\r\n          formatter: (cell) => {\r\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\r\n          },\r\n          footer: (columnData) =>\r\n            parseInt(\r\n              columnData.reduce((acc, item) => acc + item, 0)\r\n            ).toLocaleString(\"kr-KO\"),\r\n        },\r\n        {\r\n          dataField: \"harga\",\r\n          text: \"Harga\",\r\n          formatter: (cell) => {\r\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\r\n          },\r\n          footer: (columnData) =>\r\n            parseInt(\r\n              columnData.reduce((acc, item) => acc + item, 0)\r\n            ).toLocaleString(\"kr-KO\"),\r\n        },\r\n        {\r\n          dataField: \"harga_rata\",\r\n          text: \"Harga Rata\",\r\n          formatter: (cell) => {\r\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\r\n          },\r\n          footer: (columnData) =>\r\n            parseInt(\r\n              columnData.reduce((acc, item) => acc + item, 0)\r\n            ).toLocaleString(\"kr-KO\"),\r\n        },\r\n        {\r\n          dataField: \"kondisi\",\r\n          text: \"Kondisi\",\r\n          footer: \"\",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n        autoComplete=\"off\"\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <Field\r\n              id=\"no_faktur_group\"\r\n              name=\"no_faktur_group\"\r\n              component={HiidenFiled}\r\n              type=\"hidden\"\r\n              readOnly={true}\r\n            />\r\n            <Field\r\n              name=\"nama_customer\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              readOnly={true}\r\n              label=\"Nama Customer\"\r\n              placeholder=\"Masukan Nama Customer\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              name=\"no_hp\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              readOnly={true}\r\n              label=\"No Hp\"\r\n              placeholder=\"Masukan No Hp\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              name=\"alamat_customer\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              readOnly={true}\r\n              label=\"Alamat Customer\"\r\n              placeholder=\"Masukan Alamat Customer\"\r\n            />\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <Tabel\r\n              keyField=\"nama_barang\"\r\n              exportCsv={false}\r\n              data={this.props.detail_barang}\r\n              columns={this.state.columns}\r\n              pagination=\"off\"\r\n              empty={true}\r\n              textEmpty=\"Data Barang Kosong\"\r\n            />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={this.props.back}\r\n              className=\"btn btn-primary btn-block\"\r\n            >\r\n              <i className=\"fa fa-arrow-left\"></i> Kembali\r\n            </button>\r\n          </div>\r\n          <div className=\"col-9\">\r\n          <button\r\n          tabIndex=\"2\"\r\n              className=\"btn btn-primary btn-block\"\r\n              disabled={this.props.isLoadingBatalBeli}\r\n              type=\"submit\"\r\n            >\r\n              {this.props.isLoadingBatalBeli ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Membatal\r\n                </>\r\n              ) : (\r\n                \"Batal Pembelian\"\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        {this.props.isLoadingBatalBeli ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null}\r\n        {/* <ModalGlobal title=\"Pembayaran\" content={<ModalPembayaran />} /> */}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadBatalBeli = reduxForm({\r\n  form: \"HeadBatalBeli\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiServicesSelesai,\r\n})(HeadBatalBeli);\r\n// export default connect(maptostate, null)(HeadBatalBeli);\r\n\r\nexport default connect((state) => {\r\n  return {\r\n    detail_barang: state.pembelian.showModalBatalBeli.detail_barang,\r\n    initialValues: {\r\n      no_faktur_group: state.pembelian.showModalBatalBeli.no_faktur_group,\r\n      nama_customer: state.pembelian.showModalBatalBeli.nama_customer,\r\n      no_hp: state.pembelian.showModalBatalBeli.no_hp,\r\n      alamat_customer: state.pembelian.showModalBatalBeli.alamat_customer,\r\n    },\r\n  };\r\n})(HeadBatalBeli);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { InputDate } from \"../../../components/helpers/field\";\r\nimport { getTglSystem } from \"../../../components/helpers/function\";\r\nimport ValidasiDataUsers from \"../../../Validasi/ManageUsers/ValidasiDataUsers\";\r\nimport Loading from 'react-fullscreen-loading';\r\n\r\nclass HeadPembelian extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isLoadingBatal: false,\r\n      FormModal: \"\",\r\n    };\r\n    this.setStartDate = this.setStartDate.bind(this);\r\n    this.setLastDate = this.setLastDate.bind(this);\r\n  }\r\n  componentDidMount() {}\r\n  setStartDate(date) {\r\n    this.setState({\r\n      tgl_awal: new Date(date),\r\n    });\r\n  }\r\n  setLastDate(date) {\r\n    this.setState({\r\n      tgl_akhir: new Date(date),\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n        autoComplete=\"off\"\r\n      >\r\n        <div className=\"row\">\r\n        <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_awal\"\r\n              component={InputDate}\r\n              label=\"Tanggal Dari\"\r\n              type=\"text\"\r\n              selected={this.state.tgl_awal}\r\n              onChange={(date) => this.setStartDate(date)}\r\n              placeholder=\"Masukan Tanggal Dari\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_akhir\"\r\n              component={InputDate}\r\n              type=\"text\"\r\n              selected={this.state.tgl_akhir}\r\n              onChange={(date) => this.setLastDate(date)}\r\n              label=\"Tanggal Akhir\"\r\n              placeholder=\"Masukan Tanggal Akhir\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <label> &nbsp;</label>\r\n            <button\r\n              className=\"btn btn-primary btn-block\"\r\n              disabled={this.props.isLoading}\r\n              type=\"submit\"\r\n            >\r\n              {this.props.isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Mencari\r\n                </>\r\n              ) : (\r\n                \"Cari Pembelian\"\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {this.props.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadPembelian = reduxForm({\r\n  form: \"HeadPembelian\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiDataUsers,\r\n})(HeadPembelian);\r\n// export default connect(maptostate, null)(HeadPembelian);\r\n\r\nexport default connect((state) => {\r\n  return {\r\n    initialValues: {\r\n      tgl_awal : getTglSystem(),\r\n      tgl_akhir : getTglSystem()\r\n    },\r\n  };\r\n})(HeadPembelian);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { showModalBatalBeli } from \"../../../actions/pembelian_action.jsx\";\r\nimport { formatDate, localStoragedecryp, localStorageencryp } from \"../../../components/helpers/function.jsx\";\r\nimport { ToastNotification } from \"../../../components/helpers/notification.jsx\";\r\nimport Tabel from \"../../../components/helpers/tabel.jsx\";\r\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\r\nimport { postData } from \"../../../config/axios.jsx\";\r\nimport HeadBatalBeli from \"./HeadBatalBeli.jsx\";\r\nimport HeadPembelian from \"./HeadPembelian.jsx\";\r\nimport * as moment from \"moment-timezone\";\r\nimport Loading from 'react-fullscreen-loading';\r\n\r\n// import HeadPembelian from \"./HeadPembelian.jsx\";\r\nclass FormLihatPembelian extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoadingServicesSelesai: false,\r\n      isLoadingBatalBeli: false,\r\n      isLoading: false,\r\n      dataservices: [],\r\n      FormModal: false,\r\n      pembayaran: false,\r\n      columns: [\r\n       \r\n        {\r\n          dataField: \"no_faktur_beli\",\r\n          text: \"No FB\",\r\n          footerAttrs: {\r\n            colSpan: \"3\",\r\n          },\r\n          footer: \"Total\",\r\n        },\r\n        {\r\n          dataField: \"nama_customer\",\r\n          text: \"Nama Customer\",\r\n        },\r\n        // {\r\n        //   dataField: \"alamat_customer\",\r\n        //   text: \"Alamat Customer\",\r\n        // },\r\n        {\r\n          dataField: \"no_hp\",\r\n          text: \"No Hp\",\r\n        },\r\n        {\r\n          dataField: \"harga\",\r\n          text: \"Harga\",\r\n          formatter: (cell) => {\r\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\r\n          },\r\n          footer: (columnData) =>\r\n            parseInt(\r\n              columnData.reduce((acc, item) => acc + item, 0)\r\n            ).toLocaleString(\"kr-KO\"),\r\n        },\r\n        {\r\n          dataField: \"harga_nota\",\r\n          text: \"Harga Nota\",\r\n          formatter: (cell) => {\r\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\r\n          },\r\n          footer: (columnData) =>\r\n            parseInt(\r\n              columnData.reduce((acc, item) => acc + item, 0)\r\n            ).toLocaleString(\"kr-KO\"),\r\n        },\r\n        {\r\n          dataField: \"harga_rata\",\r\n          text: \"Harga Rata\",\r\n          formatter: (cell) => {\r\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\r\n          },\r\n          footer: (columnData) =>\r\n            parseInt(\r\n              columnData.reduce((acc, item) => acc + item, 0)\r\n            ).toLocaleString(\"kr-KO\"),\r\n        },\r\n        {\r\n          dataField: \"kondisi\",\r\n          text: \"Kondisi\",\r\n          footer: \"\",\r\n        },\r\n        {\r\n          dataField: \"ambil\",\r\n          text: \"Action\",\r\n          csvExport: false,\r\n          headerClasses: \"text-center\",\r\n          formatter: (rowcontent, row, index) => {\r\n            return (\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <button\r\n                    type=\"button\"\r\n                    data-tooltip=\"Batal Pembelian\"\r\n                    onClick={() => this.shoBatalPembelian(row)}\r\n                    className=\"btn btn-danger\"\r\n                  >\r\n                    <i className=\"fa fa-file-export\"></i>\r\n                  </button>\r\n                  &nbsp;\r\n                  <button\r\n                    data-tooltip=\"Reprint Pembelian\"\r\n                    type=\"button\"\r\n                    onClick={() => this.ReprintPembelian(row)}\r\n                    className=\"btn btn-success mr-3\"\r\n                  >\r\n                    <i className=\"fa fa-print\"></i>\r\n                  </button>\r\n                </div>\r\n               \r\n              </div>\r\n            );\r\n          },\r\n          footer: \"\",\r\n        },\r\n        \r\n      ],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  ReprintPembelian(id) {\r\n    let hasil = {\r\n      no_faktur_group :  id.no_faktur_group\r\n     }\r\n      postData('pembelian/get/bynota', hasil).then((res) => {\r\n      let feedback = '';\r\n      res.data.notabeli.forEach((row, index) => {\r\n      let jml_alamat = row.head.n_alamat_customer.length;\r\n      feedback = `========================================\r\n      Tanggal          : ${row.head.tgl_system}\r\n      Nama Customer    : ${row.head.nama_customer}\r\n      No Hp            : ${row.head.no_hp}\r\n      Alamat Customer  : ${row.head.n_alamat_customer.split(0,20)}\r\n      `\r\n      if(jml_alamat>20){\r\n      feedback += `                   ${row.head.n_alamat_customer.split(0,20)}\r\n      `;\r\n      }\r\n      if(jml_alamat>40){\r\n      feedback += `                   ${row.head.n_alamat_customer.split(40,20)}\r\n      `;\r\n      }\r\n      feedback += `========================================\\n`\r\n      feedback += `Keterangan\\n`\r\n      feedback += `========================================\\n`\r\n      let total = 0;\r\n      let harga_nota = 0;\r\n      row.detail.forEach((detail, index) => {\r\n      total = total + detail.harga;\r\n      harga_nota = harga_nota + detail.harga_nota;\r\n      feedback += `No Faktur Beli : ${detail.no_faktur_beli}\\n`\r\n      feedback += `Jenis Barang   : ${detail.kode_dept}\\n`\r\n      feedback += `Nama Barang    : ${detail.nama_barang}\\n`\r\n      feedback += `Berat          : ${detail.berat.toFixed(3)}\\n`\r\n      feedback += `Harga          : ${detail.harga.toLocaleString(\"kr-KO\")}\\n`\r\n      feedback += `========================================\\n`\r\n      })\r\n      feedback += `Total          : ${total.toLocaleString(\"kr-KO\")}\\n`\r\n      feedback += `========================================\\n`\r\n      feedback += `Harga Waktu Beli   : ${total.toLocaleString(\"kr-KO\")}\\n`\r\n      feedback += `Harga Waktu Jual   : ${harga_nota.toLocaleString(\"kr-KO\")}\\n`\r\n      feedback += `\r\n\r\n\r\n\r\n\r\n\r\n\r\n      `\r\n      })\r\n\r\n      document.getElementById(\"myInput\").value = feedback;\r\n\r\n    }).then(() => {\r\n      console.log('masuk');\r\n      const element = document.createElement(\"a\");\r\n      const file = new Blob([document.getElementById(\"myInput\").value], {\r\n        type: \"text/plain;charset=utf-8\",\r\n      });\r\n      element.href = URL.createObjectURL(file);\r\n      element.download = \"autoprint_pembelian.txt\";\r\n      document.body.appendChild(element);\r\n      element.click();\r\n    })\r\n      \r\n      .catch((err) => {\r\n      \r\n    })\r\n  }\r\n  shoBatalPembelian(row) {\r\n    // console.log(row.no_faktur_beli);\r\n    let data = {\r\n      no_faktur_group: row.no_faktur_group,\r\n      };\r\n    //   console.log(data);\r\n    postData(\"batalpembelian/get/by-faktur\", data)\r\n      .then((res) => {\r\n        // console.log(res.data);\r\n        if (res.data.length === 0) {\r\n          ToastNotification(\"info\", res.data.message);\r\n            this.setState({\r\n              FormModal: false,\r\n            });\r\n        } else {\r\n          this.setState({\r\n            FormModal: true,\r\n          });\r\n          res.data.forEach((row, index) => {\r\n            let hasil = {\r\n              no_faktur_group: row._id.no_faktur_group,\r\n              tgl_system: row._id.tgl_system,\r\n              kode_sales: row._id.kode_sales,\r\n              nama_customer: row._id.nama_customer,\r\n              no_hp: row._id.no_hp,\r\n              alamat_customer: row._id.alamat_customer,\r\n              kode_gudang: row._id.kode_gudang,\r\n              detail_barang: row.detail_barang,\r\n            };\r\n            this.props.dispatch(showModalBatalBeli(hasil));\r\n          });\r\n        }\r\n      })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        ToastNotification(\"info\", \"Terjadi Kesalahan Saat Request Data\");\r\n        this.setState({\r\n          FormModal: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    let data_post = {\r\n      tgl_awal: formatDate(\r\n        moment(new Date(data.tgl_awal)).format(\"YYYY-MM-DD\")\r\n      ),\r\n      tgl_akhir: formatDate(\r\n        moment(new Date(data.tgl_akhir)).format(\"YYYY-MM-DD\")\r\n      ),\r\n    };\r\n    localStorageencryp(\"tgl_laporan\", JSON.stringify(data_post));\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    postData(\"pembelian/get/by-tanggal\", data_post)\r\n      .then((res) => {\r\n        // console.log(res.data);\r\n        if (res.data.length === 0) {\r\n          ToastNotification(\"info\", \"Data Pembelian Tidak Ada\");\r\n          this.setState({\r\n            isLoading: false,\r\n            datapembelian: [],\r\n          });\r\n        } else {\r\n        ToastNotification(\"success\", \"Data Pembelian Tersedia\");\r\n          this.setState({\r\n            isLoading: false,\r\n            datapembelian: res.data,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        //   console.log(err);\r\n        ToastNotification(\"info\", \"Data Pembelian Tidak Ada\");\r\n        this.setState({\r\n          isLoading: false,\r\n          datapembelian: [],\r\n        });\r\n      });\r\n  }\r\n  batalPembelian(data) {\r\n    // console.log(data);\r\n    this.setState({\r\n      isLoadingBatalBeli: true,\r\n    });\r\n    setTimeout(() => {\r\n      let hasil = {\r\n        no_faktur_group: data.no_faktur_group,\r\n      };\r\n      postData(\"batalpembelian/simpan\", hasil)\r\n        .then((res) => {\r\n          ToastNotification(\"success\", res.data.message);\r\n          this.setState({\r\n            FormModal: false,\r\n            isLoadingBatalBeli: false,\r\n          });\r\n            let tgl_laporan = localStoragedecryp('tgl_laporan').length === 0 ? [] : JSON.parse(localStoragedecryp('tgl_laporan'));\r\n          postData(\"pembelian/get/by-tanggal\", tgl_laporan).then((res) => {\r\n            this.setState({\r\n              datapembelian: res.data,\r\n            });\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          ToastNotification(\"info\", \"Data Pembelian Tidak Ada\");\r\n          this.setState({\r\n            FormModal: false,\r\n            isLoading: false,\r\n            isLoadingBatalBeli: false,\r\n          });\r\n        });\r\n    }, 500);\r\n  }\r\n  back() {\r\n    this.setState({ FormModal: false });\r\n  }\r\n  \r\n  render() {\r\n    \r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Pembelian</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Lihat Pembelian</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Lihat Pembelian </h1>\r\n        {/* <button onClick={()=>this.ReprintPembelian()}> Print </button> */}\r\n        <Panel>\r\n        <textarea\r\n            style={{ display: \"none\" }}\r\n            id=\"myInput\"\r\n            rows=\"100\"\r\n            cols=\"100\"\r\n          />\r\n\r\n          <PanelHeader>\r\n            {\" \"}\r\n            {this.state.FormModal === true\r\n              ? \"Batal Pembelian\"\r\n              : \"Lihat Pembelian\"}\r\n          </PanelHeader>\r\n          <br />\r\n          <div className=\"container\">\r\n            {this.state.FormModal === true ? (\r\n              <HeadBatalBeli\r\n                back={() => this.back()}\r\n                isLoadingBatalBeli={this.state.isLoadingBatalBeli}\r\n                onSubmit={(data) => this.batalPembelian(data)}\r\n              />\r\n            ) : (\r\n              <>\r\n                {/* Lihat Pembelian */}\r\n                <HeadPembelian\r\n                  onSubmit={(data) => this.handleSubmit(data)}\r\n                  isLoading={this.state.isLoading}\r\n                />\r\n                <Tabel\r\n                  keyField=\"no_faktur_group\"\r\n                  exportCsv={false}\r\n                  data={this.state.datapembelian}\r\n                  columns={this.state.columns}\r\n                  empty={true}\r\n                  textEmpty=\"Data Barang Kosong\"\r\n                />\r\n              </>\r\n            )}\r\n          </div>\r\n          <br />\r\n          {/* End Tambah Lihat Pembelian  */}\r\n        </Panel>\r\n        {this.state.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null)(FormLihatPembelian);\r\n","const ValidasiDataUsers = (value) => {\r\n    const errors = {};\r\n    if (!value.user_id) {\r\n        errors.user_id = \"User Id Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.user_name) {\r\n        errors.user_name = \"Username Tidak Boleh Kosong\";\r\n    }\r\n\r\n    if (!value.level) {\r\n        errors.level = \"Level Harus Dipilih \";\r\n    }\r\n    // if (!value.password) {\r\n    //     errors.password = \"Hassword Harus Diisi \";\r\n    // }\r\n    // if (!value.retype_password) {\r\n    //     errors.retype_password = \"Retype Password Harus Diisi \";\r\n    // }\r\n\r\n    return errors;\r\n}\r\n\r\nexport default ValidasiDataUsers;\r\n\r\n\r\n","const ValidasiServicesSelesai = (value) => {\r\n    const errors = {};\r\n    if (!value.tgl_selesai) {\r\n        errors.tgl_selesai = \"Tanggal Selesai Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.tgl_ambil) {\r\n        errors.tgl_ambil = \"Tanggal Tidak Boleh Kosong\";\r\n    }\r\n \r\n    return errors;\r\n}\r\n\r\nexport default ValidasiServicesSelesai;\r\n\r\n\r\n"],"sourceRoot":""}