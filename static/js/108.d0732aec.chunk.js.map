{"version":3,"sources":["pages/Laporan/LaporanService/LaporanServiceMasuk/pdf/LaporanServiceMasukPdf.jsx","pages/Laporan/LaporanService/LaporanServiceMasuk/exel/LaporanServiceMasukExel.jsx","pages/Laporan/LaporanService/LaporanServiceMasuk/HeadLaporanServiceMasuk.jsx","pages/Laporan/LaporanService/LaporanServiceMasuk/index.jsx"],"names":["LaporanServiceMasukPdf","data","username","tanggal_dari","tanggal_sampai","doc","jsPDF","tableRows","tableColumn","finalY","setFontSize","text","getUserdata","nama_toko","jml_alamat","alamat_toko","length","slice","setProperties","title","concat","localStoragedecryp","JSON","parse","tgl_awal","tgl_akhir","content","styles","halign","total","forEach","item","index","detail_barang","ongkos","rows","no_faktur_service","tgl_system","nama_customer","alamat_customer","kode_sales","deskripsi","berat","toFixed","parseInt","toLocaleString","push","footer","colSpan","fillColor","textColor","printed","user_id","getToday","fontStyle","autoTable","head","body","startY","theme","rowPageBreak","margin","top","footStyles","fontSize","bodyStyles","headStyles","tableLineColor","tableLineWidth","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","save","LaporanServiceMasukExel","Component","constructor","props","super","this","state","render","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","style","display","textAlign","backgroundColor","color","map","row","key","HeadLaporanServiceMasuk","date","Date","columns","dataField","footerAttrs","cell","num","LaporanServiceMasuk","headerClasses","formatter","setStartDate","bind","setLastDate","exportPdf","setState","onSubmit","handleSubmit","autoComplete","Field","name","component","InputDate","label","type","selected","onChange","placeholder","value","isLoading","tabel","keyField","export","empty","textEmpty","onClick","exel_LaporanServiceMasukExel","loading_default","loading","background","loaderColor","reduxForm","form","enableReinitialize","validate","ValidasiTanggalLaporan","connect","initialValues","getTglSystem","React","data_post","formatDate","moment","format","getDataNoTimeOut","then","res","ToastNotification","localStorageencryp","stringify","catch","err","library","to","LaporanServiceMasuk_HeadLaporanServiceMasuk"],"mappings":"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","file":"static/js/108.d0732aec.chunk.js","sourcesContent":["import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport {\r\n  getToday,\r\n  getUserdata,\r\n  localStoragedecryp,\r\n} from \"../../../../../components/helpers/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst LaporanServiceMasukPdf = (\r\n  data = \"\",\r\n  username = \"\",\r\n  tanggal_dari = \"\",\r\n  tanggal_sampai = \"\"\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  // let footRows = [];\r\n  let tableColumn = [];\r\n  let finalY = 30;\r\n\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN SERVICE MASUK\", 14, 15);\r\n  doc.setFontSize(20);\r\n  doc.text(getUserdata().nama_toko, 200, 15);\r\n  doc.setFontSize(8);\r\n  let jml_alamat = getUserdata().alamat_toko.length;\r\n  if (jml_alamat > 20) {\r\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\r\n  }\r\n  if (jml_alamat > 50) {\r\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\r\n  }\r\n  doc.setFontSize(10);\r\n  doc.setProperties({\r\n    title: \"LAPORAN SERVICE MASUK\",\r\n  });\r\n  //row 1\r\n  doc.text(\r\n    `PERIODE : ${\r\n      localStoragedecryp(\"tgl_laporan\").length === 0\r\n        ? null\r\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n          \" s/d \" +\r\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\r\n    }`,\r\n    14,\r\n    25\r\n  );\r\n  tableColumn = [\r\n    [\r\n      {\r\n        content: `NO SERVICE`,\r\n      },\r\n      {\r\n        content: `TGL TRANSAKSI`,\r\n      },\r\n      {\r\n        content: `NAMA CUSTOMER`,\r\n      },\r\n      {\r\n        content: `SALES`,\r\n      },\r\n      {\r\n        content: `DESKRIPSI`,\r\n      },\r\n      {\r\n        content: `BERAT`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n      {\r\n        content: `QTY`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n      {\r\n        content: `ONGKOS`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n    ],\r\n  ];\r\n  let total = 0;\r\n  data.forEach((item, index) => {\r\n    total = total + item.detail_barang.ongkos;\r\n    let rows = [\r\n      item.no_faktur_service,\r\n      item.tgl_system,\r\n      item.nama_customer,\r\n      item.alamat_customer,\r\n      item.kode_sales,\r\n      item.detail_barang.deskripsi,\r\n      {\r\n        content: item.detail_barang.berat.toFixed(3),\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n    \r\n      {\r\n        content: parseInt(item.detail_barang.ongkos).toLocaleString(\"kr-KO\"),\r\n        styles: {\r\n          halign : \"right\",\r\n        }\r\n      },\r\n      \r\n\r\n    ];\r\n    tableRows.push(rows)\r\n  })\r\n  \r\n  let footer = [\r\n    {\r\n      content: `Total Transaksi: ${data.length}`,\r\n      colSpan: 8,\r\n      styles: {\r\n        halign: 'center',\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: parseInt(total).toLocaleString(\"kr-KO\"),\r\n      styles: {\r\n        halign: \"right\",\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      }\r\n    },\r\n  ]\r\n  tableRows.push(footer)\r\n\r\n  let printed = [\r\n    {\r\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\r\n      colSpan: 7,\r\n      styles: {\r\n        // lineWidth: 0.1,\r\n        fontStyle: \"italic\",\r\n        textColor: \"#000\",\r\n        // fillColor: \"#E8E5E5\"\r\n      },\r\n    },\r\n  ]\r\n  tableRows.push(printed);\r\n\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    // foot: tbl_barang,\r\n    startY: finalY,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    // pageBreak: \"avoid\",\r\n    margin: { top: 10 },\r\n    footStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    bodyStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    headStyles: {\r\n      fontSize: 8,\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fillColor: \"#E8E5E5\",\r\n      textColor: \"#000\",\r\n    },\r\n    tableLineColor: [255, 255, 255],\r\n    tableLineWidth: 1,\r\n  });\r\n  finalY = doc.autoTableEndPosY() + 3;\r\n  tableRows = [];\r\n  // footRows = [];\r\n  // tbl_barang = [];\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  // doc.text(\r\n  //   `User                          : ${\r\n  //     JSON.parse(localStoragedecryp(\"userdata\")).user_id\r\n  //   }`,\r\n  //   14,\r\n  //   finalY + 10\r\n  // );\r\n  // doc.text(`Cetak                        : ${getToday()}`, 14, finalY + 16);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  // doc.autoPrint();\r\n  doc.save(`LAPORAN SERVICE MASUK.pdf`);\r\n  // var string = doc.output(\"datauristring\");\r\n  // // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  // var x = window.open();\r\n  // x.document.open();\r\n  // x.document.write(\r\n  //   \"<html><head><title>LAPORAN SERVICE MASUK</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n  //     string +\r\n  //     \"></embed></body></html>\"\r\n  // );\r\n  // x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default LaporanServiceMasukPdf;\r\n","import React, { Component } from \"react\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport {\r\n  getUserdata,\r\n  localStoragedecryp,\r\n} from \"../../../../../components/helpers/function\";\r\nclass LaporanServiceMasukExel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <ReactHTMLTableToExcel\r\n          id=\"test-table-xls-button\"\r\n          className=\"btn btn-success btn-block\"\r\n          table=\"table-to-xls\"\r\n          filename=\"Laporan Service Masuk\"\r\n          sheet=\"Laporan Service Masuk\"\r\n          buttonText=\"Export Exel\"\r\n        />\r\n        <table id=\"table-to-xls\" style={{ display: \"none\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan=\"5\" style={{ textAlign: \"center\" }}>\r\n                {\" \"}\r\n                LAPORAN SERVICE MASUK{\" \"}\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"5\"> Periode </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"5\">\r\n                {\" \"}\r\n                {localStoragedecryp(\"tgl_laporan\").length === 0\r\n                  ? null\r\n                  : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n                    \" s/d \" +\r\n                    JSON.parse(localStoragedecryp(\"tgl_laporan\"))\r\n                      .tgl_akhir}{\" \"}\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"5\"> TOKO : {getUserdata().nama_toko} </th>\r\n            </tr>\r\n\r\n            <tr>\r\n              <th colSpan=\"5\"> ALAMAT : {getUserdata().alamat_toko} </th>\r\n            </tr>\r\n            <tr></tr>\r\n            <tr>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                NO SERVICE\r\n              </td>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                TGL TRANSAKSI\r\n              </td>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                NAMA CUSTOME\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                ALAMAT\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                SALES\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                DESKRIPSI\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                BERAT\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                ONGKOS\r\n              </td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.data.map((row, index) => (\r\n              <>\r\n                <tr key={index}>\r\n                  <td>{row.no_faktur_service}</td>\r\n                  <td>{row.tgl_system}</td>\r\n                  <td>{row.nama_customer}</td>\r\n                  <td>{row.alamat_customer}</td>\r\n                  <td>{row.kode_sales}</td>\r\n                  <td>{row.detail_barang.deskripsi}</td>\r\n                  <td>{row.detail_barang.berat.toFixed(2)}</td>\r\n                  <td>{row.detail_barang.ongkos.toLocaleString(\"kr-KO\")}</td>\r\n                </tr>\r\n              </>\r\n            ))}\r\n          </tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"center\",\r\n                }}\r\n                colSpan=\"8\"\r\n              >\r\n                Total Transaksi {this.props.data.length}\r\n              </td>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default LaporanServiceMasukExel;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { InputDate } from \"../../../../components/helpers/field\";\r\nimport { getTglSystem } from \"../../../../components/helpers/function\";\r\nimport Tabel from \"../../../../components/helpers/tabel\";\r\nimport ValidasiTanggalLaporan from \"../../../../Validasi/ValidasiTanggalLaporan\";\r\nimport Loading from \"react-fullscreen-loading\";\r\nimport LaporanServiceMasukPdf from \"./pdf/LaporanServiceMasukPdf\";\r\nimport LaporanServiceMasukExel from \"./exel/LaporanServiceMasukExel\";\r\nclass HeadLaporanServiceMasuk extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: new Date(),\r\n      columns: [\r\n        {\r\n          dataField: \"no_faktur_service\",\r\n          text: \"No Service\",\r\n          footerAttrs: {\r\n            colSpan: \"8\",\r\n          },\r\n          footer: (cell, row, num, index) => {\r\n            return (\r\n              <div>\r\n                Total Transaksi : {this.props.LaporanServiceMasuk.length}{\" \"}\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          dataField: \"tgl_system\",\r\n          text: \"Tgl Transaksi\",\r\n        },\r\n        {\r\n          dataField: \"nama_customer\",\r\n          text: \"Nama Customer\",\r\n        },\r\n\r\n        {\r\n          dataField: \"alamat_customer\",\r\n          text: \"Alamat\",\r\n        },\r\n        {\r\n          dataField: \"kode_sales\",\r\n          text: \"Sales\",\r\n        },\r\n        {\r\n          dataField: \"detail_barang.deskripsi\",\r\n          text: \"Deskripsi\",\r\n        },\r\n        {\r\n          dataField: \"detail_barang.berat\",\r\n          text: \"Berat\",\r\n          headerClasses: \"text-right\",\r\n          formatter: (cell) => {\r\n            return <div className=\"text-right\">{cell.toFixed(2)}</div>;\r\n          },\r\n        },\r\n        {\r\n          dataField: \"detail_barang.ongkos\",\r\n          text: \"Ongkos\",\r\n          headerClasses: \"text-right\",\r\n          formatter: (cell) => {\r\n            return (\r\n              <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    this.setStartDate = this.setStartDate.bind(this);\r\n    this.setLastDate = this.setLastDate.bind(this);\r\n  }\r\n\r\n  exportPdf() {\r\n    LaporanServiceMasukPdf(this.props.LaporanServiceMasuk);\r\n  }\r\n  setStartDate(date) {\r\n    this.setState({\r\n      tgl_awal: new Date(date),\r\n    });\r\n  }\r\n  setLastDate(date) {\r\n    this.setState({\r\n      tgl_akhir: new Date(date),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_awal\"\r\n              component={InputDate}\r\n              label=\"Tanggal Dari\"\r\n              type=\"text\"\r\n              selected={this.state.tgl_awal}\r\n              onChange={(date) => this.setStartDate(date)}\r\n              placeholder=\"Masukan Tanggal Dari\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_akhir\"\r\n              component={InputDate}\r\n              type=\"text\"\r\n              selected={this.state.tgl_akhir}\r\n              onChange={(date) => this.setLastDate(date)}\r\n              label=\"Tanggal Akhir\"\r\n              placeholder=\"Masukan Tanggal Akhir\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-lg-4\">\r\n            <div className=\"text-right\">\r\n              <label>&nbsp;</label>\r\n              <button\r\n                type=\"submit\"\r\n                value=\"PDF\"\r\n                name=\"type_btn\"\r\n                className=\"btn btn-primary btn-block\"\r\n              >\r\n                {this.props.isLoading ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Mencari\r\n                  </>\r\n                ) : (\r\n                  \"Cari Laporan\"\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-12\">\r\n            <Tabel\r\n              keyField=\"no_faktur_service\"\r\n              data={this.props.export ? this.props.LaporanServiceMasuk : []}\r\n              columns={this.state.columns}\r\n              empty={true}\r\n              textEmpty=\"Data Laporan Service Masuk Kosong\"\r\n            />\r\n          </div>\r\n          <div className={this.props.export ? \"col-lg-12\" : \"col-lg-12 d-none\"}>\r\n            {/* <label htmlFor=\"\">&nbsp;</label> */}\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-6\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => this.exportPdf()}\r\n                  className=\"btn btn-warning btn-block\"\r\n                >\r\n                  {\" \"}\r\n                  Export PDF{\" \"}\r\n                </button>\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <LaporanServiceMasukExel\r\n                  data={this.props.LaporanServiceMasuk}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {this.props.isLoading ? (\r\n          <Loading\r\n            loading\r\n            background=\"rgba(0, 0, 0, 0.35)\"\r\n            loaderColor=\"rgba(94, 147, 117, 1)\"\r\n          />\r\n        ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadLaporanServiceMasuk = reduxForm({\r\n  form: \"HeadLaporanServiceMasuk\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiTanggalLaporan,\r\n})(HeadLaporanServiceMasuk);\r\n// export default connect()(HeadLaporanServiceMasuk);\r\nexport default connect((state) => {\r\n  return {\r\n    initialValues: {\r\n      tgl_awal: getTglSystem(),\r\n      tgl_akhir: getTglSystem(),\r\n    },\r\n  };\r\n})(HeadLaporanServiceMasuk);\r\n","import {\r\n  React,\r\n  connect,\r\n  Link,\r\n  reduxForm,\r\n  Panel,\r\n  PanelHeader,\r\n  getDataNoTimeOut,\r\n    formatDate,\r\n    PanelBody,\r\n  moment,\r\n  ToastNotification,\r\n  localStorageencryp,\r\n} from \"../../../../components/helpers/library\";\r\nimport HeadLaporanServiceMasuk from \"./HeadLaporanServiceMasuk\";\r\n\r\nclass LaporanServiceMasuk extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      LaporanServiceMasuk: [],\r\n      export: false,\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    let data_post = {\r\n      tgl_awal: formatDate(\r\n        moment(new Date(data.tgl_awal)).format(\"YYYY-MM-DD\")\r\n      ),\r\n      tgl_akhir: formatDate(\r\n        moment(new Date(data.tgl_akhir)).format(\"YYYY-MM-DD\")\r\n      ),\r\n    };\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    getDataNoTimeOut(\r\n      \"service/report-service-masuk?tgl_from=\" +\r\n        data_post.tgl_awal +\r\n        \"&tgl_to=\" +\r\n        data_post.tgl_akhir\r\n    )\r\n      .then((res) => {\r\n        // console.log(res);\r\n        if (res.data.length === 0) {\r\n          ToastNotification(\"info\", \"Laporan Service Masuk Kosong\");\r\n          this.setState({\r\n            export: false,\r\n            isLoading: false,\r\n          });\r\n       \r\n          return false;\r\n        }\r\n        ToastNotification(\"success\", \"Laporan Service Masuk Tersedia\");\r\n        localStorageencryp(\"tgl_laporan\", JSON.stringify(data_post));\r\n        this.setState({\r\n          LaporanServiceMasuk: res.data,\r\n          isLoading: false,\r\n          export: true,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        ToastNotification(\"info\", \"Data Yang Di Cari Tidak Ada !!!\");\r\n        this.setState({\r\n          export: false,\r\n          isLoading: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Laporan</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Laporan Service Masuk</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Laporan Service Masuk </h1>\r\n        <Panel>\r\n          <PanelHeader>Laporan Service Masuk</PanelHeader>\r\n          <br />\r\n          {/* Blank Page */}\r\n          <PanelBody>\r\n            <HeadLaporanServiceMasuk\r\n              export={this.state.export}\r\n              isLoading={this.state.isLoading}\r\n              LaporanServiceMasuk={this.state.LaporanServiceMasuk}\r\n              onSubmit={(data) => this.handleSubmit(data)}\r\n            />\r\n          </PanelBody>\r\n\r\n          <br />\r\n          {/* End Tambah Blank Page  */}\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLaporanServiceMasuk = reduxForm({\r\n  form: \"LaporanServiceMasuk\",\r\n  enableReinitialize: true,\r\n})(LaporanServiceMasuk);\r\nexport default connect(null)(LaporanServiceMasuk);\r\n"],"sourceRoot":""}