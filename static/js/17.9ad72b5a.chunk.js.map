{"version":3,"sources":["pages/Service/LihatServices/HeadLihatServices.jsx","pages/Service/LihatServices/HeadInputPembayaran.jsx","pages/Service/LihatServices/ModalPembayaran.jsx","pages/Service/LihatServices/ModalServicesAmbil.jsx","pages/Service/LihatServices/ModalServicesBatal.jsx","pages/Service/LihatServices/ModalServicesSelesai.jsx","pages/Service/LihatServices/LihatServices.jsx","Validasi/Penjualan/ValidasiPembayaran.jsx","Validasi/Services/ValidasiServicesSelesai.jsx"],"names":["HeadLihatServices","Component","constructor","props","super","this","state","isLoading","isLoadingBatal","FormModal","setStartDate","bind","setLastDate","componentDidMount","date","setState","tgl_awal","Date","tgl_akhir","render","react_default","a","createElement","onSubmit","handleSubmit","onKeyPress","e","key","preventDefault","autoComplete","className","Field","name","component","InputDate","label","type","selected","onChange","placeholder","disabled","Fragment","loading_default","loading","background","loaderColor","reduxForm","form","enableReinitialize","validate","ValidasiTanggalLaporan","connect","setTransaksiServices","services","DataSales","datamaster","getDataSales","hideModal","modalDialog","initialValues","getTglSystem","currencyMask","createNumberMask","prefix","locale","jenis_pembayaran","value","HeadInputPembayaran","type_pembayaran","columns","dataField","text","footerAttrs","colSpan","footer","setTimeout","total_bayar","NumberOnly","document","getElementById","total_dp","change","parseInt","dispatch","data_barang_penjualan","JSON","parse","localStorage","getItem","dp_rp","total","hitungTotal","kembali","nominal_kembali","pilihPembyaran","copyValue","library","Object","assign","id","ReanderField","readOnly","options","ReanderSelect","style","display","tabIndex","normalize","onFocus","target","ValidasiPembayaran","selector","formValueSelector","_selector","harus_bayar_rp","cash","data","forEach","element","nominal","hasil","parseFloat","toString","replace","nominal_cash","ModalPembayaran","kembalian","formatter","cell","toLocaleString","columnData","reduce","acc","item","csvExport","headerClasses","rowcontent","row","index","keterangan","onClick","hapusdata","Swal","fire","title","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","then","result","isConfirmed","splice","setItem","status","simpanPembayaran","undefined","no_card","jenis","ToastNotification","nama_bank","datacek","total_transaksi","sisa_bayar","length","b","findIndex","toUpperCase","fee","push","masuk","data_pembayaran","map","element2","LihatServices_HeadInputPembayaran","keyField","exportCsv","empty","pagination","textEmpty","isLoadingPembayran","data_barang","no_titip_group","ModalServicesAmbil","toFixed","rowIndex","getTotal","getTotalAll","jml","cek","detail_barang","ongkos","jumlah","stringify","HiidenFiled","defaultValue","tabel","back","showModalPembayaran","ValidasiServicesSelesai","showModalServiceAmbil","sisa_rp","no_faktur_services","no_faktur_service","nama_customer","alamat_customer","no_hp","total_dp_pembayarn","total_rp","tgl_ambil","getToday","ModalServicesBatal","ModalServicesSelesai","isLoadingServicesSelesai","showModalServiceSelesai","tgl_selesai","LihatServices","React","dataservices","pembayaran","status_proses","data-tooltip","showBatalServices","Reprint","postData","res","notaservices","feedback","notaservice","jml_alamat","n_alamat_customer","concat","tgl_system","kode_sales","slice","total_service","harga_nota","detail","jml_des","deskripsi","nama_barang","berat","join","console","log","file","Blob","href","URL","createObjectURL","download","body","appendChild","click","catch","err","data_post","formatDate","moment","format","localStorageencryp","errorhandling","error","response","showModal","simpanServicesSelesai","NotifSucces","reset","getLaporan","tanggal","simpanServicesAmbil","no_faktur","total_pembayarn","bank","jumlah_rp","hasil_bayar","simpanServicesBatal","react_router_dom","to","panel","rows","cols","LihatServices_ModalServicesAmbil","LihatServices_ModalServicesBatal","LihatServices_HeadLihatServices","ModalGlobal","TitleModal","size","content","LihatServices_ModalPembayaran","LihatServices_ModalServicesSelesai","errors"],"mappings":"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","file":"static/js/17.9ad72b5a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { InputDate } from \"../../../components/helpers/field\";\r\nimport {\r\n   getTglSystem,\r\n} from \"../../../components/helpers/function\";\r\nimport ValidasiTanggalLaporan from \"../../../Validasi/ValidasiTanggalLaporan\";\r\nimport Loading from 'react-fullscreen-loading';\r\n\r\n// const maptostate = (state) => {\r\n//   return {\r\n//     setTransaksiServices: state.services.setTransaksiServices,\r\n//     DataSales: state.datamaster.getDataSales,\r\n//     hideModal: state.datamaster.modalDialog,\r\n//   };\r\n// };\r\n\r\nclass HeadLihatServices extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isLoadingBatal: false,\r\n      FormModal: \"\",\r\n    };\r\n    this.setStartDate = this.setStartDate.bind(this);\r\n    this.setLastDate = this.setLastDate.bind(this);\r\n  }\r\n  componentDidMount() {}\r\n  setStartDate(date) {\r\n    this.setState({\r\n      tgl_awal: new Date(date),\r\n    });\r\n  }\r\n  setLastDate(date) {\r\n    this.setState({\r\n      tgl_akhir: new Date(date),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n        autoComplete=\"off\"\r\n      >\r\n        <div className=\"row\">\r\n        <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_awal\"\r\n              component={InputDate}\r\n              label=\"Tanggal Dari\"\r\n              type=\"text\"\r\n              selected={this.state.tgl_awal}\r\n              onChange={(date) => this.setStartDate(date)}\r\n              placeholder=\"Masukan Tanggal Dari\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_akhir\"\r\n              component={InputDate}\r\n              type=\"text\"\r\n              selected={this.state.tgl_akhir}\r\n              onChange={(date) => this.setLastDate(date)}\r\n              label=\"Tanggal Akhir\"\r\n              placeholder=\"Masukan Tanggal Akhir\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <label> &nbsp;</label>\r\n            <button\r\n              className=\"btn btn-primary btn-block\"\r\n              disabled={this.props.isLoading}\r\n              type=\"submit\"\r\n            >\r\n              {this.props.isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Mencari\r\n                </>\r\n              ) : (\r\n                \"Cari Services\"\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {this.props.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadLihatServices = reduxForm({\r\n  form: \"HeadLihatServices\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiTanggalLaporan,\r\n})(HeadLihatServices);\r\n// export default connect(maptostate, null)(HeadLihatServices);\r\n\r\nexport default connect((state) => {\r\n  return {\r\n    setTransaksiServices: state.services.setTransaksiServices,\r\n    DataSales: state.datamaster.getDataSales,\r\n    hideModal: state.datamaster.modalDialog,\r\n    initialValues: {\r\n      tgl_awal: getTglSystem(),\r\n      tgl_akhir: getTglSystem(),\r\n    },\r\n  };\r\n})(HeadLihatServices);\r\n","import {\r\n  React,\r\n  Component,\r\n  connect,\r\n  Field,\r\n  createNumberMask,\r\n  formValueSelector,\r\n  reduxForm,\r\n  NumberOnly,\r\n  ReanderField,\r\n  ReanderSelect,\r\n} from \"../../../components/helpers/library\";\r\nimport { getDataSales } from \"../../../actions/datamaster_action\";\r\nimport ValidasiPembayaran from \"../../../Validasi/Penjualan/ValidasiPembayaran\";\r\n\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  locale: \"kr-KO\",\r\n});\r\nconst jenis_pembayaran = [\r\n  {\r\n    value: \"CASH\",\r\n    name: \"CASH\",\r\n  },\r\n  {\r\n    value: \"DEBET\",\r\n    name: \"DEBET\",\r\n  },\r\n  {\r\n    value: \"TRANSFER\",\r\n    name: \"TRANSFER\",\r\n  },\r\n  {\r\n    value: \"CREDIT\",\r\n    name: \"CREDIT\",\r\n  },\r\n];\r\nclass HeadInputPembayaran extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      type_pembayaran: \"CASH\",\r\n      columns: [\r\n        // {\r\n        //   dataField: \"nama_bank\",\r\n        //   text: \"Nama Bank\",\r\n        //   footerAttrs: {\r\n        //     colSpan: \"2\",\r\n        //   },\r\n        //   footer: \"Grand Total\",\r\n        // },\r\n        {\r\n          dataField: \"type\",\r\n          text: \"Type\",\r\n          footerAttrs: {\r\n            colSpan: \"1\",\r\n          },\r\n          footer: \"Grand Total\",\r\n        },\r\n        {\r\n          dataField: \"Total\",\r\n          text: \"Total\",\r\n          footer: \"\",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      // console.log();\r\n      let total_bayar = NumberOnly(document.getElementById('grand_total_pembayaran').value);\r\n      let total_dp = NumberOnly(document.getElementById('total_dp').value);\r\n      this.props.change('harus_bayar_rp',parseInt(total_bayar) - parseInt(total_dp))\r\n    }, 100);\r\n    this.props.dispatch(getDataSales());\r\n    let data_barang_penjualan = JSON.parse(\r\n      localStorage.getItem(\"data_service_barang\")\r\n    );\r\n\r\n    this.props.change(\"total_dp\", data_barang_penjualan.dp_rp);\r\n    this.props.change(\"grand_total_pembayaran\", data_barang_penjualan.total);\r\n    this.props.change(\"harus_bayar_rp\", data_barang_penjualan.total);\r\n    this.props.change('jenis', 'CASH');\r\n  }\r\n  hitungTotal() {\r\n    // console.log(this.props.nominal_kembali);\r\n    this.props.change(\"kembali\", this.props.kembali);\r\n    this.props.change(\"nominal_kembali\", this.props.nominal_kembali);\r\n  }\r\n\r\n  pilihPembyaran(e) {\r\n    if (e === \"CASH\") {\r\n      this.setState({\r\n        type_pembayaran: \"CASH\",\r\n      });\r\n    } else if (e === \"TRANSFER\") {\r\n      this.setState({\r\n        type_pembayaran: \"TRANSFER\",\r\n      });\r\n    } else if (e === \"DEBET\") {\r\n      this.setState({\r\n        type_pembayaran: \"DEBET\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        type_pembayaran: \"CREDIT\"\r\n      })\r\n    }\r\n    this.props.change(\"cash\", \"\");\r\n\r\n  }\r\n  copyValue(e) {\r\n    this.props.change(\"cash\",parseInt(NumberOnly(e)))\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n        autoComplete=\"off\"\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <Field\r\n              id=\"grand_total_pembayaran\"\r\n              name=\"grand_total_pembayaran\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              onChange={this.hitungTotal()}\r\n              readOnly={true}\r\n              {...currencyMask}\r\n              label=\"Total Harga Jual\"\r\n              placeholder=\"Total Harga Jual\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              id=\"total_dp\"\r\n              name=\"total_dp\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              onChange={this.hitungTotal()}\r\n              readOnly={true}\r\n              {...currencyMask}\r\n              label=\"Total Dp\"\r\n              placeholder=\"Total Dp\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              id=\"harus_bayar_rp\"\r\n              name=\"harus_bayar_rp\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              onChange={this.hitungTotal()}\r\n              readOnly={true}\r\n              {...currencyMask}\r\n              label=\"Harus Bayar Rp\"\r\n              placeholder=\"Harus Bayar Rp\"\r\n            />\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <Field\r\n              name=\"jenis\"\r\n              label=\"Pilih Jenis Bayar\"\r\n              placeholder=\"Pilih Jenis Pembayaran\"\r\n              options={jenis_pembayaran}\r\n              onChange={(e) => this.pilihPembyaran(e)}\r\n              component={ReanderSelect}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            className=\"col-6\"\r\n            style={{\r\n              display:\r\n                this.state.type_pembayaran === \"CASH\"\r\n                  ? \"none\"\r\n                  : this.state.type_pembayaran === \"DEBET\"\r\n                  ? \"block\"\r\n                  : \"block\",\r\n            }}\r\n          >\r\n            <Field\r\n              tabIndex=\"1\"\r\n              name=\"nama_bank\"\r\n              id=\"nama_bank\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Bank\"\r\n              placeholder=\"Masukan Nama Bank\"\r\n            />\r\n          </div>\r\n          <div\r\n            className=\"col-6\"\r\n            style={{\r\n              display:\r\n                this.state.type_pembayaran === \"CASH\"\r\n                  ? \"none\"\r\n                  : this.state.type_pembayaran === \"DEBET\"\r\n                  ? \"none\"\r\n                  : \"block\",\r\n            }}\r\n          >\r\n            <Field\r\n              tabIndex=\"1\"\r\n              name=\"no_card\"\r\n              id=\"no_card\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              normalize={NumberOnly}\r\n              label={this.state.type_pembayaran === \"TRANSFER\" ? \"No Rek\" : \"Card No\"}\r\n              placeholder={this.state.type_pembayaran === \"TRANSFER\" ? \"Masukan No Rek\" : \"Masukan Card No\"}\r\n            />\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <Field\r\n              tabIndex=\"1\"\r\n              name=\"cash\"\r\n              id=\"cash_trx_penjualan\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Nominal\"\r\n              onChange={this.hitungTotal()}\r\n              {...currencyMask}\r\n              normalize={NumberOnly}\r\n              placeholder=\"Masukan Nominal\"\r\n            />\r\n          </div>\r\n          <div className=\"col-6\" \r\n          style={{\r\n              display:\r\n                this.state.type_pembayaran === \"CREDIT\"\r\n                  ? \"block\"\r\n                  : \"none\"\r\n            }}>\r\n            <Field\r\n              tabIndex=\"1\"\r\n              name=\"fee\"\r\n              id=\"fee\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Fee (%)\"\r\n              normalize={NumberOnly}\r\n              placeholder=\"5\"\r\n            />\r\n          </div>\r\n          <div className=\"col-6 d-none\">\r\n            <Field\r\n              tabIndex=\"1\"\r\n              id=\"nominal_kembali\"\r\n              name=\"nominal_kembali\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Nominal\"\r\n              placeholder=\"Masukan Nominal\"\r\n            />\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <Field\r\n              name=\"kembali\"\r\n              id=\"sisa_bayar\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              readOnly={true}\r\n              label=\"Sisa\"\r\n              onFocus={(e)=>this.copyValue(e.target.value)}\r\n              //   {...currencyMask}\r\n              // normalize={NumberOnly}\r\n              placeholder=\"Sisa Pembayaran\"\r\n            />\r\n          </div>\r\n          <div\r\n            className={\r\n              this.state.type_pembayaran === \"CASH\"\r\n                ? \"col-6 text-right\"\r\n                : this.state.type_pembayaran === \"TRANSFER\"\r\n                ? \"col-6 text-right\"\r\n                : \"col-12 text-right\"\r\n            }\r\n          >\r\n            <br />\r\n            <label>&nbsp;</label>\r\n            <button tabIndex=\"2\" className=\"btn btn-primary\">\r\n              {\" \"}\r\n              <i className=\"fa fa-plus\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadInputPembayaran = reduxForm({\r\n  form: \"HeadInputPembayaran\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiPembayaran,\r\n})(HeadInputPembayaran);\r\n\r\nconst selector = formValueSelector(\"HeadInputPembayaran\"); // <-- same as form name\r\n\r\nexport default connect((state) => {\r\n  const { harus_bayar_rp, cash } = selector(\r\n    state,\r\n    \"grand_total_pembayaran\",\r\n    \"harus_bayar_rp\",\r\n    \"cash\",\r\n  );\r\n  let data = JSON.parse(localStorage.getItem(\"trx_pemabayran_service\")) || [];\r\n  let total = 0;\r\n  data.forEach((element) => {\r\n    total = element.nominal + total;\r\n  });\r\n  let hasil = parseFloat(total || 0) - parseFloat(harus_bayar_rp || 0);\r\n  return {\r\n    kembali: hasil.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\r\n    nominal_cash: cash,\r\n    nominal_kembali : hasil + parseInt(cash)\r\n  };\r\n})(HeadInputPembayaran);","\r\nimport {\r\n  React,\r\n  reduxForm,\r\n  Component,\r\n  connect,\r\n  getItem,\r\n  setItem,\r\n  Tabel,\r\n  Swal,\r\n  ToastNotification,\r\n} from \"../../../components/helpers/library\";\r\nimport ValidasiPembayaran from \"../../../Validasi/Penjualan/ValidasiPembayaran\"\r\nimport Loading from 'react-fullscreen-loading';\r\nimport HeadInputPembayaran from \"./HeadInputPembayaran\";\r\nconst maptostate = (state) => {\r\n  let data_barang = getItem(\"data_barang_penjualan_tmp\") || [];\r\n  let status = \"PENJUALAN\";\r\n  data_barang.forEach((element) => {\r\n    if (element.no_titip_group === \"-\") {\r\n      status = \"PENJUALAN\";\r\n    } else {\r\n      status = \"TITIPAN\";\r\n    }\r\n  });\r\n  return {\r\n    status: status,\r\n  };\r\n};\r\nclass ModalPembayaran extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      type_pembayaran: \"CASH\",\r\n      kembalian: \"\",\r\n      columns: [\r\n        {\r\n          dataField: \"jenis\",\r\n          text: \"Jenis\",\r\n          footerAttrs: {\r\n            colSpan: \"2\",\r\n          },\r\n          footer: \"Grand Total\",\r\n        },\r\n        {\r\n          dataField: \"keterangan\",\r\n          text: \"Keterangan\",\r\n        },\r\n        {\r\n          dataField: \"nominal\",\r\n          text: \"Total\",\r\n          formatter: (cell) => {\r\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\r\n          },\r\n          footer: (columnData) =>\r\n            parseInt(\r\n              columnData.reduce((acc, item) => acc + item, 0)\r\n            ).toLocaleString(\"kr-KO\"),\r\n        },\r\n        {\r\n          dataField: \"action\",\r\n          text: \"Action\",\r\n          csvExport: false,\r\n          headerClasses: \"text-center\",\r\n          formatter: (rowcontent, row, index) => {\r\n            return (\r\n              <div className=\"row text-center\">\r\n                <div className=\"col-12\">\r\n                  <button\r\n                    type=\"button\"\r\n                    disabled={row.keterangan === \"DP-SERVICE\" ? true : false}\r\n                    onClick={() => this.hapusdata(index)}\r\n                    className=\"btn btn-danger mr-3\"\r\n                  >\r\n                    <i className=\"fa fa-trash\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n          footer: \"\",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n  hapusdata(id) {\r\n    Swal.fire({\r\n      title: \"Anda Yakin !!\",\r\n      text: \"Ingin Menghapus Data Ini ?\",\r\n      icon: \"warning\",\r\n      position: \"top-center\",\r\n      cancelButtonText: \"Tidak\",\r\n      showCancelButton: true,\r\n      confirmButtonText: \"OK\",\r\n      showConfirmButton: true,\r\n    }).then((result) => {\r\n      // console.log(id);\r\n      if (result.isConfirmed) {\r\n        let data = getItem(\"trx_pemabayran_service\");\r\n        data.splice(id, 1);\r\n        setItem(\"trx_pemabayran_service\", data);\r\n        this.setState({\r\n          status: \"berhasil\",\r\n        });\r\n        // deleteLocalItemBarcode(\"data_barang_hancur_tmp\", id);\r\n        // this.props.dispatch(getListReturnSupplier());\r\n      }\r\n    });\r\n  }\r\n  simpanPembayaran(row) {\r\n    if(row.no_card === undefined && row.jenis !== \"CASH\" && row.jenis !== \"DEBET\"){\r\n      ToastNotification(\"info\", \"Nomor kartu tidak boleh kosong\");\r\n      return false;\r\n    }\r\n    if(row.nama_bank === undefined && row.jenis !== \"CASH\"){\r\n      ToastNotification(\"info\", \"Nama Bank tidak boleh kosong\");\r\n      return false;\r\n    }\r\n    if(row.cash === undefined || row.cash === \"0\"){\r\n      ToastNotification(\"info\", \"Nominal tidak boleh kosong\");\r\n      return false;\r\n    }\r\n    let datacek = {\r\n      total_transaksi : row.harus_bayar_rp,\r\n      sisa_bayar : row.nominal_kembali\r\n    }\r\n    setItem('sisa_bayar_service',datacek)\r\n    let data = JSON.parse(localStorage.getItem(\"trx_pemabayran_service\")) || [];\r\n\r\n    if (row.jenis !== \"CASH\" && !data.length) {\r\n      if (row.kembali.replace(/[^0-9]/g, \"\") - row.cash < 0) {\r\n        ToastNotification(\"info\", \"Pembayaran tidak boleh lebih dari sisa\");\r\n        return false;\r\n      }\r\n    } else {\r\n      if(row.jenis !== \"CASH\"){\r\n        if (row.kembali.replace(/[^0-9]/g, \"\") - row.cash < 0 && parseInt(row.kembali) !== 0){\r\n          ToastNotification(\"info\", \"Pembayaran tidak boleh lebih dari sisa\");\r\n          return false;\r\n        } else {\r\n          if (data.reduce((a, b) => a + b.nominal, 0) >= row.harus_bayar_rp) {\r\n            ToastNotification(\"info\", \"Pembayaran Sudah Cukup\");\r\n            return false;\r\n          }\r\n          }\r\n        }\r\n    }\r\n   \r\n\r\n    let cash = data.findIndex((hasil) => hasil.jenis === \"CASH\");\r\n    if (cash >= 0) {\r\n      if (row.kembali.replace(/[^0-9]/g, \"\") - row.cash < 0 && data.reduce((a, b) => a + b.nominal, 0) > row.harus_bayar_rp) {\r\n        ToastNotification(\"info\", \"Pembayaran Sudah Cukup\");\r\n        return false;\r\n      } else {\r\n        if (data.reduce((a, b) => a + b.nominal, 0) >= row.harus_bayar_rp) {\r\n          ToastNotification(\"info\", \"Pembayaran Sudah Cukup\");\r\n          return false;\r\n        }\r\n        }\r\n    }\r\n\r\n    let index = data.findIndex((hasil) => hasil.jenis === row.jenis);\r\n    if (index === -1) {\r\n      let keterangan = \"\";\r\n      if (row.jenis === \"CASH\") {\r\n        keterangan = \"CASH\";\r\n      } else if (row.jenis === \"TRANSFER\") {\r\n        keterangan = row.no_card + \" - \" + row.nama_bank;\r\n      } else {\r\n        keterangan = row.nama_bank;\r\n      }\r\n      let hasil = {\r\n        jenis: row.jenis,\r\n        nominal: parseInt(row.cash),\r\n        nama_bank: row.nama_bank !== undefined ? row.nama_bank.toUpperCase() : \"-\",\r\n        no_card: row.no_card,\r\n        fee : row.jenis === \"CREDIT\" ? row.fee || 0 : 0 ,\r\n        keterangan: keterangan,\r\n        kembali: row.nominal_kembali\r\n      };\r\n      data.push(hasil);\r\n      this.setState({\r\n        masuk: true,\r\n        kembalian: row.kembali,\r\n      });\r\n      setItem(\"trx_pemabayran_service\", data);\r\n    } else {\r\n      let data_pembayaran = getItem(\"trx_pemabayran_service\");\r\n      data_pembayaran = data_pembayaran.map((element2) => {\r\n        if (element2.jenis === row.jenis) {\r\n          element2.nominal += parseInt(row.cash);\r\n        }\r\n        return element2;\r\n      });\r\n      setItem(\"trx_pemabayran_service\", data_pembayaran);\r\n      this.setState({\r\n        status: true,\r\n        kembalian: row.kembalian,\r\n      });\r\n      // ToastNotification(\r\n      //   \"info\",\r\n      //   \"Pembayaran dengan \" + row.jenis + \" sudah ada\"\r\n      // );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <HeadInputPembayaran onSubmit={(data) => this.simpanPembayaran(data)} />\r\n        <hr />\r\n        <form\r\n          onSubmit={this.props.handleSubmit}\r\n          onKeyPress={(e) => {\r\n            e.key === \"Enter\" && e.preventDefault();\r\n          }}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Tabel\r\n            // handleClick={() => this.simpanpembbayaran()}\r\n            keyField=\"jenis\"\r\n            // tambahData={true}\r\n            // btnText=\"Tambah Pembyaran\"\r\n            exportCsv={false}\r\n            data={getItem(\"trx_pemabayran_service\") || []}\r\n            columns={this.state.columns}\r\n            empty={true}\r\n            pagination=\"off\"\r\n            textEmpty=\"Data Pembayaran Kosong\"\r\n          />\r\n          <div className=\"row\">\r\n            <div className=\"col-12 text-right\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                disabled={this.props.isLoadingPembayran}\r\n                // onClick={() => this.props.simpanServicesAmbil()}\r\n                type=\"submit\"\r\n              >\r\n                {this.props.isLoadingPembayran ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Diproses\r\n                  </>\r\n                ) : (\r\n                  \"Bayar Sekarang\"\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        {this.props.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null}\r\n        </form>\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nModalPembayaran = reduxForm({\r\n  form: \"ModalPembayaran\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiPembayaran,\r\n})(ModalPembayaran);\r\n\r\nexport default connect(maptostate)(ModalPembayaran);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { createNumberMask } from \"redux-form-input-masks\";\r\n// import { showModal } from \"../../../actions/datamaster_action\";\r\nimport { HiidenFiled, ReanderField } from \"../../../components/helpers/field\";\r\nimport { getToday } from \"../../../components/helpers/function\";\r\n// import ModalGlobal from \"../../../components/helpers/ModalGlobal\";\r\nimport Tabel from \"../../../components/helpers/tabel\";\r\nimport ValidasiServicesSelesai from \"../../../Validasi/Services/ValidasiServicesSelesai\";\r\nimport Loading from 'react-fullscreen-loading';\r\n// import ModalPembayaran from \"./ModalPembayaran\";\r\n\r\n// const maptostate = (state) => {\r\n//   if (state.services.showModalServiceAmbil !== null) {\r\n//     return {\r\n//       detail_barang: state.services.showModalServiceAmbil.detail_barang,\r\n//       initialValues: {\r\n//         no_faktur_services: state.services.showModalServiceAmbil.no_faktur_service,\r\n//         nama_customer: state.services.showModalServiceAmbil.nama_customer,\r\n//         alamat_customer: state.services.showModalServiceAmbil.alamat_customer,\r\n//         no_hp: state.services.showModalServiceAmbil.no_hp,\r\n//         total_dp: state.services.showModalServiceAmbil.dp_rp,\r\n//         total_rp: state.services.showModalServiceAmbil.total,\r\n//       },\r\n//     };\r\n//   }\r\n// };\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  locale: \"kr-KO\",\r\n});\r\nclass ModalServicesAmbil extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: new Date('Y-m-d'),\r\n      columns: [\r\n        {\r\n          dataField: \"nama_barang\",\r\n          text: \"Nama Barang\",\r\n          footer: \"\",\r\n        },\r\n        {\r\n          dataField: \"berat\",\r\n          text: \"Berat\",\r\n          formatter: (cell) => {\r\n            return <span>{parseFloat(cell).toFixed(1)}</span>;\r\n          },\r\n          footer: (columnData) =>\r\n            parseFloat(columnData.reduce((acc, item) => acc + item, 0)).toFixed(\r\n              1\r\n            ),\r\n        },\r\n        {\r\n          dataField: \"jumlah\",\r\n          text: \"Jumlah\",\r\n          formatter: (cell) => {\r\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\r\n          },\r\n          footer: (columnData) =>\r\n            parseInt(\r\n              columnData.reduce((acc, item) => acc + item, 0)\r\n            ).toLocaleString(\"kr-KO\"),\r\n        },\r\n        {\r\n          dataField: \"ongkos\",\r\n          text: \"Ongkos\",\r\n          formatter: (cell) => {\r\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\r\n          },\r\n          footer: (columnData) =>\r\n            parseInt(\r\n              columnData.reduce((acc, item) => acc + item, 0)\r\n            ).toLocaleString(\"kr-KO\"),\r\n        },\r\n        {\r\n          dataField: \"total\",\r\n          text: \"Total Rp\",\r\n          formatter: (cell, row, rowIndex) => {\r\n            return this.getTotal(rowIndex);\r\n          },\r\n          footer: (cell, row, rowIndex) => {\r\n            // console.log(row);\r\n            // return this.state.total\r\n            return this.getTotalAll();\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n  getTotalAll() {\r\n    let hasil =\r\n      JSON.parse(localStorage.getItem(\"total_rp_service_ambil\")) || [];\r\n    let total = 0;\r\n    hasil.forEach((item, index) => {\r\n      total = total + item.jml;\r\n    });\r\n    return parseInt(total).toLocaleString(\"kr-KO\");\r\n  }\r\n  \r\n  getTotal(rowIndex) {\r\n    // console.log());\r\n    let cek = JSON.parse(localStorage.getItem(\"total_rp_service_ambil\")) || [];\r\n    let hasil = {\r\n      jml: parseInt(\r\n        this.props.detail_barang[rowIndex].ongkos *\r\n          this.props.detail_barang[rowIndex].jumlah\r\n      ),\r\n    };\r\n    cek.push(hasil);\r\n    localStorage.setItem(\"total_rp_service_ambil\", JSON.stringify(cek));\r\n    return parseInt(\r\n      this.props.detail_barang[rowIndex].ongkos *\r\n        this.props.detail_barang[rowIndex].jumlah\r\n    ).toLocaleString(\"kr-KO\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n        autoComplete=\"off\"\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <Field\r\n              id=\"no_faktur_services_ambil\"\r\n              name=\"no_faktur_services\"\r\n              component={HiidenFiled}\r\n              type=\"hidden\"\r\n              readOnly={true}\r\n            />\r\n            <Field\r\n              name=\"nama_customer\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              readOnly={true}\r\n              label=\"Nama Customer\"\r\n              placeholder=\"Masukan Nama Customer\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              name=\"alamat_customer\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              readOnly={true}\r\n              label=\"Alamat Customer\"\r\n              placeholder=\"Masukan Alamat Customer\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              name=\"no_hp\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              readOnly={true}\r\n              label=\"No Hp\"\r\n              placeholder=\"Masukan No Hp\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-4\">\r\n          <Field\r\n              id=\"total_bayar\"\r\n              name=\"total_bayar\"\r\n              component={HiidenFiled}\r\n              type=\"hidden\"\r\n              readOnly={true}\r\n            />\r\n          <Field\r\n              id=\"total_dp\"\r\n              name=\"total_dp_pembayarn\"\r\n              component={HiidenFiled}\r\n              type=\"hidden\"\r\n              readOnly={true}\r\n            />\r\n            <Field\r\n              id=\"total_rp\"\r\n              name=\"total_rp\"\r\n              component={ReanderField}\r\n              {...currencyMask}\r\n              type=\"text\"\r\n              label=\"Total Rp\"\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              name=\"total_dp\"\r\n              component={ReanderField}\r\n              type=\"telp\"\r\n              {...currencyMask}\r\n              label=\"Total DP\"\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              name=\"sisa_rp\"\r\n              component={ReanderField}\r\n              type=\"telp\"\r\n              {...currencyMask}\r\n              label=\"Sisa Rp\"\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-3 d-none\">\r\n            <Field\r\n              defaultValue={this.state.date}\r\n              id=\"tgl_ambil\"\r\n              name=\"tgl_ambil\"\r\n              component={ReanderField}\r\n              type=\"date\"\r\n              label=\"Tanggal Ambil\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-12\">\r\n            <Tabel\r\n              keyField=\"nama_barang\"\r\n              exportCsv={false}\r\n              data={this.props.detail_barang}\r\n              columns={this.state.columns}\r\n              pagination=\"off\"\r\n              empty={true}\r\n              textEmpty=\"Data Barang Kosong\"\r\n            />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={this.props.back}\r\n              className=\"btn btn-primary btn-block\"\r\n            >\r\n              <i className=\"fa fa-arrow-left\"></i> Kembali\r\n            </button>\r\n          </div>\r\n          <div className=\"col-9\">\r\n            {JSON.parse(localStorage.getItem(\"sisa_bayar_service_ambil\")) ===\r\n            0 ? \r\n              <button type=\"submit\" className=\"btn btn-success btn-block\">\r\n                Service Ambil\r\n              </button>\r\n              : \r\n              <> \r\n              <button\r\n                type=\"button\"\r\n                onClick={() => this.props.showModalPembayaran()}\r\n                className=\"btn btn-success btn-block\"\r\n              >\r\n                  Service Ambil\r\n              </button>\r\n                </>\r\n            }\r\n          </div>\r\n        </div>\r\n        <br />\r\n        {this.props.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null}\r\n        {/* <ModalGlobal title=\"Pembayaran\" content={<ModalPembayaran />} /> */}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nModalServicesAmbil = reduxForm({\r\n  form: \"ModalServicesAmbil\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiServicesSelesai,\r\n})(ModalServicesAmbil);\r\n// export default connect(maptostate, null)(ModalServicesAmbil);\r\n\r\nexport default connect((state) => {\r\n  localStorage.setItem( \"sisa_bayar_service_ambil\", parseFloat(state.services.showModalServiceAmbil.total || 0) - parseFloat(state.services.showModalServiceAmbil.dp_rp || 0) || 0\r\n  );\r\n  return {\r\n    detail_barang: state.services.showModalServiceAmbil.detail_barang,\r\n    initialValues: {\r\n      sisa_rp:\r\n        parseFloat(state.services.showModalServiceAmbil.total || 0) -\r\n          parseFloat(state.services.showModalServiceAmbil.dp_rp || 0) || 0,\r\n      no_faktur_services:\r\n        state.services.showModalServiceAmbil.no_faktur_service,\r\n      nama_customer: state.services.showModalServiceAmbil.nama_customer,\r\n      alamat_customer: state.services.showModalServiceAmbil.alamat_customer,\r\n      no_hp: state.services.showModalServiceAmbil.no_hp,\r\n      total_dp_pembayarn: state.services.showModalServiceAmbil.dp_rp,\r\n      total_dp: state.services.showModalServiceAmbil.dp_rp,\r\n      total_rp: state.services.showModalServiceAmbil.total,\r\n      total_bayar: state.services.showModalServiceAmbil.total,\r\n      tgl_ambil : getToday(),\r\n\r\n    },\r\n  };\r\n})(ModalServicesAmbil);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { createNumberMask } from \"redux-form-input-masks\";\r\n// import { showModal } from \"../../../actions/datamaster_action\";\r\nimport { HiidenFiled, ReanderField } from \"../../../components/helpers/field\";\r\nimport { getToday } from \"../../../components/helpers/function\";\r\n// import ModalGlobal from \"../../../components/helpers/ModalGlobal\";\r\nimport Tabel from \"../../../components/helpers/tabel\";\r\n// import { getDataSales } from \"../../../actions/datamaster_action\";\r\n// import { ReanderField, ReanderSelect } from \"../../../components/helpers/field\";\r\n// import { NumberOnly } from \"../../../Validasi/normalize\";\r\nimport ValidasiServicesSelesai from \"../../../Validasi/Services/ValidasiServicesSelesai\";\r\n// import ModalPembayaran from \"./ModalPembayaran\";\r\n\r\n// const maptostate = (state) => {\r\n//   if (state.services.showModalServiceAmbil !== null) {\r\n//     return {\r\n//       detail_barang: state.services.showModalServiceAmbil.detail_barang,\r\n//       initialValues: {\r\n//         no_faktur_services: state.services.showModalServiceAmbil.no_faktur_service,\r\n//         nama_customer: state.services.showModalServiceAmbil.nama_customer,\r\n//         alamat_customer: state.services.showModalServiceAmbil.alamat_customer,\r\n//         no_hp: state.services.showModalServiceAmbil.no_hp,\r\n//         total_dp: state.services.showModalServiceAmbil.dp_rp,\r\n//         total_rp: state.services.showModalServiceAmbil.total,\r\n//       },\r\n//     };\r\n//   }\r\n// };\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  locale: \"kr-KO\",\r\n});\r\nclass ModalServicesBatal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: new Date('Y-m-d'),\r\n      columns: [\r\n        {\r\n          dataField: \"nama_barang\",\r\n          text: \"Nama Barang\",\r\n          footer: \"\",\r\n        },\r\n        {\r\n          dataField: \"berat\",\r\n          text: \"Berat\",\r\n          formatter: (cell) => {\r\n            return <span>{parseFloat(cell).toFixed(1)}</span>;\r\n          },\r\n          footer: (columnData) =>\r\n            parseFloat(columnData.reduce((acc, item) => acc + item, 0)).toFixed(\r\n              1\r\n            ),\r\n        },\r\n        {\r\n          dataField: \"jumlah\",\r\n          text: \"Jumlah\",\r\n          formatter: (cell) => {\r\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\r\n          },\r\n          footer: (columnData) =>\r\n            parseInt(\r\n              columnData.reduce((acc, item) => acc + item, 0)\r\n            ).toLocaleString(\"kr-KO\"),\r\n        },\r\n        {\r\n          dataField: \"ongkos\",\r\n          text: \"Ongkos\",\r\n          formatter: (cell) => {\r\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\r\n          },\r\n          footer: (columnData) =>\r\n            parseInt(\r\n              columnData.reduce((acc, item) => acc + item, 0)\r\n            ).toLocaleString(\"kr-KO\"),\r\n        },\r\n        {\r\n          dataField: \"total\",\r\n          text: \"Total Rp\",\r\n          formatter: (cell, row, rowIndex) => {\r\n            return this.getTotal(rowIndex);\r\n          },\r\n          footer: (cell, row, rowIndex) => {\r\n            // console.log(row);\r\n            // return this.state.total\r\n            return this.getTotalAll();\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n  getTotalAll() {\r\n    let hasil =\r\n      JSON.parse(localStorage.getItem(\"total_rp_service_ambil\")) || [];\r\n    let total = 0;\r\n    hasil.forEach((item, index) => {\r\n      total = total + item.jml;\r\n    });\r\n    return parseInt(total).toLocaleString(\"kr-KO\");\r\n  }\r\n  getTotal(rowIndex) {\r\n    // console.log());\r\n    let cek = JSON.parse(localStorage.getItem(\"total_rp_service_ambil\")) || [];\r\n    let hasil = {\r\n      jml: parseInt(\r\n        this.props.detail_barang[rowIndex].ongkos *\r\n          this.props.detail_barang[rowIndex].jumlah\r\n      ),\r\n    };\r\n    cek.push(hasil);\r\n    localStorage.setItem(\"total_rp_service_ambil\", JSON.stringify(cek));\r\n    return parseInt(\r\n      this.props.detail_barang[rowIndex].ongkos *\r\n        this.props.detail_barang[rowIndex].jumlah\r\n    ).toLocaleString(\"kr-KO\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n        autoComplete=\"off\"\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <Field\r\n              id=\"no_faktur_services_ambil\"\r\n              name=\"no_faktur_services\"\r\n              component={HiidenFiled}\r\n              type=\"hidden\"\r\n              readOnly={true}\r\n            />\r\n            <Field\r\n              name=\"nama_customer\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              readOnly={true}\r\n              label=\"Nama Customer\"\r\n              placeholder=\"Masukan Nama Customer\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              name=\"alamat_customer\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              readOnly={true}\r\n              label=\"Alamat Customer\"\r\n              placeholder=\"Masukan Alamat Customer\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              name=\"no_hp\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              readOnly={true}\r\n              label=\"No Hp\"\r\n              placeholder=\"Masukan No Hp\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-3\">\r\n          <Field\r\n              id=\"total_bayar\"\r\n              name=\"total_bayar\"\r\n              component={HiidenFiled}\r\n              type=\"hidden\"\r\n              readOnly={true}\r\n            />\r\n            <Field\r\n              id=\"total_rp\"\r\n              name=\"total_rp\"\r\n              component={ReanderField}\r\n              {...currencyMask}\r\n              type=\"text\"\r\n              label=\"Total Rp\"\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <Field\r\n              name=\"total_dp\"\r\n              component={ReanderField}\r\n              type=\"telp\"\r\n              {...currencyMask}\r\n              label=\"Total DP\"\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <Field\r\n              name=\"sisa_rp\"\r\n              component={ReanderField}\r\n              type=\"telp\"\r\n              {...currencyMask}\r\n              label=\"Sisa Rp\"\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-3\">\r\n            <Field\r\n              defaultValue={this.state.date}\r\n              id=\"tgl_ambil\"\r\n              name=\"tgl_ambil\"\r\n              component={ReanderField}\r\n              type=\"date\"\r\n              label=\"Tanggal Ambil\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-12\">\r\n            <Tabel\r\n              keyField=\"nama_barang\"\r\n              exportCsv={false}\r\n              data={this.props.detail_barang}\r\n              columns={this.state.columns}\r\n              pagination=\"off\"\r\n              empty={true}\r\n              textEmpty=\"Data Barang Kosong\"\r\n            />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={this.props.back}\r\n              className=\"btn btn-primary btn-block\"\r\n            >\r\n              <i className=\"fa fa-arrow-left\"></i> Kembali\r\n            </button>\r\n          </div>\r\n          <div className=\"col-9\">\r\n            {JSON.parse(localStorage.getItem(\"sisa_bayar_service_ambil\")) ===\r\n            0 ? \r\n              <button type=\"submit\" className=\"btn btn-success btn-block\">\r\n                Batal Service\r\n              </button>\r\n              : \r\n              <> \r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-success btn-block\"\r\n              >\r\n                  Batal Service\r\n              </button>\r\n                </>\r\n            }\r\n          </div>\r\n        </div>\r\n        <br />\r\n        {/* <ModalGlobal title=\"Pembayaran\" content={<ModalPembayaran />} /> */}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nModalServicesBatal = reduxForm({\r\n  form: \"ModalServicesBatal\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiServicesSelesai,\r\n})(ModalServicesBatal);\r\n// export default connect(maptostate, null)(ModalServicesBatal);\r\n\r\nexport default connect((state) => {\r\n  localStorage.setItem(\r\n    \"sisa_bayar_service_ambil\",\r\n    parseFloat(state.services.showModalServiceAmbil.total || 0) -\r\n      parseFloat(state.services.showModalServiceAmbil.dp_rp || 0) || 0\r\n  );\r\n  return {\r\n    detail_barang: state.services.showModalServiceAmbil.detail_barang,\r\n    initialValues: {\r\n      sisa_rp:\r\n        parseFloat(state.services.showModalServiceAmbil.total || 0) -\r\n          parseFloat(state.services.showModalServiceAmbil.dp_rp || 0) || 0,\r\n      no_faktur_services:\r\n        state.services.showModalServiceAmbil.no_faktur_service,\r\n      nama_customer: state.services.showModalServiceAmbil.nama_customer,\r\n      alamat_customer: state.services.showModalServiceAmbil.alamat_customer,\r\n      no_hp: state.services.showModalServiceAmbil.no_hp,\r\n      total_dp: state.services.showModalServiceAmbil.dp_rp,\r\n      total_rp: state.services.showModalServiceAmbil.total,\r\n      total_bayar: state.services.showModalServiceAmbil.total,\r\n      tgl_ambil : getToday(),\r\n\r\n    },\r\n  };\r\n})(ModalServicesBatal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { HiidenFiled, ReanderField } from \"../../../components/helpers/field\";\r\nimport { getToday } from \"../../../components/helpers/function\";\r\nimport Tabel from \"../../../components/helpers/tabel\";\r\nimport ValidasiServicesSelesai from \"../../../Validasi/Services/ValidasiServicesSelesai\";\r\nimport Loading from 'react-fullscreen-loading';\r\n// import { ReanderField, ReanderSelect } from \"../../../components/helpers/field\";\r\n// import { NumberOnly } from \"../../../Validasi/normalize\";\r\n\r\n// const maptostate = (state) => {\r\n//   // console.log(state.services.showModalServiceSelesai);\r\n//   if (state.services.showModalServiceSelesai !== null) {\r\n//     return {\r\n//       detail_barang: state.services.showModalServiceSelesai.detail_barang,\r\n//       initialValues: {\r\n//         no_faktur_services: state.services.showModalServiceSelesai.no_faktur_service,\r\n//         nama_customer: state.services.showModalServiceSelesai.nama_customer,\r\n//         alamat_customer: state.services.showModalServiceSelesai.alamat_customer,\r\n//         no_hp: state.services.showModalServiceSelesai.no_hp,\r\n//       },\r\n//     };\r\n//   }\r\n// };\r\n\r\nclass ModalServicesSelesai extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columns: [\r\n        {\r\n          dataField: \"nama_barang\",\r\n          text: \"Nama Barang\",\r\n          footer: \"\",\r\n        },\r\n        {\r\n          dataField: \"berat\",\r\n          text: \"Berat\",\r\n          formatter: (cell) => {\r\n            return <span>{parseFloat(cell).toFixed(1)}</span>;\r\n          },\r\n          footer: (columnData) =>\r\n            parseFloat(columnData.reduce((acc, item) => acc + item, 0)).toFixed(\r\n              1\r\n            ),\r\n        },\r\n        {\r\n          dataField: \"jumlah\",\r\n          text: \"Jumlah\",\r\n          formatter: (cell) => {\r\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\r\n          },\r\n          footer: (columnData) =>\r\n            parseInt(\r\n              columnData.reduce((acc, item) => acc + item, 0)\r\n            ).toLocaleString(\"kr-KO\"),\r\n        },\r\n        {\r\n          dataField: \"ongkos\",\r\n          text: \"Ongkos\",\r\n          formatter: (cell) => {\r\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\r\n          },\r\n          footer: (columnData) =>\r\n            parseInt(\r\n              columnData.reduce((acc, item) => acc + item, 0)\r\n            ).toLocaleString(\"kr-KO\"),\r\n        },\r\n        {\r\n          dataField: \"total\",\r\n          text: \"Total Rp\",\r\n          formatter: (cell, row, rowIndex) => {\r\n            return this.getTotal(rowIndex);\r\n          },\r\n          footer: (cell, row, rowIndex) => {\r\n            // console.log(row);\r\n            // return this.state.total\r\n            return this.getTotalAll();\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  getTotalAll() {\r\n    let hasil = JSON.parse(localStorage.getItem(\"total_rp_services\")) || [];\r\n    let total = 0;\r\n    hasil.forEach((item, index) => {\r\n      total = total + item.jml;\r\n    });\r\n    return parseInt(total).toLocaleString(\"kr-KO\");\r\n  }\r\n  getTotal(rowIndex) {\r\n    // console.log());\r\n    let cek = JSON.parse(localStorage.getItem(\"total_rp_services\")) || [];\r\n    let hasil = {\r\n      jml: parseInt(\r\n        this.props.detail_barang[rowIndex].ongkos *\r\n          this.props.detail_barang[rowIndex].jumlah\r\n      ),\r\n    };\r\n    cek.push(hasil);\r\n    localStorage.setItem(\"total_rp_services\", JSON.stringify(cek));\r\n    return parseInt(\r\n      this.props.detail_barang[rowIndex].ongkos *\r\n        this.props.detail_barang[rowIndex].jumlah\r\n    ).toLocaleString(\"kr-KO\");\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n        autoComplete=\"off\"\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <Field\r\n              name=\"no_faktur_services\"\r\n              component={HiidenFiled}\r\n              type=\"hidden\"\r\n              readOnly={true}\r\n            />\r\n            <Field\r\n              name=\"nama_customer\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              readOnly={true}\r\n              label=\"Nama Customer\"\r\n              placeholder=\"Masukan Nama Cistomer\"\r\n            />\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <Field\r\n              name=\"alamat_customer\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              readOnly={true}\r\n              label=\"Nama Customer\"\r\n              placeholder=\"Masukan Alamat Cistomer\"\r\n            />\r\n          </div>\r\n          <div className=\"col-6\">\r\n          <Field\r\n              name=\"no_hp\"\r\n              component={ReanderField}\r\n              type=\"number\"\r\n              label=\"No Hp\"\r\n              readOnly={true}\r\n              placeholder=\"Masukan No Hp\"\r\n            />\r\n          </div>\r\n          {/* <div className=\"col-6\">\r\n            <Field\r\n              name=\"tgl_selesai\"\r\n              component={ReanderField}\r\n              type=\"date\"\r\n              label=\"Tanggal Selesai\"\r\n              placeholder=\"Masukan Tanggal Selesai\"\r\n            />\r\n          </div> */}\r\n          <div className=\"col-12\">\r\n            <Tabel\r\n              keyField=\"nama_barang\"\r\n              exportCsv={false}\r\n              data={this.props.detail_barang}\r\n              columns={this.state.columns}\r\n              pagination=\"off\"\r\n              empty={true}\r\n              textEmpty=\"Data Barang Kosong\"\r\n            />\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <button type=\"submit\"\r\n              disabled={this.props.isLoadingServicesSelesai}\r\n              className=\"btn btn-primary btn-block\">\r\n                 {this.props.isLoadingServicesSelesai ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Menyimpan Data\r\n                </>\r\n              ) : (\r\n                \"Service Selesai\"\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {this.props.isLoadingServicesSelesai ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nModalServicesSelesai = reduxForm({\r\n  form: \"ModalServicesSelesai\",\r\n    enableReinitialize: true,\r\n    validate: ValidasiServicesSelesai\r\n})(ModalServicesSelesai);\r\n// export default connect(maptostate, null)(ModalServicesSelesai);\r\n\r\nexport default connect((state) => {\r\n  return {\r\n    detail_barang: state.services.showModalServiceSelesai.detail_barang,\r\n    initialValues: {\r\n      no_faktur_services: state.services.showModalServiceSelesai.no_faktur_service,\r\n      nama_customer: state.services.showModalServiceSelesai.nama_customer,\r\n      alamat_customer: state.services.showModalServiceSelesai.alamat_customer,\r\n      no_hp: state.services.showModalServiceSelesai.no_hp,\r\n      tgl_selesai : getToday(),\r\n    },\r\n  };\r\n})(ModalServicesSelesai);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { reduxForm, reset } from \"redux-form\";\r\nimport { hideModal, showModal } from \"../../../actions/datamaster_action.jsx\";\r\nimport {\r\n  showModalServiceAmbil,\r\n  showModalServiceSelesai,\r\n} from \"../../../actions/services_action.jsx\";\r\nimport { formatDate, getItem, localStorageencryp, setItem } from \"../../../components/helpers/function.jsx\";\r\nimport ModalGlobal from \"../../../components/helpers/ModalGlobal.jsx\";\r\nimport {\r\n  ToastNotification,\r\n  NotifSucces,\r\n} from \"../../../components/helpers/notification.jsx\";\r\nimport Tabel from \"../../../components/helpers/tabel.jsx\";\r\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\r\nimport { postData } from \"../../../config/axios.jsx\";\r\nimport HeadLihatServices from \"./HeadLihatServices.jsx\";\r\nimport ModalPembayaran from \"./ModalPembayaran.jsx\";\r\nimport ModalServicesAmbil from \"./ModalServicesAmbil.jsx\";\r\nimport ModalServicesBatal from \"./ModalServicesBatal.jsx\";\r\nimport ModalServicesSelesai from \"./ModalServicesSelesai.jsx\";\r\nimport * as moment from \"moment-timezone\";\r\nimport Loading from 'react-fullscreen-loading';\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    hideModal: state.datamaster.modalDialog,\r\n  };\r\n};\r\nclass LihatServices extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoadingServicesSelesai: false,\r\n      isLoading: false,\r\n      dataservices: [],\r\n      FormModal: \"\",\r\n      pembayaran: false,\r\n      columns: [\r\n        // {\r\n        //   dataField: \"tgl_system\",\r\n        //   text: \"Tanggal System\",\r\n        //   footerAttrs: {\r\n        //     colSpan: \"4\",\r\n        //   },\r\n        //   footer: \"Total\",\r\n        // },\r\n        {\r\n          dataField: \"no_faktur_service\",\r\n          text: \"No Faktur\",\r\n          footerAttrs: {\r\n            colSpan: \"4\",\r\n          },\r\n          footer: \"Total\",\r\n        },\r\n        {\r\n          dataField: \"nama_customer\",\r\n          text: \"Nama Customer\",\r\n        },\r\n        {\r\n          dataField: \"alamat_customer\",\r\n          text: \"Alamat Customer\",\r\n        },\r\n        {\r\n          dataField: \"no_hp\",\r\n          text: \"No Hp\",\r\n        },\r\n        {\r\n          dataField: \"dp_rp\",\r\n          text: \"Dp Rp\",\r\n          formatter: (cell) => {\r\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\r\n          },\r\n          footer: (columnData) =>\r\n            parseInt(\r\n              columnData.reduce((acc, item) => acc + item, 0)\r\n            ).toLocaleString(\"kr-KO\"),\r\n        },\r\n        {\r\n          dataField: \"total\",\r\n          text: \"Total Rp\",\r\n          formatter: (cell) => {\r\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\r\n          },\r\n          footer: (columnData) =>\r\n            parseInt(\r\n              columnData.reduce((acc, item) => acc + item, 0)\r\n            ).toLocaleString(\"kr-KO\"),\r\n        },\r\n        {\r\n          dataField: \"selesai\",\r\n          text: \"Selesai\",\r\n          csvExport: false,\r\n          headerClasses: \"text-center\",\r\n          formatter: (rowcontent, row, index) => {\r\n            return (\r\n              <div className=\"row text-center\">\r\n                <div className=\"col-12\">\r\n                  {row.status_proses === \"OPEN\" ? (\r\n                    <button\r\n                      type=\"button\"\r\n                      data-tooltip=\"Service Selesai\"\r\n                      onClick={() => this.showModalServiceSelesai(row)}\r\n                      className=\"btn btn-success \"\r\n                    >\r\n                      <i className=\"fas fa-check\"></i>\r\n                    </button>\r\n                  ) : null}\r\n                  {row.status_proses === \"DONE\" ? (\r\n                    <button\r\n                      type=\"button\"\r\n                      data-tooltip=\"Service Ambil\"\r\n                      onClick={() => this.showModalServiceAmbil(row)}\r\n                      className=\"btn btn-warning\"\r\n                    >\r\n                      <i className=\"fa fa-file-export\"></i>\r\n                    </button>\r\n                  ) : null}\r\n                  {row.status_proses === \"OPEN\" || row.status_proses === \"DONE\" ? (\r\n                    <>\r\n                      {\" \"}\r\n                      <br />\r\n                      <br />{\" \"}\r\n                    </>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                  <button\r\n                    type=\"button\"\r\n                    data-tooltip=\"Service Batal\"\r\n                    onClick={() => this.showBatalServices(row)}\r\n                    className=\"btn btn-danger\"\r\n                  >\r\n                    <i className=\"fa fa-window-close\"></i>\r\n                  </button>\r\n                  &nbsp;\r\n                  <button\r\n                    type=\"button\"\r\n                    data-tooltip=\"Reprint Service\"\r\n                    onClick={() => this.Reprint(row)}\r\n                    className=\"btn btn-secondary\"\r\n                  >\r\n                    <i className=\"fa fa-print\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n          footer: \"\",\r\n        },\r\n        // {\r\n        //   dataField: \"ambil\",\r\n        //   text: \"Ambil\",\r\n        //   csvExport: false,\r\n        //   headerClasses: \"text-center\",\r\n        //   formatter: (rowcontent, row, index) => {\r\n        //     return (\r\n        //       <div className=\"row text-center\">\r\n        //         <div className=\"col-12\">\r\n        //           <button\r\n        //             type=\"button\"\r\n        //             onClick={() => this.showModalServiceAmbil(row)}\r\n        //             className=\"btn btn-warning mr-3\"\r\n        //           >\r\n        //             <i className=\"fa fa-file-export\"></i>\r\n        //           </button>\r\n        //         </div>\r\n        //       </div>\r\n        //     );\r\n        //   },\r\n        //   footer: \"\",\r\n        // },\r\n        // {\r\n        //   dataField: \"batal\",\r\n        //   text: \"Batal\",\r\n        //   csvExport: false,\r\n        //   headerClasses: \"text-center\",\r\n        //   formatter: (rowcontent, row, index) => {\r\n        //     return (\r\n        //       <div className=\"row text-center\">\r\n        //         <div className=\"col-12\">\r\n        //           <button\r\n        //             type=\"button\"\r\n        //             onClick={() => this.showBatalServices(row)}\r\n        //             className=\"btn btn-danger mr-3\"\r\n        //           >\r\n        //             <i className=\"fa fa-window-close\"></i>\r\n        //           </button>\r\n        //         </div>\r\n        //       </div>\r\n        //     );\r\n        //   },\r\n        //   footer: \"\",\r\n        // },\r\n        // {\r\n        //   dataField: \"print\",\r\n        //   text: \"Print\",\r\n        //   csvExport: false,\r\n        //   headerClasses: \"text-center\",\r\n        //   formatter: (rowcontent, row, index) => {\r\n        //     return (\r\n        //       <div className=\"row text-center\">\r\n        //         <div className=\"col-12\">\r\n        //           <button\r\n        //             type=\"button\"\r\n        //             onClick={() => this.Reprint(row)}\r\n        //             className=\"btn btn-secondary mr-3\"\r\n        //           >\r\n        //             <i className=\"fa fa-print\"></i>\r\n        //           </button>\r\n        //         </div>\r\n        //       </div>\r\n        //     );\r\n        //   },\r\n        //   footer: \"\",\r\n        // },\r\n      ],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    localStorage.setItem(\"total_rp_services\", JSON.stringify([]));\r\n    if (this.state.pembayaran === false) {\r\n      setItem('sisa_bayar_service',[])\r\n      setItem('trx_pemabayran_service',[])\r\n    }\r\n  }\r\n  showBatalServices(data) {\r\n    localStorage.setItem(\"total_rp_service_ambil\", JSON.stringify([]));\r\n    this.setState({ FormModal: \"SERVICE_BATAL\", pembayaran: true });\r\n    // this.props.dispatch(showModal());\r\n    this.props.dispatch(showModalServiceAmbil(data));\r\n  }\r\n  Reprint(id) {\r\n    let hasil = {\r\n      no_faktur_service: id.no_faktur_service,\r\n    };\r\n\r\npostData(\"service/get/bynota\", hasil)\r\n.then((res) => {\r\nlet notaservices = [];\r\nfor (let index = 0; index < 2; index++) {\r\nlet feedback = \"\";\r\nres.data.notaservice.forEach((row, index) => {\r\nlet jml_alamat = row.n_alamat_customer.length;\r\nfeedback += `========================================\\n`;\r\nfeedback += `             NOTA SERVICE               \\n`;\r\nfeedback += `========================================\r\nTanggal          : ${row.tgl_system}\r\nKode Sales       : ${row.kode_sales}\r\nNama Customer    : ${row.nama_customer}\r\nNo Hp            : ${row.no_hp}\r\nAlamat Customer  : ${row.n_alamat_customer.slice(0, 20)}\r\nTotal Service    : ${row.total_service.toLocaleString(\"kr-KO\")}\r\n`;\r\nif (jml_alamat > 20) {\r\nfeedback += `      ${row.n_alamat_customer.slice(20,40)}\r\n`;\r\n}\r\nif (jml_alamat > 40) {\r\nfeedback += `      ${row.n_alamat_customer.slice(40,60)}\r\n`;\r\n}\r\nfeedback += `========================================\\n`;\r\nfeedback += `Keterangan\\n`;\r\nfeedback += `========================================\\n`;\r\nlet ongkos = 0;\r\nlet harga_nota = 0;\r\nrow.detail_barang.forEach((detail, index) => {\r\nongkos = ongkos + detail.ongkos;\r\nlet jml_des = detail.deskripsi.length;\r\nharga_nota = harga_nota + detail.harga_nota;\r\nfeedback += `Nama Barang      : ${detail.nama_barang}\\n`;\r\nfeedback += `Berat            : ${detail.berat.toFixed(3)}\\n`;\r\nfeedback += `Jumlah           : ${detail.jumlah.toLocaleString(\"kr-KO\")}\\n`;\r\nfeedback += `Ongkos           : ${detail.ongkos.toLocaleString(\"kr-KO\")}\\n`;\r\nfeedback += `deskripsi        : ${detail.deskripsi.slice(0,20)}\\n`;\r\nif (jml_des > 20) {\r\nfeedback += `                   ${row.deskripsi.slice(20, 40)}`;\r\n}\r\nif (jml_des > 40) {\r\nfeedback += `                   ${row.deskripsi.slice(40, 60)}`;\r\n}\r\nfeedback += `========================================\\n`;\r\n});\r\nfeedback += `Total Ongkos     : ${ongkos.toLocaleString(\"kr-KO\")}\\n`;\r\nfeedback += `========================================\\n`;\r\nfeedback += `                               TTD      \\n`\r\nfeedback += `                                        \\n`\r\nfeedback += `                                        \\n`\r\nfeedback += `                                        \\n`\r\nfeedback += `                         (             )\\n`\r\nfeedback += `                                        \\n`\r\nfeedback += `                                        \\n`\r\nfeedback += `                                        \\n`\r\n  \r\n}\r\n);\r\nnotaservices.push(feedback);\r\n}\r\n\r\ndocument.getElementById(\"myInput\").value = notaservices.join(\"\");\r\n})\r\n      .then(() => {\r\n        console.log(\"masuk\");\r\n        const element = document.createElement(\"a\");\r\n        const file = new Blob([document.getElementById(\"myInput\").value], {\r\n          type: \"text/plain;charset=utf-8\",\r\n        });\r\n        element.href = URL.createObjectURL(file);\r\n        element.download = \"autoprint_service.txt\";\r\n        document.body.appendChild(element);\r\n        element.click();\r\n      })\r\n\r\n      .catch((err) => {});\r\n  }\r\n  handleSubmit(data) {\r\n    let data_post = {\r\n      tgl_awal: formatDate(\r\n        moment(new Date(data.tgl_awal)).format(\"YYYY-MM-DD\")\r\n      ),\r\n      tgl_akhir: formatDate(\r\n        moment(new Date(data.tgl_akhir)).format(\"YYYY-MM-DD\")\r\n      ),\r\n    };\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    postData(\"service/get/by-tanggal\", data_post)\r\n      .then((res) => {\r\n        localStorageencryp(\"tgl_laporan\", JSON.stringify(data_post));\r\n        if (res.data.length === 0) {\r\n          ToastNotification(\"info\", \"Data Services Tidak Ada\");\r\n          this.setState({\r\n            isLoading: false,\r\n            dataservices: [],\r\n          });\r\n        } else {\r\n          ToastNotification(\"success\", \"Data Services Tersedia\");\r\n          this.setState({\r\n            isLoading: false,\r\n            dataservices: res.data,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => this.errorhandling(err));\r\n  }\r\n  errorhandling(error) {\r\n    this.setState({\r\n      isLoading: false,\r\n      dataservices: [],\r\n    });\r\n    ToastNotification(\"info\", error.response === undefined ? 'Terjadi Kesalahan Saat Request Data' : error.response.data);\r\n  }\r\n  showModalServiceSelesai(data) {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(showModalServiceSelesai(data));\r\n    this.setState({\r\n      // FormModal: true,\r\n      pembayaran: false,\r\n    });\r\n  }\r\n  showModalPembayaran() {\r\n    let tgl_ambil = document.getElementById(\"tgl_ambil\").value;\r\n\r\n    if (tgl_ambil === \"\") {\r\n      ToastNotification(\"info\", \"Tanggal Ambil Harus Diisi\");\r\n      return false;\r\n    } else {\r\n      this.props.dispatch(showModal());\r\n    }\r\n  }\r\n  showModalServiceAmbil(data) {\r\n    setItem('data_service_barang', data)\r\n    // console.log(data);\r\n\r\n    // let cek_pembayaran = localStoragedecryp(\"trx_pemabayran_service\").length === 0\r\n    //       ? []\r\n    //       : JSON.parse(localStoragedecryp(\"trx_pemabayran_service\"));\r\n    //   // let total_dp = 0;\r\n    //   data.pembayaran.forEach((element) => {\r\n    //     let hasil_cek_pembaran = cek_pembayaran.findIndex(\r\n    //       (hasil) => hasil.jenis === element.jenis\r\n    //     );\r\n    //     if (hasil_cek_pembaran === -1) {\r\n    //       let row = {\r\n    //         jenis: element.jenis,\r\n    //         keterangan: \"DP-SERVICE\",\r\n    //         nominal: element.jumlah_rp,\r\n    //       };\r\n    //       cek_pembayaran.push(row);\r\n    //       setItem(\"trx_pemabayran_service\", cek_pembayaran);\r\n    //     } else {\r\n    //       let data_pembayaran = getItem(\"trx_pemabayran_service\");\r\n    //       data_pembayaran = data_pembayaran.map((element2) => {\r\n    //         if (element2.jenis === element.jenis) {\r\n    //           element2.nominal += element.jumlah_rp;\r\n    //         }\r\n    //         return element2;\r\n    //       });\r\n    //       // console.log(data_pembayaran);\r\n    //       setItem(\"trx_pemabayran_service\", data_pembayaran);\r\n    //     }\r\n    //     })\r\n    localStorage.setItem(\"total_rp_service_ambil\", JSON.stringify([]));\r\n    this.setState({ FormModal: \"SERVICE_AMBIL\", pembayaran: true });\r\n    // this.props.dispatch(showModal());\r\n    this.props.dispatch(showModalServiceAmbil(data));\r\n  }\r\n  simpanServicesSelesai(data) {\r\n    this.setState({\r\n      isLoadingServicesSelesai: true,\r\n    });\r\n    let hasil = {\r\n      no_faktur_service: data.no_faktur_services,\r\n      tgl_selesai: data.tgl_selesai,\r\n    };\r\n    postData(\"service/selesai\", hasil)\r\n      .then((res) => {\r\n        NotifSucces(res.data);\r\n        this.setState({\r\n          isLoadingServicesSelesai: false,\r\n        });\r\n        this.props.dispatch(reset(\"ModalServicesSelesai\"));\r\n      }).then(() => {\r\n        this.getLaporan()\r\n      })\r\n      .then(() => {\r\n        this.props.dispatch(hideModal());\r\n        localStorage.setItem(\"total_rp_services\", JSON.stringify([]));\r\n      })\r\n      .catch((err) => {\r\n        this.setState({\r\n          isLoadingServicesSelesai: false,\r\n        });\r\n        ToastNotification(\"info\", \"Data Services Gagal Disimpan\");\r\n      });\r\n    // console.log(hasil);/\r\n  }\r\n  getLaporan() {\r\n    let tanggal = getItem('tgl_laporan');\r\n    let data_post = {\r\n      tgl_awal : tanggal.tgl_awal,\r\n      tgl_akhir : tanggal.tgl_akhir,\r\n    }\r\n    postData(\"service/get/by-tanggal\", data_post)\r\n      .then((res) => {\r\n    // localStorageencryp(\"tgl_laporan\", JSON.stringify(data_post));\r\n    if (res.data.length === 0) {\r\n      this.setState({\r\n        isLoading: false,\r\n        dataservices: [],\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isLoading: false,\r\n        dataservices: res.data,\r\n      });\r\n    }\r\n  })\r\n  .catch((err) =>  this.setState({\r\n    isLoading: false,\r\n    dataservices: [],\r\n  }));\r\n  }\r\n  simpanServicesAmbil(data) {\r\n    this.setState({\r\n      isLoadingServicesSelesai : true\r\n    })\r\n    let no_faktur = document.getElementById(\"no_faktur_services_ambil\").value;\r\n    // let tgl_ambil = document.getElementById(\"tgl_ambil\").value;\r\n    let total = parseInt(document.getElementById(\"total_bayar\").value);\r\n    let total_dp = parseInt(document.getElementById(\"total_dp\").value);\r\n\r\n    // let data_pembayaran = {\r\n    //   jenis: data.jenis,\r\n    //   jumlah_rp: data.nominal,\r\n    // };\r\n    let pembayaran = getItem(\"trx_pemabayran_service\");\r\n    let data_pembayaran = [];\r\n    let total_pembayarn = \"\";\r\n    pembayaran.forEach((element) => {\r\n      let row = {\r\n        bank : element.jenis !== \"CASH\" ? element.nama_bank : \"CASH\", \r\n        jenis: element.jenis,\r\n        keterangan: element.keterangan,\r\n        fee : element.jenis===\"CREDIT\" ? parseInt(element.fee) || 0 : 0,   \r\n        jumlah_rp: element.jenis ===\"CASH\" ? parseInt(element.nominal) - parseInt(getItem('sisa_bayar_service').sisa_bayar) : parseInt(element.nominal),\r\n      };\r\n      total_pembayarn = element.nominal + total_pembayarn;\r\n      data_pembayaran.push(row);\r\n    });\r\n    // if (data.grand_total_pembayaran === undefined) {\r\n      let hasil = {\r\n        no_faktur_service: no_faktur,\r\n        tgl_ambil: \"2021-01-01\",\r\n        total: total,\r\n        pembayaran: data_pembayaran\r\n      };\r\n    // } else {\r\n    // console.log(hasil);\r\n    // return false;\r\n    if (parseInt(total) - total_dp > parseInt(total_pembayarn)) {\r\n      let hasil_bayar = parseInt(total) - total_dp - parseInt(total_pembayarn);\r\n        ToastNotification(\r\n          \"info\",\r\n          \"Pembayaran Masih Kurang \" + parseInt(hasil_bayar).toLocaleString(\"kr-KO\")\r\n        );\r\n        return false;\r\n    \r\n    }\r\n\r\n    postData(\"service/ambil\", hasil)\r\n      .then((res) => {\r\n        this.setState({\r\n          isLoadingServicesSelesai : false\r\n        })\r\n        NotifSucces(res.data);\r\n      })\r\n      .then(() => {\r\n        this.setState({\r\n          isLoadingServicesSelesai : false\r\n        })\r\n        this.props.dispatch(reset(\"ModalPembayaran\"));\r\n      })\r\n      .then(() => {\r\n        this.setState({\r\n          isLoadingServicesSelesai : false\r\n        })\r\n        this.getLaporan()\r\n      })\r\n      .then(() => {\r\n        this.props.dispatch(hideModal());\r\n        this.setState({\r\n          FormModal: \"\",\r\n          pembayaran: false,\r\n          dataservices: [],\r\n          isLoadingServicesSelesai : false\r\n        });\r\n        setItem('sisa_bayar_service',[])\r\n        setItem('sisa_bayar_service_ambil',[])\r\n        setItem('trx_pemabayran_service',[])\r\n        setItem('total_rp_service_ambil',[])\r\n        setItem('data_service_barang',[])\r\n      })\r\n      .catch((err) => {\r\n        this.setState({\r\n          isLoadingServicesSelesai : false\r\n        })\r\n        ToastNotification(\"info\", \"Data Services Gagal Disimpan\");\r\n      });\r\n    // let hasil = {\r\n    //   no_faktur_service: data.no_faktur_services,\r\n    //   tgl_selesai: data.tgl_selesai,\r\n    // };\r\n    // console.log(hasil);\r\n  }\r\n  simpanServicesBatal(data) {\r\n    // console.log(data);\r\n    let hasil = {\r\n      no_faktur_service: data.no_faktur_services,\r\n    };\r\n    postData(\"service/batal\", hasil)\r\n      .then((res) => {\r\n        NotifSucces(res.data);\r\n      })\r\n      .then(() => {\r\n        this.props.dispatch(reset(\"ModalPembayaran\"));\r\n      })\r\n      .then(() => {\r\n        this.props.dispatch(hideModal());\r\n        this.setState({\r\n          FormModal: \"\",\r\n          pembayaran: false,\r\n          dataservices: [],\r\n        });\r\n      })\r\n      .then(() => {\r\n        this.getLaporan()\r\n      })\r\n      .catch((err) => {\r\n        ToastNotification(\"info\", \"Data Services Gagal Disimpan\");\r\n      });\r\n  }\r\n  back() {\r\n    localStorage.setItem(\"total_rp_service_ambil\", JSON.stringify([]));\r\n    this.setState({ FormModal: \"\" });\r\n    this.setState({\r\n      pembayaran : false\r\n    })\r\n    setItem('sisa_bayar_service',[])\r\n      setItem('trx_pemabayran_service',[])\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Services</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Lihat Services</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Lihat Services </h1>\r\n        <Panel>\r\n          <textarea\r\n            style={{ display: \"none\" }}\r\n            id=\"myInput\"\r\n            rows=\"100\"\r\n            cols=\"100\"\r\n          />\r\n\r\n          <PanelHeader>Lihat Services</PanelHeader>\r\n          <br />\r\n          {/* Lihat Services */}\r\n\r\n          <div className=\"container\">\r\n            {this.state.FormModal === \"SERVICE_AMBIL\" ? (\r\n              <ModalServicesAmbil\r\n                showModalPembayaran={() => this.showModalPembayaran()}\r\n                back={() => this.back()}\r\n                onSubmit={(data) => this.simpanServicesAmbil(data)}\r\n              />\r\n            ) : this.state.FormModal === \"SERVICE_BATAL\" ? (\r\n              <ModalServicesBatal\r\n                back={() => this.back()}\r\n                onSubmit={(data) => this.simpanServicesBatal(data)}\r\n              />\r\n            ) : (\r\n              <>\r\n                <HeadLihatServices\r\n                  onSubmit={(data) => this.handleSubmit(data)}\r\n                  isLoading={this.state.isLoading}\r\n                />\r\n                <Tabel\r\n                  keyField=\"no_faktur_group\"\r\n                  exportCsv={false}\r\n                  data={this.state.dataservices}\r\n                  columns={this.state.columns}\r\n                  empty={true}\r\n                  textEmpty=\"Data Barang Kosong\"\r\n                />\r\n              </>\r\n            )}\r\n          </div>\r\n        </Panel>\r\n        <ModalGlobal\r\n          title={<TitleModal state={this.state.pembayaran} />}\r\n          size={this.state.pembayaran ? \"P\" : \"xl\"}\r\n          content={\r\n            this.state.pembayaran === true ? (\r\n              <ModalPembayaran\r\n                onSubmit={(data) => this.simpanServicesAmbil(data)}\r\n              />\r\n            ) : (\r\n              <ModalServicesSelesai\r\n                isLoadingServicesSelesai={this.state.isLoadingServicesSelesai}\r\n                onSubmit={(data) => this.simpanServicesSelesai(data)}\r\n              />\r\n            )\r\n          }\r\n        />\r\n         {this.state.isLoadingServicesSelesai ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null}\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nfunction TitleModal(data, onSubmit) {\r\n  // console.log(state.state);\r\n  if (data.state === true) {\r\n    return \"Form Pembayaran Service Ambil\";\r\n  } else {\r\n    return \"Form Services Selesai\";\r\n  }\r\n}\r\n// export default connect * LihatServices;\r\n\r\nLihatServices = reduxForm({\r\n  form: \"LihatServices\",\r\n  enableReinitialize: true,\r\n  // validate: ValidasiDataUsers,\r\n})(LihatServices);\r\nexport default connect(maptostate, null)(LihatServices);\r\n","const ValidasiPembayaran = (value) => {\r\n    const errors = {};\r\n    if (!value.jenis) {\r\n        errors.jenis = \"Jenis Tidak Boleh Kosong\";\r\n    }\r\n    // if (!value.cash) {\r\n    //     errors.cash = \"Nominal Tidak Boleh Kosong\";\r\n    // }\r\n\r\n    return errors;\r\n}\r\n\r\nexport default ValidasiPembayaran;\r\n\r\n\r\n","const ValidasiServicesSelesai = (value) => {\r\n    const errors = {};\r\n    if (!value.tgl_selesai) {\r\n        errors.tgl_selesai = \"Tanggal Selesai Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.tgl_ambil) {\r\n        errors.tgl_ambil = \"Tanggal Tidak Boleh Kosong\";\r\n    }\r\n \r\n    return errors;\r\n}\r\n\r\nexport default ValidasiServicesSelesai;\r\n\r\n\r\n"],"sourceRoot":""}