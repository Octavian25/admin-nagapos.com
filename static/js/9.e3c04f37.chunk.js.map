{"version":3,"sources":["pages/Service/TransaksiServices/ModalDataCustomer.jsx","pages/Service/TransaksiServices/HeadInputPembayaran.jsx","pages/Service/TransaksiServices/ModalPembayaran.jsx","Validasi/Services/ValidasiTransaksiService.jsx","pages/Service/TransaksiServices/ModalTambahBarang.jsx","pages/Service/TransaksiServices/HeadServices.jsx","pages/Service/TransaksiServices/FormTransaksiServces.jsx","Validasi/Penjualan/ValidasiPembayaran.jsx","Validasi/ManageUsers/ValidasiDataUsers.jsx","Validasi/Penjualan/ValidasiFormDataMemberPenjualan.jsx"],"names":["jenis_pelanggan","value","name","ModalDataCustomer","Component","constructor","props","super","this","state","showMember","componentDidMount","dispatch","getDataSales","data_customer","localStorage","getItem","JSON","parse","setState","change","changemember","e","document","getElementById","focus","getMember","getData","then","res","data","length","ToastNotification","forEach","item","index","nama_customer","no_hp","alamat_customer","catch","err","render","react_default","a","createElement","onSubmit","handleSubmit","onKeyPress","key","preventDefault","autoComplete","className","Field","label","placeholder","options","DataSales","filter","list","undefined","kode_sales","map","component","ReanderSelect","onChange","id","target","ReanderField","type","readOnly","normalize","NumberOnly","disabled","isLoadingDataCustomer","Fragment","reduxForm","form","enableReinitialize","validate","ValidasiFormDataMemberPenjualan","connect","initialValues","kode_customer","datamaster","currencyMask","createNumberMask","prefix","locale","jenis_pembayaran","HeadInputPembayaran","isLoading","type_pembayaran","lebih","columns","dataField","text","footerAttrs","colSpan","footer","setStartDate","bind","data_barang_penjualan","localStoragedecryp","total","setTimeout","hitungTotal","kembali","nominal_kembali","pilihPembyaran","date","tgl_awal","Date","copyValue","parseInt","library","Object","assign","style","display","tabIndex","onFocus","notif","ValidasiPembayaran","selector","formValueSelector","_selector","cash","harus_bayar_rp","element","nominal","hasil","parseFloat","toString","replace","estimasi_pesanan","getTglSystem","ModalPembayaran","formatter","cell","toLocaleString","columnData","reduce","acc","csvExport","headerClasses","rowcontent","row","keterangan","onClick","hapusdata","Swal","fire","title","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","result","isConfirmed","splice","setItem","status","simpanPembayaran","no_card","jenis","nama_bank","datacek","total_transaksi","sisa_bayar","b","formatDate","moment","estimasi_service","format","findIndex","toUpperCase","fee","push","masuk","data_pembayaran","element2","TransaksiServices_HeadInputPembayaran","keyField","exportCsv","empty","pagination","textEmpty","bayarSekarang","loading_default","loading","background","loaderColor","data_barang","no_titip_group","ValidasiTransaksiService","errors","nama_barang","berat","ongkos","ModalTambahBarang","harga_jual","berat_jual","hargapergram","getBarcode","kode_barcode","nama_atribut","berat_atribut","harga_atribut","Gramasi","defaultValue","submitting","jumlah","HeadServices","isLoadingBatal","FormModal","stringify","hideModal","simpanBarang","deskripsi","cek","reset","setTransaksiServices","pembayaran","total_pembayarn","jumlah_rp","Math","abs","detail_barang","total_rp","data_services","kode_member","dp_rp","postData","notaservices","feedback","jml_alamat","n_alamat_customer","concat","tgl_system","slice","total_service","harga_nota","detail","jml_des","toFixed","join","file","Blob","href","URL","createObjectURL","download","body","appendChild","click","errorhandling","error","console","log","ShowModalBarang","showModal","ShowModalCustomer","showModalPembayaran","customer","barang","batalServices","panel","rows","cols","tabel","tambahData","btnText","btnOptional","namaCustomer","jenisCustomer","btnTextOptional","handleClick","handleClickOptional","ModalGlobal","size","TitleModal","content","TransaksiServices_ModalDataCustomer","TransaksiServices_ModalTambahBarang","TransaksiServices_ModalPembayaran","ValidasiDataUsers","services","modalDialog","dataservices","React","berhasil","componentWillUnmount","react_router_dom","to","TransaksiServices_HeadServices","user_id","user_name","level","alamat"],"mappings":"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","file":"static/js/9.e3c04f37.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { getDataSales } from \"../../../actions/datamaster_action\";\r\nimport { ReanderField, ReanderSelect } from \"../../../components/helpers/field\";\r\nimport { ToastNotification } from \"../../../components/helpers/notification\";\r\nimport { getData } from \"../../../config/axios\";\r\nimport { NumberOnly } from \"../../../Validasi/normalize\";\r\nimport ValidasiFormDataMemberPenjualan from \"../../../Validasi/Penjualan/ValidasiFormDataMemberPenjualan\";\r\n\r\nconst maptostate = (state) => {\r\n  let data_customer = localStorage.getItem(\"data_customer_services_tmp\") === null || undefined  ? [] :  JSON.parse(localStorage.getItem(\"data_customer_services_tmp\") || []);\r\n  return {\r\n    initialValues:{\r\n      kode_sales :   data_customer.kode_sales || \"\",\r\n      jenis_pelanggan : data_customer.jenis_pelanggan || \"\",\r\n      kode_customer : data_customer.kode_customer || \"\",\r\n      nama_customer : data_customer.nama_customer || \"\",\r\n      no_hp : data_customer.no_hp || \"\",\r\n      alamat_customer : data_customer.alamat_customer || \"\",\r\n    },\r\n    DataSales: state.datamaster.getDataSales,\r\n  };\r\n};\r\n\r\nconst jenis_pelanggan = [\r\n  {\r\n    value: \"MEMBER\",\r\n    name: \"MEMBER\",\r\n  },\r\n  {\r\n    value: \"NONMEMBER\",\r\n    name: \"NON MEMBER\",\r\n  },\r\n];\r\nclass ModalDataCustomer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showMember: true,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getDataSales());\r\n    let data_customer = localStorage.getItem(\"data_customer_services_tmp\")  === null || undefined ? [] :  JSON.parse(localStorage.getItem(\"data_customer_services_tmp\") || []);\r\n    if (data_customer && data_customer.jenis_pelanggan === \"MEMBER\") {\r\n      this.setState({\r\n        showMember: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        showMember: true,\r\n      });\r\n      this.props.change(\"jenis_pelanggan\", \"NONMEMBER\")\r\n    }\r\n   \r\n  }\r\n  changemember(e) {\r\n    // console.log(e);\r\n    if (e === \"MEMBER\") {\r\n      this.setState({\r\n        showMember: false,\r\n      });\r\n      document.getElementById('kode_member').focus()\r\n    } else {\r\n      document.getElementById('nama_customer').focus()\r\n      this.props.change(\"kode_customer\", \"\");\r\n      this.props.change(\"nama_customer\", \"\");\r\n      this.props.change(\"no_hp\", \"\");\r\n      this.props.change(\"alamat_customer\", \"\");\r\n      this.setState({\r\n        showMember: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  getMember(e) {\r\n    // console.log(e);\r\n    getData(\"member/get/by-kode-member/\" + e).then((res) => {\r\n      // console.log(res.data);\r\n      if (res.data.length === 0) {\r\n        ToastNotification(\"info\", \"Member Yang Anda Masukan Tidak Ada !!!\");\r\n      } else {\r\n        res.data.forEach((item, index) => {\r\n          this.props.change(\"nama_customer\", item.nama_customer);\r\n          this.props.change(\"no_hp\", item.no_hp);\r\n          this.props.change(\"alamat_customer\", item.alamat_customer);\r\n        })\r\n      }\r\n    }).catch((err) => {\r\n      ToastNotification(\"info\", \"Terjadi Kesalahan SIlahkan Ulangi Kembali !!!\");\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n        autoComplete=\"off\"\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <Field\r\n              name=\"kode_sales\"\r\n              label=\"Pilih Kode Sales\"\r\n              placeholder=\"Masukan Kode Sales\"\r\n              options={this.props.DataSales.filter(\r\n                (list) => list.kode_sales !== undefined\r\n              ).map((list) => {\r\n                let data = {\r\n                  value: list.kode_sales,\r\n                  name: list.kode_sales,\r\n                };\r\n                return data;\r\n              })}\r\n              component={ReanderSelect}\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              name=\"jenis_pelanggan\"\r\n              label=\"Pilih Pelanggan\"\r\n              onChange={(e) => this.changemember(e)}\r\n              placeholder=\"Silahkan Pilih Pelanggan\"\r\n              options={jenis_pelanggan}\r\n              component={ReanderSelect}\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              id=\"kode_member\"\r\n              name=\"kode_customer\"\r\n              onChange={(e) => this.getMember(e.target.value)}\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              readOnly={this.state.showMember}\r\n              label=\"Kode Customer\"\r\n              placeholder=\"Masukan Kode Customer\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              id=\"nama_customer\"\r\n              name=\"nama_customer\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Nama Customer\"\r\n              placeholder=\"Masukan Nama Customer\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n          <Field\r\n              name=\"no_hp\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              normalize={NumberOnly}\r\n              label=\"No Hp\"\r\n              placeholder=\"Masukan No Hp\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              name=\"alamat_customer\"\r\n              component={ReanderField}\r\n              type=\"textarea\"\r\n              label=\"Alamat Customer\"\r\n              placeholder=\"Masukan Alamat Customer\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-8\"></div>\r\n          <div className=\"col-4\">\r\n            <button\r\n              className=\"btn btn-primary btn-block\"\r\n              disabled={this.props.isLoadingDataCustomer}\r\n              type=\"submit\"\r\n            >\r\n              {this.props.isLoadingDataCustomer ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Menyimpan\r\n                </>\r\n              ) : (\r\n                \"Simpan Data\"\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nModalDataCustomer = reduxForm({\r\n  form: \"ModalDataCustomer\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiFormDataMemberPenjualan,\r\n})(ModalDataCustomer);\r\nexport default connect(maptostate, null)(ModalDataCustomer);\r\n","import {\r\n  React,\r\n  Component,\r\n  connect,\r\n  Field,\r\n  createNumberMask,\r\n  formValueSelector,\r\n  reduxForm,\r\n  NumberOnly,\r\n  localStoragedecryp,\r\n  ReanderField,\r\n  ReanderSelect,\r\n  getTglSystem,\r\n} from \"../../../components/helpers/library\";\r\nimport { getDataSales } from \"../../../actions/datamaster_action\";\r\nimport ValidasiPembayaran from \"../../../Validasi/Penjualan/ValidasiPembayaran\";\r\n\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  locale: \"kr-KO\",\r\n});\r\nconst jenis_pembayaran = [\r\n  {\r\n    value: \"CASH\",\r\n    name: \"CASH\",\r\n  },\r\n  {\r\n    value: \"DEBET\",\r\n    name: \"DEBET\",\r\n  },\r\n  {\r\n    value: \"TRANSFER\",\r\n    name: \"TRANSFER\",\r\n  },\r\n  {\r\n    value : \"CREDIT\",\r\n    name: \"CREDIT\"\r\n  }\r\n];\r\nclass HeadInputPembayaran extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      type_pembayaran: \"CASH\",\r\n      lebih: false,\r\n      columns: [\r\n        // {\r\n        //   dataField: \"nama_bank\",\r\n        //   text: \"Nama Bank\",\r\n        //   footerAttrs: {\r\n        //     colSpan: \"2\",\r\n        //   },\r\n        //   footer: \"Grand Total\",\r\n        // },\r\n        {\r\n          dataField: \"type\",\r\n          text: \"Type\",\r\n          footerAttrs: {\r\n            colSpan: \"1\",\r\n          },\r\n          footer: \"Grand Total\",\r\n        },\r\n        {\r\n          dataField: \"Total\",\r\n          text: \"Total\",\r\n          footer: \"\",\r\n        },\r\n      ],\r\n    };\r\n    this.setStartDate = this.setStartDate.bind(this);\r\n  }\r\n  componentDidMount() {\r\n   \r\n    this.props.dispatch(getDataSales());\r\n    let data_barang_penjualan = JSON.parse(\r\n      localStoragedecryp(\"data_barang_services\")\r\n    );\r\n\r\n    let total = 0;\r\n    data_barang_penjualan.forEach((item, index) => {\r\n      // console.log(item.total);\r\n      total = total + item.total;\r\n      this.props.change(\"grand_total_pembayaran\", total);\r\n      this.props.change(\"harus_bayar_rp\", total);\r\n    });\r\n    this.props.change(\"jenis\", \"CASH\");\r\n    setTimeout(() => {\r\n      document.getElementById(\"cash_trx_penjualan\").focus();\r\n    }, 100);\r\n  }\r\n  hitungTotal() {\r\n    this.props.change(\"kembali\", this.props.kembali);\r\n    this.props.change(\"nominal_kembali\", this.props.nominal_kembali);\r\n\r\n  }\r\n\r\n  pilihPembyaran(e) {\r\n    if (e === \"CASH\") {\r\n      this.setState({\r\n        type_pembayaran: \"CASH\",\r\n      });\r\n    } else if (e === \"TRANSFER\") {\r\n      this.setState({\r\n        type_pembayaran: \"TRANSFER\",\r\n      });\r\n    } else if (e === \"DEBET\") {\r\n      this.setState({\r\n        type_pembayaran: \"DEBET\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        type_pembayaran: \"CREDIT\"\r\n      })\r\n    }\r\n    this.props.change(\"cash\", \"\");\r\n\r\n    // document.getElementById('cash_trx_penjualan').focus()\r\n  }\r\n  setStartDate(date) {\r\n    this.setState({\r\n      tgl_awal: new Date(date),\r\n    });\r\n  }\r\n\r\n  copyValue(e) {\r\n    this.props.change(\"cash\",parseInt(NumberOnly(e)))\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n        autoComplete=\"off\"\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <Field\r\n              name=\"grand_total_pembayaran\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              onChange={this.hitungTotal()}\r\n              readOnly={true}\r\n              {...currencyMask}\r\n              label=\"Total Harga Jual\"\r\n              placeholder=\"Total Harga Jual\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-6\">\r\n            <Field\r\n              id=\"harus_bayar_rp\"\r\n              name=\"harus_bayar_rp\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              onChange={this.hitungTotal()}\r\n              readOnly={true}\r\n              {...currencyMask}\r\n              label=\"Harus Bayar Rp\"\r\n              placeholder=\"Harus Bayar Rp\"\r\n            />\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <Field\r\n              name=\"jenis\"\r\n              label=\"Pilih Jenis Bayar\"\r\n              placeholder=\"Pilih Jenis Pembayaran\"\r\n              options={jenis_pembayaran}\r\n              onChange={(e) => this.pilihPembyaran(e)}\r\n              component={ReanderSelect}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            className=\"col-6\"\r\n            style={{\r\n              display:\r\n                this.state.type_pembayaran === \"CASH\"\r\n                  ? \"none\"\r\n                  : this.state.type_pembayaran === \"DEBET\"\r\n                  ? \"block\"\r\n                  : \"block\",\r\n            }}\r\n          >\r\n            <Field\r\n              tabIndex=\"1\"\r\n              name=\"nama_bank\"\r\n              id=\"nama_bank\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Bank\"\r\n              placeholder=\"Masukan Nama Bank\"\r\n            />\r\n          </div>\r\n          <div\r\n            className=\"col-6\"\r\n            style={{\r\n              display:\r\n                this.state.type_pembayaran === \"CASH\"\r\n                  ? \"none\"\r\n                  : this.state.type_pembayaran === \"DEBET\"\r\n                  ? \"none\"\r\n                  : \"block\",\r\n            }}\r\n          >\r\n            <Field\r\n              tabIndex=\"1\"\r\n              name=\"no_card\"\r\n              id=\"no_card\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label={this.state.type_pembayaran === \"TRANSFER\" ? \"No Rek\" : \"Card No\"}\r\n              placeholder={this.state.type_pembayaran === \"TRANSFER\" ? \"Masukan No Rek\" : \"Masukan Card No\"}\r\n            />\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <Field\r\n              tabIndex=\"1\"\r\n              name=\"cash\"\r\n              id=\"cash_trx_penjualan\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Nominal\"\r\n              onChange={this.hitungTotal()}\r\n              {...currencyMask}\r\n              normalize={NumberOnly}\r\n              placeholder=\"Masukan Nominal\"\r\n            />\r\n          </div>\r\n          <div className=\"col-6\" \r\n          style={{\r\n              display:\r\n                this.state.type_pembayaran === \"CREDIT\"\r\n                  ? \"block\"\r\n                  : \"none\"\r\n            }}>\r\n            <Field\r\n              tabIndex=\"1\"\r\n              name=\"fee\"\r\n              id=\"fee\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Fee (%)\"\r\n              normalize={NumberOnly}\r\n              placeholder=\"5\"\r\n            />\r\n          </div>\r\n          <div className=\"col-6 d-none\">\r\n            <Field\r\n              tabIndex=\"1\"\r\n              name=\"nominal_kembali\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Nominal\"\r\n              placeholder=\"Masukan Nominal\"\r\n            />\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <Field\r\n              name=\"kembali\"\r\n              id=\"sisa_bayar\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              readOnly={true}\r\n              label=\"Sisa\"\r\n              onFocus={(e)=>this.copyValue(e.target.value)}\r\n              //   {...currencyMask}\r\n              // normalize={NumberOnly}\r\n              placeholder=\"Sisa Pembayaran\"\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            className={\r\n              this.state.type_pembayaran === \"CASH\"\r\n                ? \"col-6 text-right\"\r\n                : this.state.type_pembayaran === \"TRANSFER\"\r\n                ? \"col-6 text-right\"\r\n                : \"col-12 text-right\"\r\n            }\r\n          >\r\n            <br />\r\n\r\n            <label>&nbsp;</label>\r\n            <button\r\n              tabIndex=\"2\"\r\n              disabled={this.props.notif}\r\n              className=\"btn btn-primary\"\r\n            >\r\n              {\" \"}\r\n              <i className=\"fa fa-plus\"></i>\r\n            </button>\r\n          </div>\r\n         \r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadInputPembayaran = reduxForm({\r\n  form: \"HeadInputPembayaran\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiPembayaran,\r\n})(HeadInputPembayaran);\r\n\r\nconst selector = formValueSelector(\"HeadInputPembayaran\"); // <-- same as form name\r\n\r\nexport default connect((state) => {\r\n  const { cash,harus_bayar_rp } = selector(\r\n    state,\r\n    \"grand_total_pembayaran\",\r\n    \"harus_bayar_rp\",\r\n    \"cash\"\r\n  );\r\n  let data = JSON.parse(localStorage.getItem(\"trx_pemabayaran_services\")) || [];\r\n  let total = 0;\r\n  data.forEach((element) => {\r\n    total = element.nominal + total;\r\n  });\r\n  let hasil = parseFloat(total || 0) - parseFloat(harus_bayar_rp || 0);\r\n\r\n  // let verifikasi_pembayaran_lebih = ;\r\n  \r\n  return {\r\n    kembali: hasil.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\r\n    nominal_kembali : hasil + parseInt(cash),\r\n\r\n    initialValues: {\r\n      estimasi_pesanan: getTglSystem(),\r\n      // tgl_akhir: getTglSystem(),\r\n    },\r\n  };\r\n})(HeadInputPembayaran);\r\n","import {\r\n  React,\r\n  reduxForm,\r\n  Component,\r\n  connect,\r\n  getItem,\r\n  setItem,\r\n  Tabel,\r\n  Swal,\r\n  formatDate,\r\n  moment,\r\n  ToastNotification\r\n} from \"../../../components/helpers/library\";\r\n\r\nimport ValidasiPembayaran from \"../../../Validasi/Penjualan/ValidasiPembayaran\";\r\nimport HeadInputPembayaran from \"./HeadInputPembayaran\";\r\nimport Loading from 'react-fullscreen-loading';\r\n\r\n// data_barang_penjualan_tmp\r\n\r\n\r\nconst maptostate = (state) => {\r\n  let data_barang = getItem(\"data_barang_penjualan_tmp\") || [];\r\n  let status = \"PENJUALAN\";\r\n  data_barang.forEach((element) => {\r\n    if (element.no_titip_group === \"-\") {\r\n      status = \"PENJUALAN\";\r\n    } else {\r\n      status = \"TITIPAN\";\r\n    }\r\n  });\r\n  return {\r\n    status: status,\r\n  };\r\n};\r\nclass ModalPembayaran extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      type_pembayaran: \"CASH\",\r\n      columns: [\r\n        {\r\n          dataField: \"jenis\",\r\n          text: \"Jenis\",\r\n          footerAttrs: {\r\n            colSpan: \"2\",\r\n          },\r\n          footer: \"Grand Total\",\r\n        },\r\n        {\r\n          dataField: \"keterangan\",\r\n          text: \"Keterangan\",\r\n        },\r\n        {\r\n          dataField: \"nominal\",\r\n          text: \"Total\",\r\n          formatter: (cell) => {\r\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\r\n          },\r\n          footer: (columnData) =>\r\n            parseInt(\r\n              columnData.reduce((acc, item) => acc + item, 0)\r\n            ).toLocaleString(\"kr-KO\"),\r\n        },\r\n        {\r\n          dataField: \"action\",\r\n          text: \"Action\",\r\n          csvExport: false,\r\n          headerClasses: \"text-center\",\r\n          formatter: (rowcontent, row, index) => {\r\n            return (\r\n              <div className=\"row text-center\">\r\n                <div className=\"col-12\">\r\n                  <button\r\n                    type=\"button\"\r\n                    disabled={row.keterangan === \"TITIPAN\" ? true : false}\r\n                    onClick={() => this.hapusdata(index)}\r\n                    className=\"btn btn-danger mr-3\"\r\n                  >\r\n                    <i className=\"fa fa-trash\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n          footer: \"\",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n  hapusdata(id) {\r\n    Swal.fire({\r\n      title: \"Anda Yakin !!\",\r\n      text: \"Ingin Menghapus Data Ini ?\",\r\n      icon: \"warning\",\r\n      position: \"top-center\",\r\n      cancelButtonText: \"Tidak\",\r\n      showCancelButton: true,\r\n      confirmButtonText: \"OK\",\r\n      showConfirmButton: true,\r\n    }).then((result) => {\r\n      // console.log(id);\r\n      if (result.isConfirmed) {\r\n        let data = getItem(\"trx_pemabayaran_services\");\r\n        data.splice(id, 1);\r\n        setItem(\"trx_pemabayaran_services\", data);\r\n        this.setState({\r\n          status: \"berhasil\",\r\n        });\r\n        // deleteLocalItemBarcode(\"data_barang_hancur_tmp\", id);\r\n        // this.props.dispatch(getListReturnSupplier());\r\n      }\r\n    });\r\n  }\r\n  simpanPembayaran(row) {\r\n    if(row.no_card === undefined && row.jenis !== \"CASH\" && row.jenis !== \"DEBET\"){\r\n      ToastNotification(\"info\", \"Nomor kartu tidak boleh kosong\");\r\n      return false;\r\n    }\r\n    if(row.nama_bank === undefined && row.jenis !== \"CASH\"){\r\n      ToastNotification(\"info\", \"Nama Bank tidak boleh kosong\");\r\n      return false;\r\n    }\r\n    if(row.cash === undefined || row.cash === \"0\"){\r\n      ToastNotification(\"info\", \"Nominal tidak boleh kosong\");\r\n      return false;\r\n    }\r\n    let datacek = {\r\n      total_transaksi : row.harus_bayar_rp,\r\n      sisa_bayar : row.nominal_kembali\r\n    }\r\n    setItem('sisa_bayar_services',datacek)\r\n    let data = JSON.parse(localStorage.getItem(\"trx_pemabayaran_services\")) || [];\r\n    if (row.jenis !== \"CASH\" && !data.length) {\r\n      if (row.kembali.replace(/[^0-9]/g, \"\") - row.cash < 0) {\r\n        ToastNotification(\"info\", \"Pembayaran tidak boleh lebih dari sisa\");\r\n        return false;\r\n      }\r\n    } else {\r\n      if(row.jenis !== \"CASH\"){\r\n      if (row.kembali.replace(/[^0-9]/g, \"\") - row.cash < 0 && parseInt(row.kembali) !== 0){\r\n        ToastNotification(\"info\", \"Pembayaran tidak boleh lebih dari sisa\");\r\n        return false;\r\n      } else {\r\n        if (data.reduce((a, b) => a + b.nominal, 0) >= row.harus_bayar_rp) {\r\n          ToastNotification(\"info\", \"Pembayaran Sudah Cukup\");\r\n          return false;\r\n        }\r\n        }\r\n      }\r\n    }\r\n   \r\n    setItem('estimasi_service', formatDate(moment(new Date(row.estimasi_service)).format(\"YYYY-MM-DD\")))\r\n\r\n\r\n    let cash = data.findIndex((hasil) => hasil.jenis === \"CASH\");\r\n    if (cash >= 0) {\r\n      if (row.kembali.replace(/[^0-9]/g, \"\") - row.cash < 0 && data.reduce((a, b) => a + b.nominal, 0) > row.harus_bayar_rp) {\r\n        ToastNotification(\"info\", \"Pembayaran Sudah Cukup\");\r\n        return false;\r\n      } else {\r\n        if (data.reduce((a, b) => a + b.nominal, 0) >= row.harus_bayar_rp) {\r\n          ToastNotification(\"info\", \"Pembayaran Sudah Cukup\");\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    \r\n    let index = data.findIndex((hasil) => hasil.jenis === row.jenis);\r\n    if (index === -1) {\r\n      let keterangan = \"\";\r\n      if (row.jenis === \"CASH\") {\r\n        keterangan = \"CASH\";\r\n      } else if (row.jenis === \"TRANSFER\") {\r\n        keterangan = row.no_card + \" - \" + row.nama_bank;\r\n      } else {\r\n        keterangan = row.nama_bank;\r\n      }\r\n      let hasil = {\r\n        jenis: row.jenis,\r\n        nominal: parseInt(row.cash),\r\n        nama_bank: row.nama_bank !== undefined ? row.nama_bank.toUpperCase() : \"-\",\r\n        fee : row.jenis === \"CREDIT\" ? row.fee || 0 : 0 ,\r\n        no_card: row.no_card || \"-\",\r\n        keterangan: keterangan.toUpperCase(),\r\n      };\r\n      data.push(hasil);\r\n      this.setState({\r\n        masuk: true,\r\n      });\r\n      setItem(\"trx_pemabayaran_services\", data);\r\n    } else {\r\n      let data_pembayaran = getItem(\"trx_pemabayaran_services\");\r\n      data_pembayaran = data_pembayaran.map((element2) => {\r\n        if (element2.jenis === row.jenis) {\r\n          element2.nominal += parseInt(row.cash);\r\n        }\r\n        return element2;\r\n      });\r\n      setItem(\"trx_pemabayaran_services\", data_pembayaran);\r\n      this.setState({\r\n        status: true,\r\n      });\r\n      // ToastNotification(\r\n      //   \"info\",\r\n      //   \"Pembayaran dengan \" + row.jenis + \" sudah ada\"\r\n      // );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <HeadInputPembayaran onSubmit={(data) => this.simpanPembayaran(data)} />\r\n        <hr />\r\n        <form\r\n          onSubmit={this.props.handleSubmit}\r\n          onKeyPress={(e) => {\r\n            e.key === \"Enter\" && e.preventDefault();\r\n          }}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Tabel\r\n            // handleClick={() => this.simpanpembbayaran()}\r\n            keyField=\"jenis\"\r\n            // tambahData={true}\r\n            // btnText=\"Tambah Pembyaran\"\r\n            exportCsv={false}\r\n            data={getItem(\"trx_pemabayaran_services\") || []}\r\n            columns={this.state.columns}\r\n            empty={true}\r\n            pagination=\"off\"\r\n            textEmpty=\"Data Pembayaran Kosong\"\r\n          />\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n            \r\n            </div>\r\n            <div className=\"col-6 text-right\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                disabled={this.props.isLoading}\r\n                onClick={() => this.props.bayarSekarang()}\r\n                type=\"button\"\r\n              >\r\n                {this.props.isLoading ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Diproses\r\n                  </>\r\n                ) : (\r\n                  \"Bayar Sekarang\"\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          {this.props.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null}\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nModalPembayaran = reduxForm({\r\n  form: \"ModalPembayaran\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiPembayaran,\r\n})(ModalPembayaran);\r\n\r\nexport default connect(maptostate)(ModalPembayaran);\r\n","const ValidasiTransaksiService = (value) => {\r\n    const errors = {};\r\n    if (!value.nama_barang) {\r\n        errors.nama_barang = \"Nama Barang Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.berat) {\r\n        errors.berat = \"Berat Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.ongkos) {\r\n        errors.ongkos = \"Ongkos Tidak Boleh Kosong\";\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\nexport default ValidasiTransaksiService;\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\r\nimport { createNumberMask } from \"redux-form-input-masks\";\r\nimport { getDataSales } from \"../../../actions/datamaster_action\";\r\nimport { ReanderField } from \"../../../components/helpers/field\";\r\nimport { ToastNotification } from \"../../../components/helpers/notification\";\r\nimport { getData } from \"../../../config/axios\";\r\nimport { Gramasi } from \"../../../Validasi/normalize\";\r\nimport ValidasiTransaksiService from \"../../../Validasi/Services/ValidasiTransaksiService\";\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  locale: \"kr-KO\",\r\n});\r\n\r\nclass ModalTambahBarang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      harga_jual: true,\r\n      berat_jual: true,\r\n      hargapergram: true,\r\n      ongkos: true,\r\n      total: true,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getDataSales());\r\n    setTimeout(() => {\r\n      document.getElementById('nama_barang').focus()\r\n    }, 100);\r\n  }\r\n  getBarcode(e) {\r\n    let cek =\r\n      JSON.parse(localStorage.getItem(\"data_barang_penjualan_tmp\")) || [];\r\n    let hasil_cek = cek.findIndex((hasil) => hasil.kode_barcode === e);\r\n    if (hasil_cek === -1) {\r\n      getData(\"barang/get/by-kode-barcode/\" + e)\r\n        .then((res) => {\r\n          if (res.data.length === 0) {\r\n            ToastNotification(\"info\", \"Data Yang Dicari Tidak Ada\");\r\n            this.props.change(\"nama_barang\", \"\");\r\n            this.props.change(\"nama_atribut\", \"\");\r\n            this.props.change(\"berat_atribut\", \"\");\r\n            this.props.change(\"harga_atribut\", \"\");\r\n            this.props.change(\"berat\", \"\");\r\n          } else {\r\n            res.data.forEach((list, index) => {\r\n              this.props.change(\"nama_barang\", list.nama_barang);\r\n              this.props.change(\"nama_atribut\", list.nama_atribut);\r\n              this.props.change(\"berat_atribut\", list.berat_atribut);\r\n              this.props.change(\"harga_atribut\", list.harga_atribut);\r\n              this.props.change(\"berat\", list.berat);\r\n              this.setState({\r\n                harga_jual: false,\r\n                berat_jual: false,\r\n                hargapergram: false,\r\n                ongkos: false,\r\n              });\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          ToastNotification(\"info\", \"Data Yang Dicari Tidak Ada\");\r\n        });\r\n    } else {\r\n      ToastNotification(\"info\", \"Barang Sudah Ada Di Tabel\");\r\n    }\r\n  }\r\n  hitungTotal() {\r\n    this.props.change(\"total\", this.props.total);\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n        autoComplete=\"off\"\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-md-6\">\r\n            <Field\r\n              tabIndex=\"1\"\r\n              id=\"nama_barang\"\r\n              name=\"nama_barang\"\r\n              label=\"Nama Barang\"\r\n              type=\"text\"\r\n              placeholder=\"Masukan Nama Barang\"\r\n              component={ReanderField}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-6\">\r\n            <Field\r\n              tabIndex=\"2\"\r\n              name=\"berat\"\r\n              label=\"Berat Barang\"\r\n              onChange={this.hitungTotal()}\r\n              type=\"text\"\r\n              normalize={Gramasi}\r\n              placeholder=\"Masukan Berat Barang\"\r\n              component={ReanderField}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-md-6\">\r\n            <Field\r\n              tabIndex=\"3\"\r\n              name=\"jumlah\"\r\n              label=\"Jumlah\"\r\n              type=\"number\"\r\n              readOnly={true}\r\n              defaultValue=\"1\"\r\n              onChange={this.hitungTotal()}\r\n              placeholder=\"Masukan Jumlah\"\r\n              component={ReanderField}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-6\">\r\n            <Field\r\n              tabIndex=\"4\"\r\n              name=\"ongkos\"\r\n              label=\"Ongkos\"\r\n              type=\"telp\"\r\n              {...currencyMask}\r\n              placeholder=\"Masukan Ongkos\"\r\n              component={ReanderField}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-md-12\">\r\n            <Field\r\n              name=\"total\"\r\n              label=\"Total\"\r\n              type=\"telp\"\r\n              readOnly={true}\r\n              placeholder=\"Masukan Total\"\r\n              component={ReanderField}\r\n              {...currencyMask}\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"col-12 col-md-12\">\r\n            <Field\r\n              tabIndex=\"5\"\r\n              name=\"deskripsi\"\r\n              label=\"Deskripsi\"\r\n              type=\"textarea\"\r\n              placeholder=\"Masukan Deskripsi\"\r\n              component={ReanderField}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-6\"></div>\r\n          <div className=\"col-6\">\r\n            <button\r\n              tabIndex=\"6\"\r\n              className=\"btn btn-primary btn-block\"\r\n              disabled={this.props.submitting}\r\n              type=\"submit\"\r\n            >\r\n              {this.props.isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Menyimpan\r\n                </>\r\n              ) : (\r\n                \"Simpan Data\"\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n// ModalTambahBarang = reduxForm({\r\n//   form: \"ModalTambahBarang\",\r\n//   enableReinitialize: true,\r\n//   validate: ValidasiMasterDataHadiah,\r\n// })(ModalTambahBarang);\r\n// export default connect(maptostate, null)(ModalTambahBarang);\r\n\r\nModalTambahBarang = reduxForm({\r\n  form: \"ModalTambahBarang\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiTransaksiService,\r\n})(ModalTambahBarang);\r\n\r\nexport default connect((state) => {\r\n  const selector = formValueSelector(\"ModalTambahBarang\"); // <-- same as form name\r\n  const { ongkos, jumlah } = selector(\r\n    state,\r\n    \"ongkos\",\r\n    \"jumlah\"\r\n  );\r\n  return {\r\n    initialValues : {\r\n      jumlah : '1'\r\n    },\r\n    total: parseFloat(ongkos || 0) * parseFloat(jumlah || 0) || 0,\r\n    DataSales: state.datamaster.getDataSales,\r\n  };\r\n})(ModalTambahBarang);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { reduxForm, reset } from \"redux-form\";\r\nimport {\r\n  getDataSales,\r\n  hideModal,\r\n  showModal,\r\n} from \"../../../actions/datamaster_action\";\r\nimport { setTransaksiServices } from \"../../../actions/services_action\";\r\nimport { getItem } from \"../../../components/helpers/function\";\r\nimport ModalGlobal from \"../../../components/helpers/ModalGlobal\";\r\nimport { ToastNotification } from \"../../../components/helpers/notification\";\r\nimport Tabel from \"../../../components/helpers/tabel\";\r\nimport { Panel } from \"../../../components/panel/panel\";\r\nimport { getData, postData } from \"../../../config/axios\";\r\nimport ValidasiDataUsers from \"../../../Validasi/ManageUsers/ValidasiDataUsers\";\r\n// import { NumberOnly } from \"../../../Validasi/normalize\";\r\nimport ModalDataCustomer from \"./ModalDataCustomer\";\r\nimport ModalPembayaran from \"./ModalPembayaran\";\r\nimport ModalTambahBarang from \"./ModalTambahBarang\";\r\nconst maptostate = (state) => {\r\n  return {\r\n    setTransaksiServices: state.services.setTransaksiServices,\r\n    DataSales: state.datamaster.getDataSales,\r\n    hideModal: state.datamaster.modalDialog,\r\n  };\r\n};\r\n\r\nclass HeadServices extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isLoadingBatal: false,\r\n      isLoadingDataCustomer: false,\r\n      FormModal: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getDataSales());\r\n  }\r\n  getBarcode(e) {\r\n    getData(\"barang/get/by-kode-barcode/\" + e)\r\n      .then((res) => {\r\n        if (res.data.length === 0) {\r\n          ToastNotification(\"info\", \"Data Yang Dicari Tidak Ada\");\r\n          this.props.change(\"nama_barang\", \"\");\r\n          this.props.change(\"nama_atribut\", \"\");\r\n          this.props.change(\"berat_atribut\", \"\");\r\n          this.props.change(\"harga_atribut\", \"\");\r\n        } else {\r\n          // console.log(res.data);\r\n          res.data.forEach((list, index) => {\r\n            this.props.change(\"nama_barang\", list.nama_barang);\r\n            this.props.change(\"nama_atribut\", list.nama_atribut);\r\n            this.props.change(\"berat_atribut\", list.berat_atribut);\r\n            this.props.change(\"harga_atribut\", list.harga_atribut);\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        ToastNotification(\"info\", \"Data Yang Dicari Tidak Ada\");\r\n      });\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    let hasil = {\r\n      alamat_customer: data.alamat_customer || \"-\",\r\n      jenis_pelanggan: data.jenis_pelanggan || \"NONMEMBER\",\r\n      kode_customer: data.jenis_pelanggan === \"NONMEMBER\" ? \"NONMEMBER\" : data.kode_customer,\r\n      kode_sales: data.kode_sales,\r\n      nama_customer: data.nama_customer || \"REGULER\",\r\n      no_hp: data.no_hp || \"-\"\r\n    }\r\n    this.setState({\r\n      isLoadingDataCustomer: true,\r\n    });\r\n    localStorage.setItem(\"data_customer_services_tmp\", JSON.stringify(hasil));\r\n    setTimeout(() => {\r\n      this.setState({\r\n        isLoadingDataCustomer: false,\r\n      });\r\n      this.props.dispatch(hideModal());\r\n    }, 500);\r\n  }\r\n  simpanBarang(data) {\r\n    data = {\r\n      nama_barang: data.nama_barang.toUpperCase() || \"-\",\r\n      berat: parseFloat(data.berat) || 0,\r\n      jumlah: parseFloat(data.jumlah) || 0,\r\n      ongkos: parseInt(data.ongkos) || 0,\r\n      total: parseInt(data.total) || 0,\r\n      deskripsi: data.deskripsi === undefined ? data.nama_barang.toUpperCase() : data.deskripsi.toUpperCase() || \"-\",\r\n    };\r\n    let cek = JSON.parse(localStorage.getItem(\"data_barang_services\")) || [];\r\n    this.props.dispatch(reset(\"ModalTambahBarang\"));\r\n    document.getElementById(\"nama_barang\").focus();\r\n    cek.push(data);\r\n    localStorage.setItem(\"data_barang_services\", JSON.stringify(cek));\r\n    this.props.dispatch(setTransaksiServices(cek));\r\n    this.props.dispatch(hideModal());\r\n    ToastNotification(\"success\", \"Barang Berhasil Ditambahkan\");\r\n    this.props.change(\"nama_barang\", \"\");\r\n  }\r\n\r\n  bayarSekarang(data) {\r\n    if(getItem(\"trx_pemabayaran_services\").length <= 0){\r\n      ToastNotification(\"info\", \"Mohon Tambahkan metode pembayaran minimal 1..\");\r\n      return false\r\n    }\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    // let data_pembayaran = {\r\n    //   jenis: data.jenis,\r\n    //   jumlah_rp: parseInt(data.cash) > parseInt(data.grand_total_pembayaran) ? Math.abs(parseInt(data.cash) - parseInt(NumberOnly(data.kembali))) : parseInt(data.cash),\r\n    // };\r\n\r\n    let pembayaran = getItem(\"trx_pemabayaran_services\");\r\n    \r\n\r\n    let data_pembayaran = [];\r\n    let total_pembayarn = 0;\r\n    let jumlah_rp = 0;\r\n    pembayaran.forEach((element) => {\r\n      if (element.jenis === \"CASH\") {\r\n        if (parseInt(element.nominal) <= Math.abs(parseInt(getItem(\"sisa_bayar_services\").sisa_bayar))) {\r\n          jumlah_rp = Math.abs(parseInt(getItem(\"sisa_bayar_services\").sisa_bayar) - parseInt(element.nominal));\r\n        } else {\r\n          jumlah_rp = parseInt(element.nominal);\r\n        }\r\n        if (parseInt(element.nominal) >= Math.abs(parseInt(getItem(\"sisa_bayar_services\").total_transaksi))) {\r\n          jumlah_rp = parseInt(element.nominal) - Math.abs(parseInt(getItem(\"sisa_bayar_services\").sisa_bayar));\r\n        } else {\r\n          jumlah_rp = parseInt(element.nominal);\r\n        }\r\n      } else {\r\n        jumlah_rp = parseInt(element.nominal);\r\n      }\r\n      let row = {\r\n        jenis: element.jenis,\r\n        keterangan: element.keterangan,\r\n        fee: element.jenis === \"CREDIT\" ? parseInt(element.fee) || 0 : 0,\r\n        jumlah_rp : jumlah_rp\r\n        // jumlah_rp: parseInt(element.nominal) >= parseInt(getItem('sisa_bayar_services').total_transaksi) && element.jenis ===\"CASH\" ? parseInt(element.nominal) - parseInt(getItem('sisa_bayar_services').sisa_bayar) : parseInt(element.nominal) > parseInt(getItem('sisa_bayar_services').sisa_bayar) && element.jenis ===\"CASH\" ? parseInt(element.nominal) - parseInt(getItem('sisa_bayar_services').sisa_bayar) : parseInt(element.nominal),\r\n        // jumlah_rp: element.jenis === \"CASH\" ? parseInt(element.nominal) - parseInt(getItem('sisa_bayar_services').sisa_bayar) : parseInt(element.nominal),\r\n        // jumlah_rp: element.nominal >= parseInt(getItem('sisa_bayar_services').total_transaksi) ? parseInt(element.nominal) - parseInt(getItem('sisa_bayar_services').sisa_bayar) : parseInt(element.nominal),\r\n        \r\n      };\r\n      // console.log(parseInt(element.nominal));\r\n      // console.log(parseInt(getItem('sisa_bayar_services').total_transaksi));\r\n      total_pembayarn = element.nominal + total_pembayarn;\r\n      data_pembayaran.push(row);\r\n    });\r\n     \r\n  \r\n    let data_customer = JSON.parse(\r\n      localStorage.getItem(\"data_customer_services_tmp\")\r\n    );\r\n    let data_barang_penjualan = JSON.parse(\r\n      localStorage.getItem(\"data_barang_services\")\r\n    );\r\n\r\n    let detail_barang = [];\r\n    data_barang_penjualan.forEach((item, index) => {\r\n      let row = {\r\n        nama_barang: item.nama_barang,\r\n        berat: item.berat,\r\n        jumlah: item.jumlah,\r\n        ongkos: item.ongkos,\r\n        total_rp: item.total_rp,\r\n        deskripsi: item.deskripsi,\r\n      };\r\n      detail_barang.push(row);\r\n    });\r\n    let data_services = {\r\n      kode_sales: data_customer.kode_sales,\r\n      nama_customer: data_customer.nama_customer,\r\n      kode_member:\r\n        data_customer.jenis_pelanggan === \"NONMEMBER\"\r\n          ? data_customer.jenis_pelanggan\r\n          : data_customer.kode_customer,\r\n      alamat_customer: data_customer.alamat_customer,\r\n      no_hp: data_customer.no_hp,\r\n      total: parseInt(getItem('sisa_bayar_services').total_transaksi),\r\n      dp_rp: parseInt(total_pembayarn) < parseInt(getItem('sisa_bayar_services').total_transaksi) ? parseInt(total_pembayarn) : parseInt(total_pembayarn) >= parseInt(getItem('sisa_bayar_services').total_transaksi) ? parseInt(getItem('sisa_bayar_services').total_transaksi) : 0,\r\n      // dp_rp: parseInt(data.cash) > parseInt(data.grand_total_pembayaran) ? Math.abs(parseInt(data.cash) - parseInt(NumberOnly(data.kembali))) : parseInt(data.cash),\r\n      detail_barang: detail_barang,\r\n      pembayaran: data_pembayaran,\r\n    };\r\n    // return false\r\n    postData(\"service/simpan\", data_services)\r\n      .then((res) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        ToastNotification(\"success\", \"Transksi Service Berhasil\");\r\nlet notaservices = [];\r\nfor (let index = 0; index < 2; index++) {\r\nlet feedback = \"\";\r\nres.data.forEach((row, index) => {\r\nlet jml_alamat = row.n_alamat_customer.length;\r\nfeedback += `========================================\\n`;\r\nfeedback += `             NOTA SERVICE               \\n`;\r\nfeedback += `========================================\r\nTanggal          : ${row.tgl_system}\r\nKode Sales       : ${row.kode_sales}\r\nNama Customer    : ${row.nama_customer}\r\nNo Hp            : ${row.no_hp}\r\nAlamat Customer  : ${row.n_alamat_customer.slice(0, 20)}\r\nTotal Service    : ${row.total_service.toLocaleString(\"kr-KO\")}\r\n`;\r\nif (jml_alamat > 20) {\r\nfeedback += `      ${row.n_alamat_customer.slice(20,40)}\r\n`;\r\n}\r\nif (jml_alamat > 40) {\r\nfeedback += `      ${row.n_alamat_customer.slice(40,60)}\r\n`;\r\n}\r\nfeedback += `========================================\\n`;\r\nfeedback += `Keterangan\\n`;\r\nfeedback += `========================================\\n`;\r\nlet ongkos = 0;\r\nlet harga_nota = 0;\r\nrow.detail_barang.forEach((detail, index) => {\r\nongkos = ongkos + detail.ongkos;\r\nlet jml_des = detail.deskripsi.length;\r\nharga_nota = harga_nota + detail.harga_nota;\r\nfeedback += `Nama Barang      : ${detail.nama_barang}\\n`;\r\nfeedback += `Berat            : ${detail.berat.toFixed(3)}\\n`;\r\nfeedback += `Jumlah           : ${detail.jumlah.toLocaleString(\"kr-KO\")}\\n`;\r\nfeedback += `Ongkos           : ${detail.ongkos.toLocaleString(\"kr-KO\")}\\n`;\r\nfeedback += `deskripsi        : ${detail.deskripsi.slice(0,20)}\\n`;\r\nif (jml_des > 20) {\r\nfeedback += `                   ${row.deskripsi.slice(20, 40)}`;\r\n}\r\nif (jml_des > 40) {\r\nfeedback += `                   ${row.deskripsi.slice(40, 60)}`;\r\n}\r\nfeedback += `========================================\\n`;\r\n});\r\nfeedback += `Total Ongkos     : ${ongkos.toLocaleString(\"kr-KO\")}\\n`;\r\nfeedback += `========================================\\n`;\r\nfeedback += `                               TTD      \\n`\r\nfeedback += `                                        \\n`\r\nfeedback += `                                        \\n`\r\nfeedback += `                                        \\n`\r\nfeedback += `                         (             )\\n`\r\nfeedback += `                                        \\n`\r\nfeedback += `                                        \\n`\r\nfeedback += `                                        \\n`\r\n  \r\n}\r\n);\r\nnotaservices.push(feedback);\r\n}\r\n\r\ndocument.getElementById(\"myInput\").value = notaservices.join(\"\");\r\n}).then(() => {\r\n  const element = document.createElement(\"a\");\r\n  const file = new Blob([document.getElementById(\"myInput\").value], {\r\n    type: \"text/plain;charset=utf-8\",\r\n  });\r\n  element.href = URL.createObjectURL(file);\r\n  element.download = \"autoprint_service.txt\";\r\n  document.body.appendChild(element);\r\n  element.click();\r\n}).then(() => {\r\n        this.props.dispatch(hideModal());\r\n      })\r\n      .then(() => {\r\n        this.props.dispatch(reset(\"ModalPembayaran\"));\r\n      })\r\n      .then(() => {\r\n        localStorage.setItem(\"data_customer_services_tmp\", JSON.stringify([]));\r\n        localStorage.setItem(\"data_barang_services\", JSON.stringify([]));\r\n        localStorage.setItem(\"sisa_bayar_services\", JSON.stringify([]));\r\n        localStorage.setItem(\"trx_pemabayaran_services\", JSON.stringify([]));\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .then(() => {\r\n        this.props.dispatch(setTransaksiServices([]));\r\n      })\r\n      .catch((err) => this.errorhandling(err));\r\n    // localStorage.setItem(\"tmp_pembayaran_transaksi_penjualan\",JSON.stringify(hasil));\r\n  }\r\n\r\n  errorhandling(error) {\r\n    console.log(error);\r\n    this.setState({\r\n      isLoading: false,\r\n    });\r\n    ToastNotification(\"info\", \"Transaksi Gagal Disimpan\");\r\n  }\r\n  ShowModalBarang() {\r\n    this.props.dispatch(showModal());\r\n    this.setState({ FormModal: \"ShowModalBarang\" });\r\n  }\r\n  ShowModalCustomer() {\r\n    this.setState({ FormModal: \"ShowModalCustomer\" });\r\n    this.props.dispatch(showModal());\r\n  }\r\n  showModalPembayaran() {\r\n    // document.getElementById('jenis_pembayaran').focus();\r\n    let customer =\r\n      JSON.parse(localStorage.getItem(\"data_customer_services_tmp\")) || [];\r\n    let barang = JSON.parse(localStorage.getItem(\"data_barang_services\")) || [];\r\n    if (customer.length === 0 || barang.length === 0) {\r\n      ToastNotification(\r\n        \"info\",\r\n        \"Data Customer Atau Data Barang Belum Diisi !!!\"\r\n      );\r\n    } else {\r\n      this.setState({ FormModal: \"ShowModalPembayaran\" });\r\n      this.props.dispatch(showModal());\r\n    }\r\n  }\r\n  batalServices() {\r\n    this.setState({\r\n      isLoadingBatal: true,\r\n    });\r\n    setTimeout(() => {\r\n      localStorage.setItem(\"data_customer_services_tmp\", JSON.stringify([]));\r\n      this.props.dispatch(setTransaksiServices([]));\r\n      localStorage.setItem(\"data_barang_services\", JSON.stringify([]));\r\n      this.setState({\r\n        isLoadingBatal: false,\r\n      });\r\n    }, 500);\r\n  }\r\n  render() {\r\n    return (\r\n      <Panel>\r\n          <textarea\r\n            style={{ display: \"none\" }}\r\n            id=\"myInput\"\r\n            rows=\"100\"\r\n            cols=\"100\"\r\n          />\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <Tabel\r\n              keyField=\"nama_barang\"\r\n              exportCsv={false}\r\n              data={\r\n                this.props.setTransaksiServices.length === 0\r\n                  ? JSON.parse(localStorage.getItem(\"data_barang_services\")) ||\r\n                    []\r\n                  : this.props.setTransaksiServices || []\r\n              }\r\n              tambahData={true}\r\n              btnText=\"Tambah Data Customer\"\r\n              columns={this.props.columns}\r\n              btnOptional={true}\r\n              namaCustomer={true}\r\n              jenisCustomer={true}\r\n              form=\"Service\"\r\n              btnTextOptional=\"Tambah Data Barang\"\r\n              handleClick={() => this.ShowModalCustomer()}\r\n              handleClickOptional={() => this.ShowModalBarang()}\r\n              empty={true}\r\n              textEmpty=\"Data Barang Kosong\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <ModalGlobal\r\n          size={this.state.FormModal ===\"ShowModalCustomer\" ? \"xl\" : this.state.FormModal === \"ShowModalBarang\" ? \"L\" : \"P\"}\r\n          title={<TitleModal state={this.state.FormModal} />}\r\n          content={\r\n            this.state.FormModal === \"ShowModalCustomer\" ? (\r\n              <ModalDataCustomer\r\n                isLoadingDataCustomer={this.state.isLoadingDataCustomer}\r\n                onSubmit={(data) => this.handleSubmit(data)}\r\n              />\r\n            ) : this.state.FormModal === \"ShowModalBarang\" ? (\r\n              <ModalTambahBarang onSubmit={(data) => this.simpanBarang(data)} />\r\n            ) : (\r\n              <ModalPembayaran\r\n                isLoading={this.state.isLoading}\r\n                bayarSekarang={(data) => this.bayarSekarang(data)}\r\n\r\n              />\r\n            )\r\n          }\r\n        />\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <button\r\n              onClick={() => this.showModalPembayaran()}\r\n              className=\"btn btn-primary\"\r\n              disabled={this.props.isLoading}\r\n              type=\"submit\"\r\n            >\r\n              {this.props.isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Menyimpan\r\n                </>\r\n              ) : (\r\n                \"Simpan Data Services\"\r\n              )}\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              onClick={() => this.batalServices()}\r\n              className=\"btn btn-warning\"\r\n              disabled={this.state.isLoadingBatal}\r\n              type=\"button\"\r\n            >\r\n              {this.state.isLoadingBatal ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Reset\r\n                </>\r\n              ) : (\r\n                \"Reset\"\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Panel>\r\n    );\r\n  }\r\n}\r\n\r\nfunction TitleModal(data, onSubmit) {\r\n  // console.log(state.state);\r\n  if (data.state === \"ShowModalCustomer\") {\r\n    return \"Form Data Customer\";\r\n  } else if (data.state === \"ShowModalBarang\") {\r\n    return \"Form Data Barang\";\r\n  } else {\r\n    return \"Form Pembayaran\";\r\n  }\r\n}\r\n\r\nHeadServices = reduxForm({\r\n  form: \"HeadServices\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiDataUsers,\r\n})(HeadServices);\r\nexport default connect(maptostate, null)(HeadServices);\r\n\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { setTransaksiServices } from \"../../../actions/services_action.jsx\";\r\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\r\nimport HeadServices from \"./HeadServices.jsx\";\r\nconst maptostate = (state) => {\r\n    return {\r\n      dataservices: state.services.setTransaksiServices,\r\n    };\r\n  };\r\nclass FormTransaksiServces extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      columns: [\r\n        {\r\n          dataField: \"nama_barang\",\r\n          text: \"Nama Barang\",\r\n        footer: \"Total\"\r\n        },\r\n\r\n        {\r\n          dataField: \"berat\",\r\n          text: \"Berat\",\r\n          footer: (columnData) =>\r\n            columnData.reduce((acc, item) => acc + item, 0).toFixed(1),\r\n        },\r\n        {\r\n          dataField: \"jumlah\",\r\n          text: \"Jumlah\",\r\n          formatter: (cell) => {\r\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\r\n          },\r\n          footer: (columnData) =>\r\n            parseInt(\r\n              columnData.reduce((acc, item) => acc + item, 0)\r\n            ).toLocaleString(\"kr-KO\"),\r\n        },\r\n        {\r\n          dataField: \"ongkos\",\r\n          text: \"Ongkos\",\r\n          formatter: (cell) => {\r\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\r\n          },\r\n          footer: (columnData) =>\r\n            parseInt(\r\n              columnData.reduce((acc, item) => acc + item, 0)\r\n            ).toLocaleString(\"kr-KO\"),\r\n        },\r\n        {\r\n          dataField: \"total\",\r\n          text: \"Total Rp\",\r\n          formatter: (cell) => {\r\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\r\n          },\r\n          footer: (columnData) =>\r\n            parseInt(\r\n              columnData.reduce((acc, item) => acc + item, 0)\r\n            ).toLocaleString(\"kr-KO\"),\r\n        },\r\n        {\r\n          dataField: \"deskripsi\",\r\n          text: \"Deskripsi\",\r\n          footer: \"\",\r\n        },\r\n        {\r\n          dataField: \"action\",\r\n          text: \"Action\",\r\n          csvExport: false,\r\n          headerClasses: \"text-center\",\r\n          formatter: (rowcontent, row, index) => {\r\n             \r\n            return (\r\n              <div className=\"row text-center\">\r\n                <div className=\"col-12\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => this.hapusdata(index)}\r\n                    className=\"btn btn-danger mr-3\"\r\n                  >\r\n                    <i className=\"fa fa-trash\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n          footer: \"\",\r\n        },\r\n      ],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n\r\n  hapusdata(id) {\r\n    Swal.fire({\r\n      title: \"Anda Yakin !!\",\r\n      text: \"Ingin Menghapus Data Ini ?\",\r\n      icon: \"warning\",\r\n      position: \"top-center\",\r\n      cancelButtonText: \"Tidak\",\r\n      showCancelButton: true,\r\n      confirmButtonText: \"OK\",\r\n      showConfirmButton: true,\r\n    }).then((result) => {\r\n      // console.log(id);\r\n      if (result.isConfirmed) {\r\n        let data = JSON.parse(\r\n          localStorage.getItem(\"data_barang_services\")\r\n        );\r\n        data.splice(id, 1);\r\n        localStorage.setItem(\"data_barang_services\", JSON.stringify(data));\r\n        this.props.dispatch(setTransaksiServices(data));\r\n        // deleteLocalItemBarcode(\"data_barang_hancur_tmp\", id);\r\n        // this.props.dispatch(getListReturnSupplier());\r\n        this.setState({\r\n          berhasil : true,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    localStorage.setItem(\"data_customer_services_tmp\", JSON.stringify([]));\r\n    localStorage.setItem(\"data_barang_services\", JSON.stringify([]));\r\n  }\r\n\r\n  handleSubmit(data) {}\r\n\r\n    render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Services</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Transaksi Services</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Transaksi Services </h1>\r\n        <Panel>\r\n          <PanelHeader>Transaksi Services</PanelHeader>\r\n          <br />\r\n          {/* Transaksi Services */}\r\n          <div className=\"container\">\r\n            <HeadServices\r\n              isLoading={this.state.isLoading}\r\n              columns={this.state.columns}\r\n            />\r\n          </div>\r\n          <br />\r\n          {/* End Tambah Transaksi Services  */}\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate,null)(FormTransaksiServces);","const ValidasiPembayaran = (value) => {\r\n    const errors = {};\r\n    if (!value.jenis) {\r\n        errors.jenis = \"Jenis Tidak Boleh Kosong\";\r\n    }\r\n    // if (!value.cash) {\r\n    //     errors.cash = \"Nominal Tidak Boleh Kosong\";\r\n    // }\r\n\r\n    return errors;\r\n}\r\n\r\nexport default ValidasiPembayaran;\r\n\r\n\r\n","const ValidasiDataUsers = (value) => {\r\n    const errors = {};\r\n    if (!value.user_id) {\r\n        errors.user_id = \"User Id Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.user_name) {\r\n        errors.user_name = \"Username Tidak Boleh Kosong\";\r\n    }\r\n\r\n    if (!value.level) {\r\n        errors.level = \"Level Harus Dipilih \";\r\n    }\r\n    // if (!value.password) {\r\n    //     errors.password = \"Hassword Harus Diisi \";\r\n    // }\r\n    // if (!value.retype_password) {\r\n    //     errors.retype_password = \"Retype Password Harus Diisi \";\r\n    // }\r\n\r\n    return errors;\r\n}\r\n\r\nexport default ValidasiDataUsers;\r\n\r\n\r\n","const ValidasiFormDataMemberPenjualan = (value) => {\r\n    const errors = {};\r\n    if (!value.kode_sales) {\r\n        errors.kode_sales = \"Kode Sales Harus Dipilih\";\r\n    }\r\n    if (!value.nama_customer) {\r\n        errors.nama_customer = \"Nama Customer Harus Diisi\";\r\n    }\r\n    if (!value.no_hp) {\r\n        errors.no_hp = \"No Hp Harus Diisi\";\r\n    }\r\n    if (!value.alamat) {\r\n        errors.alamat = \"Alamat Harus Diisi\";\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\nexport default ValidasiFormDataMemberPenjualan;\r\n\r\n\r\n"],"sourceRoot":""}