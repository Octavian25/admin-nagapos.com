{"version":3,"sources":["pages/ManageUsers/DataUsers/FormDataUser.jsx","pages/ManageUsers/DataUsers/DataUsers.jsx","Validasi/ManageUsers/ValidasiDataUsers.jsx"],"names":["options","value","name","FormTambahUser","Component","[object Object]","args","super","this","state","componentDidMount","setTimeout","props","isEdit","document","getElementById","focus","render","react_default","a","createElement","onSubmit","handleSubmit","autoComplete","onKeyPress","e","key","preventDefault","Field","id","label","nouperCase","readOnly","placeholder","component","ReanderField","type","className","level","ReanderSelect","Fragment","disabled","submitting","isLoading","onClick","dispatch","hideModal","loading_default","loading","background","loaderColor","reduxForm","form","enableReinitialize","validate","ValidasiDataUsers","connect","manageusers","ShowModalTambahUser","initialValues","user_id","usere_name","SearchBar","Search","ExportCSVButton","CSVExport","hapusDataUser","params","Swal","fire","html","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","then","result","isConfirmed","deleteData","data","NotifSucces","getDataUser","DataUsers","datamaster","modalDialog","React","constructor","columns","dataField","text","sort","csvExport","headerClasses","formatter","rowcontent","row","dataEdit","formEditBaki","bind","setState","undefined","NotifInfo","data_edit","user_name","data_post","password","retype_password","putData","reset","catch","error","NotifError","response","test","postData","showModal","react_router_dom","to","panel","react_bootstrap_table2_toolkit_lib_default","keyField","search","exportCSV","fileName","searchProps","lib_default","Object","assign","pagination","paginationFactory","baseProps","csvProps","ModalGlobal","title","size","content","FormDataUser","errors"],"mappings":"4TAQA,MAAMA,EAAU,CACd,CAAEC,MAAO,QAASC,KAAM,SACxB,CAAED,MAAO,MAAOC,KAAM,SACtB,CAAED,MAAO,QAASC,KAAM,SACxB,CAAED,MAAO,MAAOC,KAAM,eAexB,MAAMC,UAAuBC,YAAUC,eAAAC,GAAAC,SAAAD,GAAAE,KACrCC,MAAQ,GACRC,oBACEC,WAAW,KACTH,KAAKI,MAAMC,OACPC,SAASC,eAAe,cAAcC,QACtCF,SAASC,eAAe,WAAWC,SACtC,KAELC,SACE,OACEC,EAAAC,EAAAC,cAAA,QACEC,SAAUb,KAAKI,MAAMU,aACrBC,aAAa,MACbC,WAAaC,IACD,UAAVA,EAAEC,KAAmBD,EAAEE,mBAGzBT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEC,GAAG,UACHC,MAAM,UACN5B,KAAK,UACL6B,YAAU,EACVC,SAAUxB,KAAKI,MAAMC,OACrBoB,YAAa,2BACbC,UAAWC,MAEbjB,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEC,GAAG,aACH3B,KAAK,aACLgC,UAAWC,IACXC,KAAK,OACLL,YAAU,EACVD,MAAM,WACNG,YAAY,qBAEdf,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,cACbnB,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEE,MAAM,QACN5B,KAAK,QACLF,QAASA,EACTC,MAAOO,KAAKI,MAAM0B,MAElBL,YAAa,uBACbC,UAAWK,OAGb/B,KAAKI,MAAMC,OAWT,KAVFK,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqB,SAAA,KACEtB,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACE1B,KAAK,WACLgC,UAAWC,IACXC,KAAK,WACLN,MAAM,WACNC,YAAU,EACVE,YAAY,uBAIlBf,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,OACbnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,qBACbnB,EAAAC,EAAAC,cAAA,UACEiB,UAAU,kBACVI,SAAUjC,KAAKI,MAAM8B,WACrBN,KAAK,UAEJ5B,KAAKI,MAAM+B,UACVzB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqB,SAAA,KACEtB,EAAAC,EAAAC,cAAA,KAAGiB,UAAU,2BADf,0BAKA,eAZN,OAgBEnB,EAAAC,EAAAC,cAAA,UACEiB,UAAU,gBACVO,QAAS,IAAMpC,KAAKI,MAAMiC,SAASC,gBACnCV,KAAK,SACLK,SAAUjC,KAAKI,MAAM+B,WAJvB,WAUHnC,KAAKI,MAAM+B,UACZzB,EAAAC,EAAAC,cAAC2B,EAAA5B,EAAD,CACA6B,SAAO,EACPC,WAAW,sBACVC,YAAY,0BACX,OAMV/C,EAAiBgD,YAAU,CACzBC,KAAM,mBACNC,oBAAoB,EACpBC,SAAUC,KAHKJ,CAIdhD,GACYqD,kBAnHK/C,IAClB,GAA8C,OAA1CA,EAAMgD,YAAYC,oBACpB,MAAO,CACLC,cAAe,CACbC,QAASnD,EAAMgD,YAAYC,oBAAoBE,QAC/CC,WAAYpD,EAAMgD,YAAYC,oBAAoBG,WAClDvB,MAAO7B,EAAMgD,YAAYC,oBAAoBpB,SA6GlB,KAApBkB,CAA0BrD,SCvGjC2D,EAAcC,SAAdD,UACAE,EAAoBC,YAApBD,gBASFE,EAAgB,CAACC,EAAQtB,KAC7BuB,IAAKC,KAAK,CAGRC,KACE,oDAGAH,EACA,cACFI,KAAM,UACNC,SAAU,aACVC,iBAAkB,QAClBC,kBAAkB,EAClBC,kBAAmB,KACnBC,mBAAmB,IAClBC,KAAMC,IACHA,EAAOC,aACTC,YAAW,mBAAqBb,EAAQ,CACtCc,KAAM,CACJrB,QAASO,KAEVU,KAAK,KACNK,YAAY,0BAA0BL,KAAK,IACzChC,EAASsC,qBA0OJ3B,sBAzQK/C,IACX,CACL2E,UAAW3E,EAAMgD,YAAY0B,YAC7BrC,UAAWrC,EAAM4E,WAAWC,cAsQG,KAApB9B,CApOf,cAAwB+B,IAAMnF,UAC5BoF,YAAY5E,GACVL,MAAMK,GACNJ,KAAKC,MAAQ,CACXI,QAAQ,EACRyE,aAAa,EACb3C,WAAW,EACX8C,QAAS,CACP,CACEC,UAAW,UACXC,KAAM,WACNC,MAAM,GAER,CACEF,UAAW,aACXC,KAAM,aAER,CACED,UAAW,QACXC,KAAM,SAER,CACED,UAAW,SACXC,KAAM,SACNE,WAAW,EACXC,cAAe,cACfC,UAAW,CAACC,EAAYC,KACtB,IAAIC,EAAW,CACbtC,QAASqC,EAAIrC,QACbC,WAAYoC,EAAIpC,WAChBvB,MAAO2D,EAAI3D,OAGb,OACEpB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,mBACbnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,UACbnB,EAAAC,EAAAC,cAAA,UACEwB,QAAS,IAAMpC,KAAK2F,aAAaD,GACjC7D,UAAU,wBAEVnB,EAAAC,EAAAC,cAAA,KAAGiB,UAAU,gBAEfnB,EAAAC,EAAAC,cAAA,UACEwB,QAAS,IACPsB,EAAc+B,EAAIrC,QAASpD,KAAKI,MAAMiC,UAExCR,UAAU,kBAEVnB,EAAAC,EAAAC,cAAA,KAAGiB,UAAU,uBAgB7B7B,KAAKc,aAAed,KAAKc,aAAa8E,KAAK5F,MAE7CE,oBACEF,KAAKI,MAAMiC,SAASsC,eAEtB7D,aAAa2D,GAEX,GADAzE,KAAK6F,SAAS,CAAE1D,WAAW,SACR2D,IAAfrB,EAAK3C,MAEP,OADAiE,YAAU,0BACH,EAET,GAAmB,IAAftB,EAAK3C,MAEP,OADAiE,YAAU,0BACH,EAET,IAAIC,EAAY,CACdC,UAAWxB,EAAKpB,WAChBvB,MAAO2C,EAAK3C,OAIVoE,EAAY,CACd9C,QAASqB,EAAKrB,QACd6C,UAAWxB,EAAKpB,WAChBvB,MAAO2C,EAAK3C,MACZqE,SAAU1B,EAAK0B,SACfC,gBAAiB3B,EAAK0B,UAExBnG,KAAKC,MAAMI,OACPgG,YAAQ,mBAAqB5B,EAAKrB,QAAS4C,GACxC3B,KAAK,KACJrE,KAAKI,MAAMiC,SAASC,kBAGvB+B,KAAK,KACFK,YAAY,yBACZ1E,KAAKI,MAAMiC,SAASsC,iBAErBN,KAAK,KACJrE,KAAKI,MAAMiC,SAASiE,YAAM,uBAE3BjC,KAAK,KACJrE,KAAK6F,SAAS,CAAE1D,WAAW,MAE5BoE,MAAOC,IACNxG,KAAK6F,SAAS,CACZ1D,WAAW,IAEbsE,iBAA8BX,IAAnBU,EAAME,SAAyB,wCAA2C,UAAUC,KAAKH,EAAME,SAASjC,MAAQ,0BAA4B+B,EAAME,SAASjC,QAE1KmC,YAAS,iBAAkBV,GACxB7B,KAAK,KACJrE,KAAKI,MAAMiC,SAASC,kBAGvB+B,KAAK,KACJK,YAAY,2BACV1E,KAAKI,MAAMiC,SAASsC,iBAErBN,KAAK,KACJrE,KAAK6F,SAAS,CAAE1D,WAAW,MAE5BkC,KAAK,KACJrE,KAAKI,MAAMiC,SAASiE,YAAM,uBAE3BC,MAAOC,IACNxG,KAAK6F,SAAS,CACZ1D,WAAW,IAEbsE,iBAA8BX,IAAnBU,EAAME,SAAyB,wCAA2C,UAAUC,KAAKH,EAAME,SAASjC,MAAQ,0BAA4B+B,EAAME,SAASjC,QAIhLkB,aAAaD,GACX1F,KAAKI,MAAMiC,SAASwE,gBACpB7G,KAAKI,MAAMiC,SAASa,YAAoBwC,IACxC1F,KAAK6F,SAAS,CACZxF,QAAQ,IAGZ6C,sBACElD,KAAKI,MAAMiC,SAASwE,gBACpB7G,KAAKI,MAAMiC,SAASa,aAAoB,IACxClD,KAAK6F,SAAS,CACZxF,QAAQ,IAGZI,SACE,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIiB,UAAU,6BACZnB,EAAAC,EAAAC,cAAA,MAAIiB,UAAU,mBACZnB,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAMC,GAAG,KAAT,iBAEFrG,EAAAC,EAAAC,cAAA,MAAIiB,UAAU,0BAAd,eAEFnB,EAAAC,EAAAC,cAAA,MAAIiB,UAAU,eAAd,eACAnB,EAAAC,EAAAC,cAACoG,EAAA,EAAD,KACEtG,EAAAC,EAAAC,cAACoG,EAAA,EAAD,mBACAtG,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,aACbnB,EAAAC,EAAAC,cAACqG,EAAAtG,EAAD,CACEuG,SAAS,UACTzC,KAAMzE,KAAKI,MAAMwE,WAAa,GAC9BK,QAASjF,KAAKC,MAAMgF,QACpBkC,QAAM,EACNC,UAAW,CACTC,SAAU,0BAGVjH,GACAM,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,OACbnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,SACbnB,EAAAC,EAAAC,cAAA,UACEwB,QAAS,IAAMpC,KAAKkD,sBACpBrB,UAAU,mBAET,IACDnB,EAAAC,EAAAC,cAAA,KAAGiB,UAAU,eAAkB,MAGnCnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,SACbnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,cACbnB,EAAAC,EAAAC,cAAC0C,EAAclD,EAAMkH,eAGzB5G,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,UACbnB,EAAAC,EAAAC,cAAC2G,EAAA5G,EAAD6G,OAAAC,OAAA,CACEC,WAAYC,OACRvH,EAAMwH,YAEZlH,EAAAC,EAAAC,cAAA,YAEFF,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,SACbnB,EAAAC,EAAAC,cAAC4C,EAAoBpD,EAAMyH,SAA3B,oBAQVnH,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CACEC,MAAO/H,KAAKC,MAAMI,OAAS,kBAAoB,oBAC/C2H,KAAK,IACLC,QACEvH,EAAAC,EAAAC,cAACsH,EAAD,CACE/F,UAAWnC,KAAKC,MAAMkC,UACtB9B,OAAQL,KAAKC,MAAMI,OACnBQ,SAAW4D,GAASzE,KAAKc,aAAa2D,8CCpQvC1B,IAtBYtD,KACvB,MAAM0I,EAAS,GAkBf,OAjBK1I,EAAM2D,UACP+E,EAAO/E,QAAU,8BAEhB3D,EAAMwG,YACPkC,EAAOlC,UAAY,+BAGlBxG,EAAMqC,QACPqG,EAAOrG,MAAQ,wBASZqG","file":"static/js/27.bf54acce.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { hideModal } from \"../../../actions/datamaster_action\";\r\nimport { ReanderField, ReanderSelect } from \"../../../components/helpers/field\";\r\nimport ValidasiDataUsers from \"../../../Validasi/ManageUsers/ValidasiDataUsers\";\r\nimport Loading from 'react-fullscreen-loading';\r\n\r\nconst options = [\r\n  { value: \"ADMIN\", name: \"ADMIN\" },\r\n  { value: \"OWN\", name: \"OWNER\" },\r\n  { value: \"KASIR\", name: \"KASIR\" },\r\n  { value: \"SPV\", name: \"SUPERVISOR\" },\r\n];\r\nconst maptostate = (state) => {\r\n  if (state.manageusers.ShowModalTambahUser !== null) {\r\n    return {\r\n      initialValues: {\r\n        user_id: state.manageusers.ShowModalTambahUser.user_id,\r\n        usere_name: state.manageusers.ShowModalTambahUser.usere_name,\r\n        level: state.manageusers.ShowModalTambahUser.level,\r\n        // password: state.manageusers.ShowModalTambahUser.password,\r\n        // retype_password: state.manageusers.ShowModalTambahUser.retype_password,\r\n      },\r\n    };\r\n  }\r\n};\r\nclass FormTambahUser extends Component {\r\n  state = {};\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.props.isEdit\r\n        ? document.getElementById(\"usere_name\").focus()\r\n        : document.getElementById(\"user_id\").focus();\r\n    }, 100);\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        autoComplete=\"off\"\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n      >\r\n        <Field\r\n          id=\"user_id\"\r\n          label=\"User Id\"\r\n          name=\"user_id\"\r\n          nouperCase\r\n          readOnly={this.props.isEdit}\r\n          placeholder={\"Silahkan Masukan User Id\"}\r\n          component={ReanderField}\r\n        />\r\n        <Field\r\n          id=\"usere_name\"\r\n          name=\"usere_name\"\r\n          component={ReanderField}\r\n          type=\"text\"\r\n          nouperCase\r\n          label=\"Username\"\r\n          placeholder=\"Masukan Username\"\r\n        />\r\n        <div className=\"form-group\">\r\n          <Field\r\n            label=\"Level\"\r\n            name=\"level\"\r\n            options={options}\r\n            value={this.props.level}\r\n            // disabled={this.props.isEdit}\r\n            placeholder={\"Silahkan Pilih Level\"}\r\n            component={ReanderSelect}\r\n          />\r\n        </div>\r\n        {!this.props.isEdit ? (\r\n          <>\r\n            <Field\r\n              name=\"password\"\r\n              component={ReanderField}\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              nouperCase\r\n              placeholder=\"Masukan Passsword\"\r\n            />\r\n          </>\r\n        ) : null}\r\n        <div className=\"row\">\r\n          <div className=\"col-12 text-right\">\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              disabled={this.props.submitting}\r\n              type=\"submit\"\r\n            >\r\n              {this.props.isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Menyimpan\r\n                </>\r\n              ) : (\r\n                \"Simpan Data\"\r\n              )}\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              className=\"btn btn-white\"\r\n              onClick={() => this.props.dispatch(hideModal())}\r\n              type=\"button\"\r\n              disabled={this.props.isLoading}\r\n            >\r\n              Batal\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {this.props.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormTambahUser = reduxForm({\r\n  form: \"ModalTambahUsers\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiDataUsers,\r\n})(FormTambahUser);\r\nexport default connect(maptostate, null)(FormTambahUser);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider, {\r\n  Search,\r\n  CSVExport,\r\n} from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { hideModal, showModal } from \"../../../actions/datamaster_action.jsx\";\r\nimport {\r\n  getDataUser,\r\n  ShowModalTambahUser,\r\n} from \"../../../actions/mageuser_action.jsx\";\r\nimport { connect } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  NotifError,\r\n  NotifInfo,\r\n  NotifSucces,\r\n} from \"../../../components/helpers/notification.jsx\";\r\nimport { deleteData, postData, putData } from \"../../../config/axios.jsx\";\r\nimport { reset } from \"redux-form\";\r\nimport ModalGlobal from \"../../../components/helpers/ModalGlobal.jsx\";\r\nimport FormDataUser  from \"./FormDataUser.jsx\"\r\n\r\nconst { SearchBar } = Search;\r\nconst { ExportCSVButton } = CSVExport;\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    DataUsers: state.manageusers.getDataUser,\r\n    hideModal: state.datamaster.modalDialog,\r\n  };\r\n};\r\n\r\nconst hapusDataUser = (params, dispatch) => {\r\n  Swal.fire({\r\n    // title: \"Anda Yakin !!\",\r\n    // text: \"Ingin Menghapus Data Ini ?\",\r\n    html:\r\n      \"Apakah Anda Yakin Ingin \" +\r\n      \"Menghapus \" +\r\n      \"<h1><b>User Id \" +\r\n      params +\r\n      \"</b> ?</h1>\",\r\n    icon: \"warning\",\r\n    position: \"top-center\",\r\n    cancelButtonText: \"Tidak\",\r\n    showCancelButton: true,\r\n    confirmButtonText: \"OK\",\r\n    showConfirmButton: true,\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      deleteData(\"users/delete/id/\" + params, {\r\n        data: {\r\n          user_id: params,\r\n        },\r\n      }).then(() => {\r\n        NotifSucces(\"Data Berhasil Di Hapus\").then(() =>\r\n          dispatch(getDataUser())\r\n        );\r\n      });\r\n    }\r\n  });\r\n};\r\nclass DataUsers extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false,\r\n      modalDialog: false,\r\n      isLoading: false,\r\n      columns: [\r\n        {\r\n          dataField: \"user_id\",\r\n          text: \"User Id \",\r\n          sort: true,\r\n        },\r\n        {\r\n          dataField: \"usere_name\",\r\n          text: \"User Name\",\r\n        },\r\n        {\r\n          dataField: \"level\",\r\n          text: \"Level\",\r\n        },\r\n        {\r\n          dataField: \"action\",\r\n          text: \"Action\",\r\n          csvExport: false,\r\n          headerClasses: \"text-center\",\r\n          formatter: (rowcontent, row) => {\r\n            let dataEdit = {\r\n              user_id: row.user_id,\r\n              usere_name: row.usere_name,\r\n              level: row.level,\r\n            };\r\n             \r\n            return (\r\n              <div className=\"row text-center\">\r\n                <div className=\"col-12\">\r\n                  <button\r\n                    onClick={() => this.formEditBaki(dataEdit)}\r\n                    className=\"btn btn-primary mr-3\"\r\n                  >\r\n                    <i className=\"fa fa-edit\"></i>\r\n                  </button>\r\n                  <button\r\n                    onClick={() =>\r\n                      hapusDataUser(row.user_id, this.props.dispatch)\r\n                    }\r\n                    className=\"btn btn-danger\"\r\n                  >\r\n                    <i className=\"fa fa-trash\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      //   DataBaki: [\r\n      //     {\r\n      //       user_id: \"TK\",\r\n      //       usere_name: \"CCKL\",\r\n      //       level: \"KALUNG MUDA\",\r\n      //     },\r\n      //   ],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getDataUser());\r\n  }\r\n  handleSubmit(data) {\r\n    this.setState({ isLoading: true });\r\n    if (data.level === undefined) {\r\n      NotifInfo(\"Silahkan Pilih Status\");\r\n      return false;\r\n    }\r\n    if (data.level === 3) {\r\n      NotifInfo(\"Silahkan Pilih Status\");\r\n      return false;\r\n    }\r\n    let data_edit = {\r\n      user_name: data.usere_name,\r\n      level: data.level,\r\n      // password_lama: data.password_lama,\r\n      // password: data.password,\r\n    };\r\n    let data_post = {\r\n      user_id: data.user_id,\r\n      user_name: data.usere_name,\r\n      level: data.level,\r\n      password: data.password,\r\n      retype_password: data.password,\r\n    }\r\n    this.state.isEdit\r\n      ? putData(\"users/update/id/\" + data.user_id, data_edit)\r\n          .then(() => {\r\n            this.props.dispatch(hideModal());\r\n          })\r\n          // .then()\r\n        .then(() => {\r\n            NotifSucces(\"Data Berhasil Di Edit\")\r\n            this.props.dispatch(getDataUser());\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(reset(\"ModalTambahUsers\"));\r\n          })\r\n          .then(() => {\r\n            this.setState({ isLoading: false });\r\n          })\r\n          .catch((error) => {\r\n            this.setState({\r\n              isLoading: false\r\n            })\r\n            NotifError(error.response === undefined ? \"Terjadi Kesalahan Saat Menyimpan Data\" :  /e11000/i.test(error.response.data) ? \"User Id Sudah Terdaftar\" : error.response.data)\r\n          })\r\n      : postData(\"users/add/user\", data_post)\r\n          .then(() => {\r\n            this.props.dispatch(hideModal());\r\n          })\r\n          // .then(NotifSucces(\"Data Berhasil Di Simpan\"))\r\n        .then(() => {\r\n          NotifSucces(\"Data Berhasil Di Simpan\")\r\n            this.props.dispatch(getDataUser());\r\n          })\r\n          .then(() => {\r\n            this.setState({ isLoading: false });\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(reset(\"ModalTambahUsers\"));\r\n          })\r\n          .catch((error) => {\r\n            this.setState({\r\n              isLoading: false\r\n            })\r\n            NotifError(error.response === undefined ? \"Terjadi Kesalahan Saat Menyimpan Data\" :  /e11000/i.test(error.response.data) ? \"User Id Sudah Terdaftar\" : error.response.data)\r\n            // NotifError(error.response === undefined ? \"Terjadi Kesalahan Saat Menyimpan Data\" : error.response.data)\r\n          });\r\n  }\r\n  formEditBaki(dataEdit) {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(ShowModalTambahUser(dataEdit));\r\n    this.setState({\r\n      isEdit: true,\r\n    });\r\n  }\r\n  ShowModalTambahUser() {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(ShowModalTambahUser(false));\r\n    this.setState({\r\n      isEdit: false,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Manage Users</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Data Users</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Data Users </h1>\r\n        <Panel>\r\n          <PanelHeader>Data Users</PanelHeader>\r\n          <br />\r\n          <div className=\"container\">\r\n            <ToolkitProvider\r\n              keyField=\"user_id\"\r\n              data={this.props.DataUsers || []}\r\n              columns={this.state.columns}\r\n              search\r\n              exportCSV={{\r\n                fileName: \"Export Data Users.csv\",\r\n              }}\r\n            >\r\n              {(props) => (\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">\r\n                    <button\r\n                      onClick={() => this.ShowModalTambahUser()}\r\n                      className=\"btn btn-primary\"\r\n                    >\r\n                      {\" \"}\r\n                      <i className=\"fa fa-plus\"></i>{\" \"}\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"col-6\">\r\n                    <div className=\"text-right\">\r\n                      <SearchBar {...props.searchProps} />\r\n                    </div>\r\n                  </div>\r\n                  <hr />\r\n                  <div className=\"col-12\">\r\n                    <BootstrapTable\r\n                      pagination={paginationFactory()}\r\n                      {...props.baseProps}\r\n                    />\r\n                    <br />\r\n                  </div>\r\n                  <div className=\"col-6\">\r\n                    <ExportCSVButton {...props.csvProps}>\r\n                        Export CSV!!\r\n                      </ExportCSVButton>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </ToolkitProvider>\r\n          </div>\r\n          <br />\r\n          {/* End Data Users */}\r\n          <ModalGlobal\r\n            title={this.state.isEdit ? \"Edit Data Users\" : \"Tambah Data Users\"}\r\n            size=\"P\"\r\n            content={\r\n              <FormDataUser\r\n                isLoading={this.state.isLoading}\r\n                isEdit={this.state.isEdit}\r\n                onSubmit={(data) => this.handleSubmit(data)}\r\n              />\r\n            }\r\n          />\r\n\r\n          {/* End Tambah Data Users  */}\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(DataUsers);\r\n","const ValidasiDataUsers = (value) => {\r\n    const errors = {};\r\n    if (!value.user_id) {\r\n        errors.user_id = \"User Id Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.user_name) {\r\n        errors.user_name = \"Username Tidak Boleh Kosong\";\r\n    }\r\n\r\n    if (!value.level) {\r\n        errors.level = \"Level Harus Dipilih \";\r\n    }\r\n    // if (!value.password) {\r\n    //     errors.password = \"Hassword Harus Diisi \";\r\n    // }\r\n    // if (!value.retype_password) {\r\n    //     errors.retype_password = \"Retype Password Harus Diisi \";\r\n    // }\r\n\r\n    return errors;\r\n}\r\n\r\nexport default ValidasiDataUsers;\r\n\r\n\r\n"],"sourceRoot":""}