{"version":3,"sources":["pages/utility/SettingNota/SettingNota.jsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","_components_helpers_function_jsx__WEBPACK_IMPORTED_MODULE_2__","_config_page_settings_js__WEBPACK_IMPORTED_MODULE_3__","SettingNota","React","Component","constructor","props","super","this","state","date","getDate","Date","toDateString","setState","isLoading","componentDidMount","localStoragedecryp","getToday","history","push","window","pushState","document","title","location","href","addEventListener","event","context","handleSetPageSidebar","handleSetPageHeader","handleSetBodyWhiteBg","replace","componentWillUnmount","render","a","createElement","Fragment","contextType","PageSettings","withRouter"],"mappings":"6FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,IAAAO,EAAAP,EAAA,GAAAQ,EAAAR,EAAA,IAOA,MAAMS,UAAoBC,IAAMC,UAG9BC,YAAYC,GACVC,MAAMD,GADWE,KAQnBC,MAAQ,CACNC,KAAM,IATWF,KAYnBG,QAAU,MACR,IAAID,GAAO,IAAIE,MAAOC,eACtBL,KAAKM,SAAS,CAAEJ,WAZhBF,KAAKC,MAAQ,CACXM,WAAW,GAcfC,oBAC0BC,YAAmB,aACnBC,eACtBV,KAAKF,MAAMa,QAAQC,KAAK,cAE1BC,OAAOF,QAAQG,UAAU,KAAMC,SAASC,MAAOH,OAAOI,SAASC,MAC/DL,OAAOM,iBAAiB,WAAY,SAAUC,GAC5CP,OAAOF,QAAQG,UAAU,KAAMC,SAASC,MAAOH,OAAOI,SAASC,QAGjElB,KAAKqB,QAAQC,sBAAqB,GAClCtB,KAAKqB,QAAQE,qBAAoB,GACjCvB,KAAKqB,QAAQG,sBAAqB,GAClCxB,KAAKG,UACLU,OAAOI,SAASQ,QAAQ,0CAK1BC,uBACE1B,KAAKqB,QAAQC,sBAAqB,GAClCtB,KAAKqB,QAAQE,qBAAoB,GACjCvB,KAAKqB,QAAQG,sBAAqB,GAIpCG,SACE,OACCtC,EAAAuC,EAAAC,cAAAxC,EAAAuC,EAAAE,SAAA,WAhDCpC,EACGqC,YAAcC,IAoDRC,sBAAWvC","file":"static/js/121.44408d76.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  getToday,\r\n  localStoragedecryp,\r\n} from \"../../../components/helpers/function.jsx\";\r\nimport { PageSettings } from \"../../../config/page-settings.js\";\r\nclass SettingNota extends React.Component {\r\n  static contextType = PageSettings;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      // isSettingNota: false,\r\n    };\r\n  }\r\n\r\n  state = {\r\n    date: \"\",\r\n  };\r\n\r\n  getDate = () => {\r\n    var date = new Date().toDateString();\r\n    this.setState({ date });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const isAuthenticated = localStoragedecryp(\"islogin\");\r\n    if (isAuthenticated === getToday()) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n    window.history.pushState(null, document.title, window.location.href);\r\n    window.addEventListener(\"popstate\", function (event) {\r\n      window.history.pushState(null, document.title, window.location.href);\r\n    });\r\n\r\n    this.context.handleSetPageSidebar(false);\r\n    this.context.handleSetPageHeader(false);\r\n    this.context.handleSetBodyWhiteBg(true);\r\n    this.getDate();\r\n    window.location.replace('http://localhost:3000/settingnota.html')\r\n    // console.log(encryptascii('sa'));\r\n    // console.log(decryptascii('BF95'));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.context.handleSetPageSidebar(true);\r\n    this.context.handleSetPageHeader(true);\r\n    this.context.handleSetBodyWhiteBg(false);\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n     <> </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SettingNota);"],"sourceRoot":""}