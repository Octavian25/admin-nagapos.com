{"version":3,"sources":["pages/Laporan/LaporanBarang/FormLaporanTambahBarang/exel/LaporanTambahBarangExel.jsx","pages/Laporan/LaporanBarang/FormLaporanTambahBarang/pdf/CetakLaporanTambahBarang.jsx","pages/Laporan/LaporanBarang/FormLaporanTambahBarang/pdf/CetakLaporanTambahBarangGlobalBaki.jsx","pages/Laporan/LaporanBarang/FormLaporanTambahBarang/exel/LaporanTambahBarangExelGlobalBaki.jsx","pages/Laporan/LaporanBarang/FormLaporanTambahBarang/exel/LaporanTambahBarangExelGlobalJenis.jsx","pages/Laporan/LaporanBarang/FormLaporanTambahBarang/pdf/CetakLaporanTambahBarangGlobalJenis.jsx","pages/Laporan/LaporanBarang/FormLaporanTambahBarang/HeadFilterLaporan.jsx","pages/Laporan/LaporanBarang/FormLaporanTambahBarang/FormLaporanTambahBarang.jsx"],"names":["LaporanTambahBarangExel","Component","constructor","props","super","this","state","render","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","rowkey","style","display","colSpan","textAlign","getUserdata","nama_toko","alamat_toko","backgroundColor","color","data","map","item","index","key","kode_barcode","kode_gudang","kode_toko","kode_group","kode_dept","nama_barang","nama_atribut","formatGram","berat","berat_asli","berat_atribut","harga_jual","toLocaleString","list","reduce","b","CetakLaporanTambahBarang","doc","jsPDF","tableRows","tableColumn","finalY","total_berat","total_berat_atribut","total_berat_asli","total_hargaJUal","setFontSize","text","jml_alamat","length","slice","setProperties","title","concat","localStoragedecryp","JSON","parse","tgl_awal","tgl_akhir","content","styles","halign","forEach","rows","cellWidth","push","footer","fillColor","textColor","toFixed","printed","user_id","getToday","fontStyle","autoTable","head","body","startY","theme","rowPageBreak","margin","top","bodyStyles","fontSize","headStyles","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","save","CetakLaporanTambahBarangGlobalBaki","total_berat_tambah","total_stock_tambah","total_berat_asli_tambah","stock_tambah","berat_asli_tambah","berat_tambah","LaporanTambahBarangExelGlobalBaki","LaporanTambahBarangExelGlobalJenis","nama_dept","CetakLaporanTambahBarangGlobalJenis","string","output","x","window","open","document","write","HeadFilterLaporan","loading","data_per_baki","data_per_jenis","table_per_baki","table_per_jenis","isLoading","setStartDate","bind","setLastDate","componentDidMount","dispatch","getDataBaki","getDataJenis","change","getTglSystem","date","setState","Date","ToastNotification","exportPdf","exportPdfGlobalBaki","exportPdfGlobalJenis","GlobalPerBaki","data_post","formatDate","moment","format","getData","then","res","export","LaporanBarangDetail","localStorageencryp","stringify","table_per_normal","catch","error","errorHandling","GlobalPerJenis","err","NotifError","databaki","value","name","kode_baki","nama_baki","dataJenis","onSubmit","handleSubmit","autoComplete","onKeyPress","e","preventDefault","Field","component","InputDate","label","type","defaultValue","selected","onChange","placeholder","options","ReanderSelect","field","disabled","submitting","onClick","tabel","keyField","columns","columns_per_baki","empty","textEmpty","columns_per_jenis","exel_LaporanTambahBarangExel","exel_LaporanTambahBarangExelGlobalBaki","exel_LaporanTambahBarangExelGlobalJenis","loading_default","background","loaderColor","reduxForm","form","enableReinitialize","selector","formValueSelector","connect","datamaster","initialValues","FormLaporanTambahBarang","React","isEdit","modalDialog","dataField","headerClasses","formatter","cell","parseFloat","username","postDataNoTImeOut","react_router_dom","to","panel","FormLaporanTambahBarang_HeadFilterLaporan","hideModal"],"mappings":"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","file":"static/js/73.442a0862.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport { formatGram, getUserdata } from \"../../../../../components/helpers/function\";\r\n\r\nclass LaporanTambahBarangExel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n    render() {\r\n    return (\r\n      <>\r\n        <ReactHTMLTableToExcel\r\n          id=\"test-table-xls-button\"\r\n          className=\"btn btn-success btn-block\"\r\n          table=\"table-to-xls\"\r\n          filename=\"Laporan Tambah Barang\"\r\n          sheet=\"Laporan Tambah Barang\"\r\n          buttonText=\"Export Exel\"\r\n        />\r\n        <table rowkey=\"kode_member\" id=\"table-to-xls\" style={{ display: \"none\" }}>\r\n        <thead>\r\n              <tr>\r\n                <th colSpan=\"12\" style={{textAlign : \"center\"}}> LAPORAN TAMBAH BARANG </th>\r\n              </tr>\r\n              <tr>\r\n              <th colSpan=\"12\"> TOKO :  {getUserdata(getUserdata).nama_toko} </th>\r\n            </tr>\r\n           \r\n            <tr>\r\n              <th colSpan=\"12\"> ALAMAT :  {getUserdata().alamat_toko} </th>\r\n            </tr>\r\n            <tr></tr>\r\n            <tr >\r\n                <th  style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>NO</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>KODE BARCODE</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>KODE GUDANG</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>KODE TOKO</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>KODE GROUP</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>KODE JENIS</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>NAMA BARANG</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>NAMA ATRIBUT</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>BERAT</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>BERAT ASLI</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>BERAT ATRIBUT</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>HARGA JUAL</th>\r\n                {/* <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>JUMLAH</th> */}\r\n            </tr>\r\n        </thead>\r\n            \r\n            <tbody>\r\n            {this.props.data.map((item, index) => (\r\n                    <tr key={index}>\r\n                        <td style={{ textAlign : \"center\" }}> {index+1}</td>\r\n                        <td>&nbsp;{item.kode_barcode}</td>\r\n                        <td> {item.kode_gudang}</td>\r\n                        <td> {item.kode_toko}</td>\r\n                        <td> {item.kode_group}</td>\r\n                        <td> {item.kode_dept}</td>\r\n                        <td> {item.nama_barang}</td>\r\n                        <td> {item.nama_atribut}</td>\r\n                        <td style={{textAlign : \"right\"}}> {formatGram(item.berat,3)}</td>\r\n                        <td style={{textAlign : \"right\"}}> {formatGram(item.berat_asli,3)}</td>\r\n                        <td style={{textAlign : \"right\"}}> {formatGram(item.berat_atribut,3)}</td>\r\n                        <td style={{textAlign : \"right\"}}> {item.harga_jual.toLocaleString(\"kr-KO\")}</td>\r\n                        {/* <td style={{ border: \"1px solid #000\" }}> {item.stock_on_hand}</td> */}\r\n                    </tr>\r\n             ))}\r\n            </tbody>\r\n                    \r\n            <tfoot>\r\n                <tr>\r\n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"center\" }} colSpan=\"8\">  </th>    \r\n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"right\"}}> {formatGram(this.props.data.map(list => list.berat).reduce((a,b) => a+b,0),3)}   </th>    \r\n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"right\"}}> {formatGram(this.props.data.map(list => list.berat_asli).reduce((a,b) => a+b,0),3)}  </th>    \r\n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"right\"}}> {formatGram(this.props.data.map(list => list.berat_atribut).reduce((a,b) => a+b,0),3)}  </th>    \r\n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"right\"}}> {this.props.data.map(list => list.harga_jual).reduce((a,b) => a+b,0).toLocaleString(\"kr-KO\")}  </th>    \r\n                </tr>\r\n            </tfoot>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default LaporanTambahBarangExel;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { getToday, formatGram,localStoragedecryp, getUserdata } from \"../../../../../components/helpers/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst CetakLaporanTambahBarang = (\r\n  data = \"\",\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  // let footRows = [];\r\n  let tableColumn = [];\r\n  let finalY = 30;\r\n  let total_berat = 0;\r\n  let total_berat_atribut = 0;\r\n  let total_berat_asli = 0;\r\n  let total_hargaJUal = 0;\r\n\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN TAMBAH BARANG\", 14, 15);\r\n  doc.setFontSize(20);\r\n  doc.text(getUserdata().nama_toko, 200, 15);\r\n  doc.setFontSize(8);\r\n  let jml_alamat = getUserdata().alamat_toko.length;\r\n  if (jml_alamat > 20) {\r\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\r\n  }\r\n  if (jml_alamat > 50) {\r\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\r\n  }\r\n  doc.setFontSize(10);\r\n  doc.setProperties({\r\n    title: \"LAPORAN TAMBAH BARANG\",\r\n  });\r\n  doc.text(\r\n    `PERIODE : ${\r\n      localStoragedecryp(\"tgl_laporan\").length === 0\r\n        ? null\r\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n          \" s/d \" +\r\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\r\n    }`,\r\n    14,\r\n    25\r\n  );\r\n  tableColumn = [\r\n    [\r\n      {\r\n        content: `NO`,\r\n      },\r\n      {\r\n        content: `KODE BARCODE`,\r\n      },\r\n      {\r\n        content: `KODE GUDANG`,\r\n      },\r\n      {\r\n        content: `KODE TOKO`,\r\n        \r\n      },\r\n      {\r\n        content: `KODE GROUP`,\r\n      },\r\n      {\r\n        content: `KODE JENIS`,\r\n      },\r\n      {\r\n        content: `NAMA BARANG`,\r\n      },\r\n      {\r\n        content: `NAMA ATRIBUT`,\r\n      },\r\n      {\r\n        content: `BERAT`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      {\r\n        content: `BERAT ASLI`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n     \r\n      {\r\n        content: `BERAT ATRIBUT`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      {\r\n        content: `HARGA JUAL`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      // {\r\n      //   content: `JUMLAH`,\r\n      // },\r\n    ],\r\n  ];\r\n\r\n  data.forEach((item, index) => {\r\n    // item.list_barang.forEach((barang, index) => {\r\n    let rows = [\r\n      // ++index,\r\n      {\r\n        content: `${++index}`,\r\n        styles: {\r\n          cellWidth : 10\r\n        },\r\n      },\r\n      item.kode_barcode,\r\n      item.kode_gudang,\r\n      item.kode_toko,\r\n      item.kode_group,\r\n      item.kode_dept,\r\n      item.nama_barang,\r\n      item.nama_atribut,\r\n      {\r\n        content: formatGram(item.berat,3),\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      {\r\n        content: formatGram(item.berat_asli,3),\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      {\r\n        content: formatGram(item.berat_atribut,3),\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      {\r\n        content: item.harga_jual.toLocaleString(\"kr-KO\"),\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      // item.stock_on_hand,\r\n     \r\n    ];\r\n    total_berat = total_berat + item.berat;\r\n    total_berat_asli = total_berat_asli + item.berat_asli;\r\n    total_berat_atribut = total_berat_atribut + item.berat_atribut;\r\n    total_hargaJUal = total_hargaJUal + item.harga_jual;\r\n    tableRows.push(rows);\r\n  });\r\n  \r\n  // let footer = [\r\n  //   ``,\r\n  //   ``,\r\n  //   ``,\r\n  //   ``,\r\n  //   ``,\r\n  //   ``,\r\n  //   `${total_berat.toFixed(1)}`,\r\n  //   ``,\r\n  //   `${total_berat_atribut.toFixed(1)}`,\r\n  //   `${total_stock.toLocaleString('kr-KO')}`,\r\n  // ];\r\n  let footer = [\r\n    {\r\n      content: `Total Berat`,\r\n      colSpan: 7,\r\n      styles: {\r\n        halign: 'center',\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: ` `,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: `${total_berat.toFixed(3)}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right'\r\n      },\r\n    },\r\n    {\r\n      content: `${total_berat_asli.toFixed(3)}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right'\r\n      },\r\n    },\r\n    \r\n    {\r\n      content: `${total_berat_atribut.toFixed(3)}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right'\r\n      },\r\n    },\r\n    {\r\n      content: `${total_hargaJUal.toLocaleString(\"kr-KO\")}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right'\r\n      },\r\n    },\r\n    // `${sub_qty}`,\r\n  ];\r\n  tableRows.push(footer);\r\n  let printed = [\r\n    {\r\n      colSpan: 6,\r\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\r\n      styles: {\r\n        // lineWidth: 0.1,\r\n        fontStyle: \"italic\",\r\n        textColor: \"#000\",\r\n        // fillColor: \"#E8E5E5\"\r\n      },\r\n    },\r\n  ]\r\n  tableRows.push(printed);\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    // foot: footRows,\r\n    startY: finalY,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    // pageBreak: \"avoid\",\r\n    margin: { top: 10 },\r\n    bodyStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    headStyles: {\r\n      fontSize: 8,\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      textColor: \"#000\",\r\n      fillColor: \"#E8E5E5\",\r\n    },\r\n  });\r\n  finalY = doc.autoTableEndPosY() + 3;\r\n  tableRows = [];\r\n  // footRows = [];\r\n  // total_berat = 0;\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  // doc.text(`Total Berat                    :  ${total_berat.toFixed(1)}`, 14, finalY + 10);\r\n  // doc.text(`Berat Atribut                  :  ${total_berat_atribut.toFixed(1)}`, 14, finalY + 16);\r\n  // doc.text(`Stock                             :  ${total_stock.toLocaleString('kr-KO')}`, 14, finalY + 22);\r\n  // doc.text(`User                              :  ${JSON.parse(localStoragedecryp(\"userdata\")).user_id}`, 14, finalY + 10);\r\n  // doc.text(`Cetak                            : ${getToday()}`, 14, finalY + 16);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  // doc.autoPrint();\r\n  doc.save(`LAPORAN BARANG DETAIL.pdf`);\r\n  // var string = doc.output(\"datauristring\");\r\n  // // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  // var x = window.open();\r\n  // x.document.open();\r\n  // x.document.write(\r\n  //   \"<html><head><title>LAPORAN TAMBAH BARANG</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n  //     string +\r\n  //     \"></embed></body></html>\"\r\n  // );\r\n  // x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default CetakLaporanTambahBarang;\r\n// import jsPDF from \"jspdf\";\r\n// import \"jspdf-autotable\";\r\n// import { getToday } from \"../../../../components/helpers/function\";\r\n// // Date Fns is used to format the dates we receive\r\n\r\n// // define a generatePDF function that accepts a tickets argument\r\n// const CetakLaporanTambahBarang = (data = \"\", username = \"\", kode_baki = \"\") => {\r\n//   const doc = new jsPDF(\"l\");\r\n//   doc.setFontSize(15);\r\n//   doc.text(\"LAPORAN  BARANG DETAIL\", 14, 15);\r\n//   doc.setFontSize(10);\r\n//   doc.setProperties({\r\n//     title: \"LAPORAN  BARANG DETAIL\",\r\n//   });\r\n//   //row 1\r\n//   doc.text(`Kode Baki : ${kode_baki}`, 14, 23);\r\n//   let tableRows = [];\r\n//   let finalY = 10;\r\n//   let footRows = [];\r\n//   let total = 0;\r\n//   let sub_qty = 0;\r\n//   let sub_brt = 0;\r\n//   let tableColumn = [\r\n//     \"NO\",\r\n//     \"KODE BARANG\",\r\n//     \"KODE BARCODE\",\r\n//     \"KODE INTERN\",\r\n//     \"KODE GUDANG\",\r\n//     \"NAMA BARANG\",\r\n//     \"BERAT\",\r\n//     \"NAMA ATRIBUTE\",\r\n//     \"BERAT ATRIBUTE\",\r\n//     \"JUMLAH\",\r\n//   ];\r\n\r\n//   // console.log(JSON.stringify(data));\r\n//   // localStorage.setItem('hasil',JSON.stringify(data));\r\n//   data.forEach((item, index) => {\r\n//     // item.list_barang.forEach((barang, index) => {\r\n//     let rows = [\r\n//       ++index,\r\n//       item.kode_barang,\r\n//       item.kode_barcode,\r\n//       item.kode_intern,\r\n//       item.kode_gudang,\r\n//       item.nama_barang,\r\n//       item.berat,\r\n//       item.nama_atribut,\r\n//       item.berat_atribut,\r\n//       item.stock_on_hand,\r\n//     ];\r\n//     total = index;\r\n//     sub_qty = sub_qty + parseFloat(item.stock_on_hand);\r\n//     sub_brt = sub_brt + parseFloat(item.berat);\r\n//     tableRows.push(rows);\r\n//     let footer = [\r\n//       \"\",\r\n//       \"\",\r\n//       \"\",\r\n//       \"\",\r\n//       \"Sub Total\",\r\n//       \"\",\r\n//       `${sub_brt.toFixed(3)}`,\r\n//       \"\",\r\n//       \"\",\r\n//       `${sub_qty}`,\r\n//     ];\r\n//     footRows.push(footer);\r\n//     doc.autoTable(tableColumn, tableRows, {\r\n//       startY: index === 0 ? 35 : finalY + 15,\r\n//         theme: \"plain\",\r\n//       foot: footRows,\r\n//       rowPageBreak: \"avoid\",\r\n//       pageBreak: \"avoid\",\r\n//       bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n//       headStyles: {\r\n//         lineWidth: 0.02,\r\n//         lineColor: \"#000\",\r\n//         fillColor: [187, 187, 187],\r\n//       },\r\n//       // theme: \"\",\r\n//     });\r\n//     finalY = doc.lastAutoTable.finalY + 10;\r\n//     tableRows = [];\r\n//   });\r\n//   // let footer = [\r\n//   //   \"\",\r\n//   //   \"\",\r\n//   //   \"\",\r\n//   //   \"Total Barang : \",\r\n//   //   \"\" + parseFloat(total).toLocaleString(\"kr-KO\"),\r\n//   // ];\r\n//   // tableRows.push(footer);\r\n\r\n//   doc.text(`Total Barang\t: ${total}`, 14, finalY + 5);\r\n//   doc.text(`User\t             : ${username}`, 14, finalY + 10);\r\n//   doc.text(`Tgl Cetak             : ${getToday()}`, 14, finalY + 16);\r\n\r\n//   // doc.autoPrint();\r\n//   // doc.save(`Laporan BARANG DETAIL.pdf`);\r\n//   var string = doc.output(\"datauristring\");\r\n//   var x = window.open();\r\n//   x.document.open();\r\n//   x.document.write(\r\n//     \"<html><head><title>LAPORAN  BARANG DETAIL</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n//       string +\r\n//       \"></embed></body></html>\"\r\n//   );\r\n//   x.document.close();\r\n// };\r\n\r\n// export default CetakLaporanTambahBarang;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { getToday, formatGram,localStoragedecryp, getUserdata } from \"../../../../../components/helpers/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst CetakLaporanTambahBarangGlobalBaki = (\r\n  data = \"\",\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  // let footRows = [];\r\n  let tableColumn = [];\r\n  let finalY = 30;\r\n  let total_berat_tambah = 0;\r\n  let total_stock_tambah = 0;\r\n  let total_berat_asli_tambah = 0;\r\n\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN TAMBAH STOCK\", 14, 15);\r\n  doc.setFontSize(20);\r\n  doc.text(getUserdata().nama_toko, 200, 15);\r\n  doc.setFontSize(8);\r\n  let jml_alamat = getUserdata().alamat_toko.length;\r\n  if (jml_alamat > 20) {\r\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\r\n  }\r\n  if (jml_alamat > 50) {\r\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\r\n  }\r\n  doc.setFontSize(10);\r\n  doc.setProperties({\r\n    title: \"LAPORAN TAMBAH STOCK\",\r\n  });\r\n  doc.text(\r\n    `PERIODE : ${\r\n      localStoragedecryp(\"tgl_laporan\").length === 0\r\n        ? null\r\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n          \" s/d \" +\r\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\r\n    }`,\r\n    14,\r\n    25\r\n  );\r\n  tableColumn = [\r\n    [\r\n      {\r\n        content: `NO`,\r\n      },\r\n      {\r\n        content: `KODE BAKI`,\r\n      },\r\n      {\r\n        content: `NAMA BAKI`,\r\n      },\r\n  \r\n      {\r\n        content: `TAMBAH PTG`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      // {\r\n      //   content: `BERAT TAMBAH`,\r\n      //   styles: {\r\n      //     halign: 'right'\r\n      //   },\r\n      // },\r\n      {\r\n        content: `BERAT ASLI`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      // {\r\n      //   content: `JUMLAH`,\r\n      // },\r\n    ],\r\n  ];\r\n\r\n  data.forEach((item, index) => {\r\n    // item.list_barang.forEach((barang, index) => {\r\n    let rows = [\r\n      // ++index,\r\n      {\r\n        content: `${++index}`,\r\n        styles: {\r\n          cellWidth : 10\r\n        },\r\n      },\r\n      item.kode_toko,\r\n      item.nama_toko,\r\n      {\r\n        content: item.stock_tambah,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      // {\r\n      //   content: formatGram(item.berat_tambah,3),\r\n      //   styles: {\r\n      //     halign: 'right'\r\n      //   },\r\n      // },\r\n      {\r\n        content: formatGram(item.berat_asli_tambah,3),\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      // item.stock_on_hand,\r\n    ];\r\n    total_stock_tambah = total_stock_tambah + item.stock_tambah;\r\n    total_berat_tambah = total_berat_tambah + item.berat_tambah;\r\n    total_berat_asli_tambah = total_berat_asli_tambah + item.berat_asli_tambah || 0;\r\n    tableRows.push(rows);\r\n  });\r\n  \r\n  // let footer = [\r\n  //   ``,\r\n  //   ``,\r\n  //   ``,\r\n  //   ``,\r\n  //   ``,\r\n  //   ``,\r\n  //   `${total_berat.toFixed(1)}`,\r\n  //   ``,\r\n  //   `${total_berat_atribut.toFixed(1)}`,\r\n  //   `${total_stock.toLocaleString('kr-KO')}`,\r\n  // ];\r\n  let footer = [\r\n    {\r\n      content: `Total`,\r\n      colSpan: 3,\r\n      styles: {\r\n        halign: 'center',\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: `${total_stock_tambah}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right'\r\n      },\r\n    },\r\n    {\r\n      content: `${formatGram(total_berat_tambah, 3)}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right'\r\n      },\r\n    },\r\n    {\r\n      content: `${formatGram(total_berat_asli_tambah, 3)}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right'\r\n      },\r\n    },\r\n    // `${sub_qty}`,\r\n  ];\r\n  tableRows.push(footer);\r\n  let printed = [\r\n    {\r\n      colSpan: 6,\r\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\r\n      styles: {\r\n        // lineWidth: 0.1,\r\n        fontStyle: \"italic\",\r\n        textColor: \"#000\",\r\n        // fillColor: \"#E8E5E5\"\r\n      },\r\n    },\r\n  ]\r\n  tableRows.push(printed);\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    // foot: footRows,\r\n    startY: finalY,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    // pageBreak: \"avoid\",\r\n    margin: { top: 10 },\r\n    bodyStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    headStyles: {\r\n      fontSize: 8,\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      textColor: \"#000\",\r\n      fillColor: \"#E8E5E5\",\r\n    },\r\n  });\r\n  finalY = doc.autoTableEndPosY() + 3;\r\n  tableRows = [];\r\n  // footRows = [];\r\n  // total_berat = 0;\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  // doc.text(`Total Berat                    :  ${total_berat.toFixed(1)}`, 14, finalY + 10);\r\n  // doc.text(`Berat Atribut                  :  ${total_berat_atribut.toFixed(1)}`, 14, finalY + 16);\r\n  // doc.text(`Stock                             :  ${total_stock.toLocaleString('kr-KO')}`, 14, finalY + 22);\r\n  // doc.text(`User                              :  ${JSON.parse(localStoragedecryp(\"userdata\")).user_id}`, 14, finalY + 10);\r\n  // doc.text(`Cetak                            : ${getToday()}`, 14, finalY + 16);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  doc.save(`LAPORAN TAMBAH BARANG.pdf`);\r\n  // var string = doc.output(\"datauristring\");\r\n  // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  // var x = window.open();\r\n  // x.document.open();\r\n  // x.document.write(\r\n  //   \"<html><head><title>LAPORAN TAMBAH BARANG</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n  //     string +\r\n  //     \"></embed></body></html>\"\r\n  // );\r\n  // x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default CetakLaporanTambahBarangGlobalBaki;\r\n// import jsPDF from \"jspdf\";\r\n// import \"jspdf-autotable\";\r\n// import { getToday } from \"../../../../components/helpers/function\";\r\n// // Date Fns is used to format the dates we receive\r\n\r\n// // define a generatePDF function that accepts a tickets argument\r\n// const CetakLaporanTambahBarangGlobalBaki = (data = \"\", username = \"\", kode_baki = \"\") => {\r\n//   const doc = new jsPDF(\"l\");\r\n//   doc.setFontSize(15);\r\n//   doc.text(\"LAPORAN  BARANG DETAIL\", 14, 15);\r\n//   doc.setFontSize(10);\r\n//   doc.setProperties({\r\n//     title: \"LAPORAN  BARANG DETAIL\",\r\n//   });\r\n//   //row 1\r\n//   doc.text(`Kode Baki : ${kode_baki}`, 14, 23);\r\n//   let tableRows = [];\r\n//   let finalY = 10;\r\n//   let footRows = [];\r\n//   let total = 0;\r\n//   let sub_qty = 0;\r\n//   let sub_brt = 0;\r\n//   let tableColumn = [\r\n//     \"NO\",\r\n//     \"KODE BARANG\",\r\n//     \"KODE BARCODE\",\r\n//     \"KODE INTERN\",\r\n//     \"KODE GUDANG\",\r\n//     \"NAMA BARANG\",\r\n//     \"BERAT\",\r\n//     \"NAMA ATRIBUTE\",\r\n//     \"BERAT ATRIBUTE\",\r\n//     \"JUMLAH\",\r\n//   ];\r\n\r\n//   // console.log(JSON.stringify(data));\r\n//   // localStorage.setItem('hasil',JSON.stringify(data));\r\n//   data.forEach((item, index) => {\r\n//     // item.list_barang.forEach((barang, index) => {\r\n//     let rows = [\r\n//       ++index,\r\n//       item.kode_barang,\r\n//       item.kode_barcode,\r\n//       item.kode_intern,\r\n//       item.kode_gudang,\r\n//       item.nama_barang,\r\n//       item.berat,\r\n//       item.nama_atribut,\r\n//       item.berat_atribut,\r\n//       item.stock_on_hand,\r\n//     ];\r\n//     total = index;\r\n//     sub_qty = sub_qty + parseFloat(item.stock_on_hand);\r\n//     sub_brt = sub_brt + parseFloat(item.berat);\r\n//     tableRows.push(rows);\r\n//     let footer = [\r\n//       \"\",\r\n//       \"\",\r\n//       \"\",\r\n//       \"\",\r\n//       \"Sub Total\",\r\n//       \"\",\r\n//       `${sub_brt.toFixed(3)}`,\r\n//       \"\",\r\n//       \"\",\r\n//       `${sub_qty}`,\r\n//     ];\r\n//     footRows.push(footer);\r\n//     doc.autoTable(tableColumn, tableRows, {\r\n//       startY: index === 0 ? 35 : finalY + 15,\r\n//         theme: \"plain\",\r\n//       foot: footRows,\r\n//       rowPageBreak: \"avoid\",\r\n//       pageBreak: \"avoid\",\r\n//       bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n//       headStyles: {\r\n//         lineWidth: 0.02,\r\n//         lineColor: \"#000\",\r\n//         fillColor: [187, 187, 187],\r\n//       },\r\n//       // theme: \"\",\r\n//     });\r\n//     finalY = doc.lastAutoTable.finalY + 10;\r\n//     tableRows = [];\r\n//   });\r\n//   // let footer = [\r\n//   //   \"\",\r\n//   //   \"\",\r\n//   //   \"\",\r\n//   //   \"Total Barang : \",\r\n//   //   \"\" + parseFloat(total).toLocaleString(\"kr-KO\"),\r\n//   // ];\r\n//   // tableRows.push(footer);\r\n\r\n//   doc.text(`Total Barang\t: ${total}`, 14, finalY + 5);\r\n//   doc.text(`User\t             : ${username}`, 14, finalY + 10);\r\n//   doc.text(`Tgl Cetak             : ${getToday()}`, 14, finalY + 16);\r\n\r\n//   // doc.autoPrint();\r\n//   // doc.save(`Laporan BARANG DETAIL.pdf`);\r\n//   var string = doc.output(\"datauristring\");\r\n//   var x = window.open();\r\n//   x.document.open();\r\n//   x.document.write(\r\n//     \"<html><head><title>LAPORAN  BARANG DETAIL</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n//       string +\r\n//       \"></embed></body></html>\"\r\n//   );\r\n//   x.document.close();\r\n// };\r\n\r\n// export default CetakLaporanTambahBarangGlobalBaki;\r\n","import React, { Component } from \"react\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport { formatGram, getUserdata } from \"../../../../../components/helpers/function\";\r\n\r\nclass LaporanTambahBarangExelGlobalBaki extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n    render() {\r\n    return (\r\n      <>\r\n        <ReactHTMLTableToExcel\r\n          id=\"test-table-xls-button\"\r\n          className=\"btn btn-success btn-block\"\r\n          table=\"table-to-xls\"\r\n          filename=\"Laporan Tambah Stock\"\r\n          sheet=\"Laporan Tambah Stock\"\r\n          buttonText=\"Export Exel\"\r\n        />\r\n        <table rowkey=\"kode_member\" id=\"table-to-xls\" style={{ display: \"none\" }}>\r\n        <thead>\r\n              <tr>\r\n                <th colSpan=\"6\" style={{textAlign : \"center\"}}> LAPORAN TAMBAH BARANG GLOBAL PER BAKI</th>\r\n              </tr>\r\n              <tr>\r\n              <th colSpan=\"6\"> TOKO :  {getUserdata(getUserdata).nama_toko} </th>\r\n            </tr>\r\n           \r\n            <tr>\r\n              <th colSpan=\"6\"> ALAMAT :  {getUserdata().alamat_toko} </th>\r\n            </tr>\r\n            <tr></tr>\r\n            <tr >\r\n                <th  style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>NO</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>KODE BAKI</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>NAMA BAKI</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\", textAlign : \"right\"}}>TAMBAH PTG</th>\r\n                {/* <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\", textAlign : \"right\"}}>TAMBAH BERAT</th> */}\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>TAMBAH BERAT ASLI</th>\r\n                {/* <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>JUMLAH</th> */}\r\n            </tr>\r\n        </thead>\r\n            \r\n            <tbody>\r\n            {this.props.data.map((item, index) => (\r\n                    <tr key={index}>\r\n                        <td style={{ textAlign : \"center\" }}> {index+1}</td>\r\n                        <td>{item.kode_toko}</td>\r\n                        <td>{item.nama_toko}</td>\r\n                        <td style={{textAlign : \"right\"}}> {item.stock_tambah}</td>\r\n                        {/* <td style={{textAlign : \"right\"}}> {formatGram(item.berat_tambah, 3)}</td> */}\r\n                        <td style={{textAlign : \"right\"}}> {formatGram(item.berat_asli_tambah, 3)}</td>\r\n                        {/* <td> {item.barang_data[0].kode_group}</td>\r\n                        <td> {item.barang_data[0].kode_dept}</td>\r\n                        <td> {item.barang_data[0].nama_barang}</td>\r\n                        <td> {item.barang_data[0].nama_atribut}</td>\r\n                        <td style={{textAlign : \"right\"}}> {formatGram(item.barang_data[0].berat,3)}</td>\r\n                        <td style={{textAlign : \"right\"}}> {formatGram(item.barang_data[0].berat_asli,3)}</td>\r\n                        <td style={{textAlign : \"right\"}}> {formatGram(item.barang_data[0].berat_atribut,3)}</td>\r\n                        <td style={{textAlign : \"right\"}}> {item.barang_data[0].harga_jual.toLocaleString(\"kr-KO\")}</td> */}\r\n                        {/* <td style={{ border: \"1px solid #000\" }}> {item.stock_on_hand}</td> */}\r\n                    </tr>\r\n             ))}\r\n            </tbody>\r\n                    \r\n            <tfoot>\r\n                <tr>\r\n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"center\" }} colSpan=\"3\">  </th>    \r\n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"right\"}}> {formatGram(this.props.data.map(list => list.stock_tambah).reduce((a,b) => a+b,0),3)}   </th>    \r\n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"right\"}}> {formatGram(this.props.data.map(list => list.berat_tambah).reduce((a,b) => a+b,0),3)}  </th>    \r\n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"right\"}}> {formatGram(this.props.data.map(list => list.berat_asli_tambah).reduce((a,b) => a+b,0),3)}  </th>      \r\n                </tr>\r\n            </tfoot>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default LaporanTambahBarangExelGlobalBaki;\r\n","import React, { Component } from \"react\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport { formatGram, getUserdata } from \"../../../../../components/helpers/function\";\r\n\r\nclass LaporanTambahBarangExelGlobalJenis extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n    render() {\r\n    return (\r\n      <>\r\n        <ReactHTMLTableToExcel\r\n          id=\"test-table-xls-button\"\r\n          className=\"btn btn-success btn-block\"\r\n          table=\"table-to-xls\"\r\n          filename=\"Laporan Tambah Stock\"\r\n          sheet=\"Laporan Tambah Stock\"\r\n          buttonText=\"Export Exel\"\r\n        />\r\n        <table rowkey=\"kode_member\" id=\"table-to-xls\" style={{ display: \"none\" }}>\r\n        <thead>\r\n              <tr>\r\n                <th colSpan=\"6\" style={{textAlign : \"center\"}}> LAPORAN TAMBAH BARANG GLOBAL PER JENIS</th>\r\n              </tr>\r\n              <tr>\r\n              <th colSpan=\"6\"> TOKO :  {getUserdata(getUserdata).nama_toko} </th>\r\n            </tr>\r\n           \r\n            <tr>\r\n              <th colSpan=\"6\"> ALAMAT :  {getUserdata().alamat_toko} </th>\r\n            </tr>\r\n            <tr></tr>\r\n            <tr >\r\n                <th  style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>NO</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>KODE JENIS</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>NAMA JENIS</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\", textAlign : \"right\"}}>TAMBAH PTG</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\", textAlign : \"right\"}}>TAMBAH BERAT</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>TAMBAH BERAT ASLI</th>\r\n                {/* <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>JUMLAH</th> */}\r\n            </tr>\r\n        </thead>\r\n            \r\n            <tbody>\r\n            {this.props.data.map((item, index) => (\r\n                    <tr key={index}>\r\n                        <td style={{ textAlign : \"center\" }}> {index+1}</td>\r\n                        <td>{item.kode_dept}</td>\r\n                        <td>{item.nama_dept}</td>\r\n                        <td style={{textAlign : \"right\"}}> {item.stock_tambah}</td>\r\n                        <td style={{textAlign : \"right\"}}> {formatGram(item.berat_tambah, 3)}</td>\r\n                        <td style={{textAlign : \"right\"}}> {formatGram(item.berat_asli_tambah, 3)}</td>\r\n                        {/* <td> {item.barang_data[0].kode_group}</td>\r\n                        <td> {item.barang_data[0].kode_dept}</td>\r\n                        <td> {item.barang_data[0].nama_barang}</td>\r\n                        <td> {item.barang_data[0].nama_atribut}</td>\r\n                        <td style={{textAlign : \"right\"}}> {formatGram(item.barang_data[0].berat,3)}</td>\r\n                        <td style={{textAlign : \"right\"}}> {formatGram(item.barang_data[0].berat_asli,3)}</td>\r\n                        <td style={{textAlign : \"right\"}}> {formatGram(item.barang_data[0].berat_atribut,3)}</td>\r\n                        <td style={{textAlign : \"right\"}}> {item.barang_data[0].harga_jual.toLocaleString(\"kr-KO\")}</td> */}\r\n                        {/* <td style={{ border: \"1px solid #000\" }}> {item.stock_on_hand}</td> */}\r\n                    </tr>\r\n             ))}\r\n            </tbody>\r\n                    \r\n            <tfoot>\r\n                <tr>\r\n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"center\" }} colSpan=\"3\">  </th>    \r\n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"right\"}}> {formatGram(this.props.data.map(list => list.stock_tambah).reduce((a,b) => a+b,0),3)}   </th>    \r\n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"right\"}}> {formatGram(this.props.data.map(list => list.berat_tambah).reduce((a,b) => a+b,0),3)}  </th>    \r\n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"right\"}}> {formatGram(this.props.data.map(list => list.berat_asli_tambah).reduce((a,b) => a+b,0),3)}  </th>      \r\n                </tr>\r\n            </tfoot>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default LaporanTambahBarangExelGlobalJenis;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { getToday, formatGram,localStoragedecryp, getUserdata } from \"../../../../../components/helpers/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst CetakLaporanTambahBarangGlobalJenis = (\r\n  data = \"\",\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  // let footRows = [];\r\n  let tableColumn = [];\r\n  let finalY = 30;\r\n  let total_berat_tambah = 0;\r\n  let total_stock_tambah = 0;\r\n  let total_berat_asli_tambah = 0;\r\n\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN TAMBAH STOCK\", 14, 15);\r\n  doc.setFontSize(20);\r\n  doc.text(getUserdata().nama_toko, 200, 15);\r\n  doc.setFontSize(8);\r\n  let jml_alamat = getUserdata().alamat_toko.length;\r\n  if (jml_alamat > 20) {\r\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\r\n  }\r\n  if (jml_alamat > 50) {\r\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\r\n  }\r\n  doc.setFontSize(10);\r\n  doc.setProperties({\r\n    title: \"LAPORAN TAMBAH STOCK\",\r\n  });\r\n  doc.text(\r\n    `PERIODE : ${\r\n      localStoragedecryp(\"tgl_laporan\").length === 0\r\n        ? null\r\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n          \" s/d \" +\r\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\r\n    }`,\r\n    14,\r\n    25\r\n  );\r\n  tableColumn = [\r\n    [\r\n      {\r\n        content: `NO`,\r\n      },\r\n      {\r\n        content: `KODE BAKI`,\r\n      },\r\n      {\r\n        content: `NAMA BAKI`,\r\n      },\r\n  \r\n      {\r\n        content: `TAMBAH PTG`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      {\r\n        content: `BERAT TAMBAH`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      {\r\n        content: `BERAT ASLI`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      // {\r\n      //   content: `JUMLAH`,\r\n      // },\r\n    ],\r\n  ];\r\n\r\n  data.forEach((item, index) => {\r\n    // item.list_barang.forEach((barang, index) => {\r\n    let rows = [\r\n      // ++index,\r\n      {\r\n        content: `${++index}`,\r\n        styles: {\r\n          cellWidth : 10\r\n        },\r\n      },\r\n      item.kode_dept,\r\n      item.nama_dept,\r\n      {\r\n        content: item.stock_tambah,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      {\r\n        content: formatGram(item.berat_tambah,3),\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      {\r\n        content: formatGram(item.berat_asli_tambah,3),\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      // item.stock_on_hand,\r\n    ];\r\n    total_stock_tambah = total_stock_tambah + item.stock_tambah;\r\n    total_berat_tambah = total_berat_tambah + item.berat_tambah;\r\n    total_berat_asli_tambah = total_berat_asli_tambah + item.berat_asli_tambah || 0;\r\n    tableRows.push(rows);\r\n  });\r\n  \r\n  // let footer = [\r\n  //   ``,\r\n  //   ``,\r\n  //   ``,\r\n  //   ``,\r\n  //   ``,\r\n  //   ``,\r\n  //   `${total_berat.toFixed(1)}`,\r\n  //   ``,\r\n  //   `${total_berat_atribut.toFixed(1)}`,\r\n  //   `${total_stock.toLocaleString('kr-KO')}`,\r\n  // ];\r\n  let footer = [\r\n    {\r\n      content: `Total`,\r\n      colSpan: 3,\r\n      styles: {\r\n        halign: 'center',\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: `${total_stock_tambah}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right'\r\n      },\r\n    },\r\n    {\r\n      content: `${formatGram(total_berat_tambah, 3)}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right'\r\n      },\r\n    },\r\n    {\r\n      content: `${formatGram(total_berat_asli_tambah, 3)}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right'\r\n      },\r\n    },\r\n    // `${sub_qty}`,\r\n  ];\r\n  tableRows.push(footer);\r\n  let printed = [\r\n    {\r\n      colSpan: 6,\r\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\r\n      styles: {\r\n        // lineWidth: 0.1,\r\n        fontStyle: \"italic\",\r\n        textColor: \"#000\",\r\n        // fillColor: \"#E8E5E5\"\r\n      },\r\n    },\r\n  ]\r\n  tableRows.push(printed);\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    // foot: footRows,\r\n    startY: finalY,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    // pageBreak: \"avoid\",\r\n    margin: { top: 10 },\r\n    bodyStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    headStyles: {\r\n      fontSize: 8,\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      textColor: \"#000\",\r\n      fillColor: \"#E8E5E5\",\r\n    },\r\n  });\r\n  finalY = doc.autoTableEndPosY() + 3;\r\n  tableRows = [];\r\n  // footRows = [];\r\n  // total_berat = 0;\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  // doc.text(`Total Berat                    :  ${total_berat.toFixed(1)}`, 14, finalY + 10);\r\n  // doc.text(`Berat Atribut                  :  ${total_berat_atribut.toFixed(1)}`, 14, finalY + 16);\r\n  // doc.text(`Stock                             :  ${total_stock.toLocaleString('kr-KO')}`, 14, finalY + 22);\r\n  // doc.text(`User                              :  ${JSON.parse(localStoragedecryp(\"userdata\")).user_id}`, 14, finalY + 10);\r\n  // doc.text(`Cetak                            : ${getToday()}`, 14, finalY + 16);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  // doc.autoPrint();\r\n  // doc.save(`LAPORAN BARANG DETAIL.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(\r\n    \"<html><head><title>LAPORAN TAMBAH BARANG</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n      string +\r\n      \"></embed></body></html>\"\r\n  );\r\n  // x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default CetakLaporanTambahBarangGlobalJenis;\r\n// import jsPDF from \"jspdf\";\r\n// import \"jspdf-autotable\";\r\n// import { getToday } from \"../../../../components/helpers/function\";\r\n// // Date Fns is used to format the dates we receive\r\n\r\n// // define a generatePDF function that accepts a tickets argument\r\n// const CetakLaporanTambahBarangGlobalJenis = (data = \"\", username = \"\", kode_baki = \"\") => {\r\n//   const doc = new jsPDF(\"l\");\r\n//   doc.setFontSize(15);\r\n//   doc.text(\"LAPORAN  BARANG DETAIL\", 14, 15);\r\n//   doc.setFontSize(10);\r\n//   doc.setProperties({\r\n//     title: \"LAPORAN  BARANG DETAIL\",\r\n//   });\r\n//   //row 1\r\n//   doc.text(`Kode Baki : ${kode_baki}`, 14, 23);\r\n//   let tableRows = [];\r\n//   let finalY = 10;\r\n//   let footRows = [];\r\n//   let total = 0;\r\n//   let sub_qty = 0;\r\n//   let sub_brt = 0;\r\n//   let tableColumn = [\r\n//     \"NO\",\r\n//     \"KODE BARANG\",\r\n//     \"KODE BARCODE\",\r\n//     \"KODE INTERN\",\r\n//     \"KODE GUDANG\",\r\n//     \"NAMA BARANG\",\r\n//     \"BERAT\",\r\n//     \"NAMA ATRIBUTE\",\r\n//     \"BERAT ATRIBUTE\",\r\n//     \"JUMLAH\",\r\n//   ];\r\n\r\n//   // console.log(JSON.stringify(data));\r\n//   // localStorage.setItem('hasil',JSON.stringify(data));\r\n//   data.forEach((item, index) => {\r\n//     // item.list_barang.forEach((barang, index) => {\r\n//     let rows = [\r\n//       ++index,\r\n//       item.kode_barang,\r\n//       item.kode_barcode,\r\n//       item.kode_intern,\r\n//       item.kode_gudang,\r\n//       item.nama_barang,\r\n//       item.berat,\r\n//       item.nama_atribut,\r\n//       item.berat_atribut,\r\n//       item.stock_on_hand,\r\n//     ];\r\n//     total = index;\r\n//     sub_qty = sub_qty + parseFloat(item.stock_on_hand);\r\n//     sub_brt = sub_brt + parseFloat(item.berat);\r\n//     tableRows.push(rows);\r\n//     let footer = [\r\n//       \"\",\r\n//       \"\",\r\n//       \"\",\r\n//       \"\",\r\n//       \"Sub Total\",\r\n//       \"\",\r\n//       `${sub_brt.toFixed(3)}`,\r\n//       \"\",\r\n//       \"\",\r\n//       `${sub_qty}`,\r\n//     ];\r\n//     footRows.push(footer);\r\n//     doc.autoTable(tableColumn, tableRows, {\r\n//       startY: index === 0 ? 35 : finalY + 15,\r\n//         theme: \"plain\",\r\n//       foot: footRows,\r\n//       rowPageBreak: \"avoid\",\r\n//       pageBreak: \"avoid\",\r\n//       bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n//       headStyles: {\r\n//         lineWidth: 0.02,\r\n//         lineColor: \"#000\",\r\n//         fillColor: [187, 187, 187],\r\n//       },\r\n//       // theme: \"\",\r\n//     });\r\n//     finalY = doc.lastAutoTable.finalY + 10;\r\n//     tableRows = [];\r\n//   });\r\n//   // let footer = [\r\n//   //   \"\",\r\n//   //   \"\",\r\n//   //   \"\",\r\n//   //   \"Total Barang : \",\r\n//   //   \"\" + parseFloat(total).toLocaleString(\"kr-KO\"),\r\n//   // ];\r\n//   // tableRows.push(footer);\r\n\r\n//   doc.text(`Total Barang\t: ${total}`, 14, finalY + 5);\r\n//   doc.text(`User\t             : ${username}`, 14, finalY + 10);\r\n//   doc.text(`Tgl Cetak             : ${getToday()}`, 14, finalY + 16);\r\n\r\n//   // doc.autoPrint();\r\n//   // doc.save(`Laporan BARANG DETAIL.pdf`);\r\n//   var string = doc.output(\"datauristring\");\r\n//   var x = window.open();\r\n//   x.document.open();\r\n//   x.document.write(\r\n//     \"<html><head><title>LAPORAN  BARANG DETAIL</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n//       string +\r\n//       \"></embed></body></html>\"\r\n//   );\r\n//   x.document.close();\r\n// };\r\n\r\n// export default CetakLaporanTambahBarangGlobalJenis;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\r\nimport {\r\n  getDataBaki,\r\n  getDataJenis,\r\n} from \"../../../../actions/datamaster_action\";\r\nimport LaporanDetailBarangExel from \"./exel/LaporanTambahBarangExel\";\r\nimport Tabel from \"../../../../components/helpers/tabel\";\r\nimport CetakLaporanTambahBarang from \"./pdf/CetakLaporanTambahBarang\";\r\nimport Loading from \"react-fullscreen-loading\";\r\nimport {\r\n  InputDate,\r\n  ReanderSelect,\r\n  SkeletonLoading,\r\n} from \"../../../../components/helpers/field\";\r\nimport {\r\n  NotifError,\r\n  ToastNotification,\r\n} from \"../../../../components/helpers/notification\";\r\nimport {\r\n  formatDate,\r\n  getTglSystem,\r\n  localStorageencryp,\r\n} from \"../../../../components/helpers/function\";\r\nimport moment from \"moment\";\r\nimport { getData } from \"../../../../config/axios\";\r\nimport CetakLaporanTambahBarangGlobalBaki from \"./pdf/CetakLaporanTambahBarangGlobalBaki\";\r\nimport LaporanTambahBarangExelGlobalBaki from \"./exel/LaporanTambahBarangExelGlobalBaki\";\r\nimport LaporanTambahBarangExelGlobalJenis from \"./exel/LaporanTambahBarangExelGlobalJenis\";\r\nimport CetakLaporanTambahBarangGlobalJenis from \"./pdf/CetakLaporanTambahBarangGlobalJenis\";\r\n\r\nclass HeadFilterLaporan extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      data_per_baki: [],\r\n      data_per_jenis: [],\r\n      table_per_baki: false,\r\n      table_per_jenis: false,\r\n      isLoading: false,\r\n    };\r\n    this.setStartDate = this.setStartDate.bind(this);\r\n    this.setLastDate = this.setLastDate.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getDataBaki());\r\n    this.props.dispatch(getDataJenis());\r\n    this.props.change('kode_toko',\"ALL\")\r\n    this.props.change('kode_dept', \"ALL\")\r\n    this.props.change(\"tgl_awal\",getTglSystem())\r\n    this.props.change(\"tgl_akhir\",getTglSystem())\r\n  }\r\n  setStartDate(date) {\r\n    this.setState({\r\n      tgl_awal: new Date(date),\r\n    });\r\n  }\r\n  setLastDate(date) {\r\n    if (new Date(date) > new Date()) {\r\n      ToastNotification(\"info\", \"Tanggal tidak boleh lebih dari hari ini\");\r\n      return false;\r\n    }\r\n    this.setState({\r\n      tgl_akhir: new Date(date),\r\n    });\r\n  }\r\n  exportPdf() {\r\n    CetakLaporanTambahBarang(this.props.data);\r\n    this.props.change(\"kode_toko\", \"ALL\");\r\n    this.props.change(\"kode_dept\", \"ALL\");\r\n  }\r\n\r\n  exportPdfGlobalBaki() {\r\n    CetakLaporanTambahBarangGlobalBaki(this.state.data_per_baki);\r\n  }\r\n\r\n  exportPdfGlobalJenis() {\r\n    CetakLaporanTambahBarangGlobalJenis(this.state.data_per_jenis);\r\n  }\r\n\r\n  GlobalPerBaki() {\r\n    let data_post = {\r\n      tgl_awal: formatDate(\r\n        moment(new Date(this.props.tgl_awal || getTglSystem())).format(\r\n          \"YYYY-MM-DD\"\r\n        )\r\n      ),\r\n      tgl_akhir: formatDate(\r\n        moment(new Date(this.props.tgl_akhir || getTglSystem())).format(\r\n          \"YYYY-MM-DD\"\r\n        )\r\n      ),\r\n    };\r\n    this.setState({ isLoading: true });\r\n    getData(\r\n      `barang/tambah-barangs/global-per-baki?tanggal[gte]=${data_post.tgl_awal}&tanggal[lte]=${data_post.tgl_akhir}`\r\n    )\r\n      .then((res) => {\r\n        if (res.data.length === 0) {\r\n          this.setState({\r\n            export: false,\r\n            LaporanBarangDetail: [],\r\n            isLoading: false,\r\n          });\r\n          ToastNotification(\"info\", \"Laporan Tambah Barang Tidak Tersedia\");\r\n        } else {\r\n          ToastNotification(\"success\", \"Laporan Tambah Barang Tersedia\");\r\n          localStorageencryp(\"tgl_laporan\", JSON.stringify(data_post));\r\n\r\n          this.setState({\r\n            isLoading: false,\r\n            export: true,\r\n            data_per_baki: res.data,\r\n            table_per_baki: true,\r\n            table_per_jenis: false,\r\n            table_per_normal: false,\r\n          });\r\n        }\r\n      })\r\n      .then(() => {\r\n        this.setState({ isLoading: false });\r\n      })\r\n      .catch((error) => this.errorHandling(error));\r\n  }\r\n\r\n  GlobalPerJenis() {\r\n    let data_post = {\r\n      tgl_awal: formatDate(\r\n        moment(new Date(this.props.tgl_awal || getTglSystem())).format(\r\n          \"YYYY-MM-DD\"\r\n        )\r\n      ),\r\n      tgl_akhir: formatDate(\r\n        moment(new Date(this.props.tgl_akhir || getTglSystem())).format(\r\n          \"YYYY-MM-DD\"\r\n        )\r\n      ),\r\n    };\r\n    this.setState({ isLoading: true });\r\n    getData(\r\n      `barang/tambah-barangs/global-per-jenis?tanggal[gte]=${data_post.tgl_awal}&tanggal[lte]=${data_post.tgl_akhir}`\r\n    )\r\n      .then((res) => {\r\n        if (res.data.length === 0) {\r\n          this.setState({\r\n            export: false,\r\n            LaporanBarangDetail: [],\r\n            isLoading: false,\r\n          });\r\n          ToastNotification(\"info\", \"Laporan Tambah Barang Tidak Tersedia\");\r\n        } else {\r\n          ToastNotification(\"success\", \"Laporan Tambah Barang Tersedia\");\r\n          localStorageencryp(\"tgl_laporan\", JSON.stringify(data_post));\r\n\r\n          this.setState({\r\n            isLoading: false,\r\n            export: true,\r\n            data_per_jenis: res.data,\r\n            table_per_jenis: true,\r\n            table_per_baki: false,\r\n          });\r\n        }\r\n      })\r\n      .then(() => {\r\n        this.setState({ isLoading: false });\r\n      })\r\n      .catch((error) => this.errorHandling(error));\r\n  }\r\n\r\n  errorHandling(err) {\r\n    NotifError(err);\r\n    this.setState({ isLoading: false });\r\n  }\r\n\r\n  render() {\r\n    let databaki = [\r\n      {\r\n        value: \"ALL\",\r\n        name: \"SEMUA\",\r\n      },\r\n    ];\r\n    this.props.databaki.forEach((list) => {\r\n      let data = {\r\n        value: list.kode_baki,\r\n        name: list.kode_baki + \" - \" + list.nama_baki,\r\n      };\r\n      databaki.push(data);\r\n    });\r\n    let dataJenis = [\r\n      {\r\n        value: \"ALL\",\r\n        name: \"SEMUA\",\r\n      },\r\n    ];\r\n    this.props.dataJenis.forEach((list) => {\r\n      let data = {\r\n        value: list.kode_dept,\r\n        name: list.kode_dept + \" - \" + list.nama_dept,\r\n      };\r\n      dataJenis.push(data);\r\n    });\r\n    return (\r\n      <>\r\n        <form\r\n          onSubmit={(data) => this.props.handleSubmit(data)}\r\n          autoComplete=\"off\"\r\n          onKeyPress={(e) => {\r\n            e.key === \"Enter\" && e.preventDefault();\r\n          }}\r\n        >\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-3\">\r\n              <Field\r\n                name=\"tgl_awal\"\r\n                component={InputDate}\r\n                label=\"Tanggal Dari\"\r\n                type=\"text\"\r\n                defaultValue={getTglSystem()}\r\n                selected={this.state.tgl_awal}\r\n                onChange={(date) => this.setStartDate(date)}\r\n                placeholder=\"Masukan Tanggal Dari\"\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-3\">\r\n              <Field\r\n                name=\"tgl_akhir\"\r\n                component={InputDate}\r\n                type=\"text\"\r\n                defaultValue={getTglSystem()}\r\n                selected={this.state.tgl_akhir}\r\n                onChange={(date) => this.setLastDate(date)}\r\n                label=\"Tanggal Akhir\"\r\n                placeholder=\"Masukan Tanggal Akhir\"\r\n              />\r\n            </div>\r\n            <div className=\"col-3\">\r\n              {this.state.loading === false ? (\r\n                <Field\r\n                  label=\"Jenis\"\r\n                  name=\"kode_dept\"\r\n                  options={dataJenis}\r\n                  placeholder={\"Silahkan Pilih Kode Jenis\"}\r\n                  component={ReanderSelect}\r\n                />\r\n              ) : (\r\n                <SkeletonLoading label=\"Kode Jenis\" />\r\n              )}\r\n            </div>\r\n            <div className=\"col-3\">\r\n              {this.state.loading === false ? (\r\n                <Field\r\n                  label=\"Baki\"\r\n                  name=\"kode_toko\"\r\n                  options={databaki}\r\n                  placeholder={\"Silahkan Pilih Kode Baki\"}\r\n                  component={ReanderSelect}\r\n                />\r\n              ) : (\r\n                <SkeletonLoading label=\"Kode Baki\" />\r\n              )}\r\n            </div>\r\n            <div className=\"col-4 mb-2\">\r\n              <label> &nbsp; </label>\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.submitting}\r\n                type=\"submit\"\r\n                onClick={() =>\r\n                  this.setState({\r\n                    table_per_normal: true,\r\n                    table_per_baki: false,\r\n                    table_per_jenis: false,\r\n                  })\r\n                }\r\n              >\r\n                {this.props.isLoading ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Memfilter\r\n                  </>\r\n                ) : (\r\n                  \"Lihat Laporan\"\r\n                )}\r\n              </button>\r\n            </div>\r\n            <div className=\"col-4 mb-2\">\r\n              <label> &nbsp; </label>\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.submitting}\r\n                type=\"button\"\r\n                onClick={() => this.GlobalPerBaki()}\r\n              >\r\n                {this.state.isLoading ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Memfilter\r\n                  </>\r\n                ) : (\r\n                  \"Global Per baki\"\r\n                )}\r\n              </button>\r\n            </div>\r\n            <div className=\"col-4 mb-2\">\r\n              <label> &nbsp; </label>\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.submitting}\r\n                type=\"button\"\r\n                onClick={() => this.GlobalPerJenis()}\r\n              >\r\n                {this.state.isLoading ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Memfilter\r\n                  </>\r\n                ) : (\r\n                  \"Global Per Jenis\"\r\n                )}\r\n              </button>\r\n            </div>\r\n            <div className=\"col-12\">\r\n              {this.state.table_per_baki ? (\r\n                <Tabel\r\n                  keyField=\"kode_barcode\"\r\n                  data={this.state.data_per_baki}\r\n                  columns={this.props.columns_per_baki}\r\n                  empty={true}\r\n                  textEmpty=\"Data Laporan Barang Global Per Baki Kosong\"\r\n                />\r\n              ) : this.state.table_per_jenis ? (\r\n                <Tabel\r\n                  keyField=\"kode_barcode\"\r\n                  data={this.state.data_per_jenis}\r\n                  columns={this.props.columns_per_jenis}\r\n                  empty={true}\r\n                  textEmpty=\"Data Laporan Barang Detail Kosong\"\r\n                />\r\n              ) : (\r\n                <Tabel\r\n                  keyField=\"kode_barcode\"\r\n                  data={this.props.data}\r\n                  columns={this.props.columns}\r\n                  empty={true}\r\n                  textEmpty=\"Data Laporan Barang Detail Kosong\"\r\n                />\r\n              )}\r\n            </div>\r\n            {this.props.export ? (\r\n              this.state.table_per_normal ? (\r\n                <>\r\n                  <div className=\"col-lg-6\">\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => this.exportPdf()}\r\n                      className=\"btn btn-warning btn-block\"\r\n                    >\r\n                      {\" \"}\r\n                      Export PDF{\" \"}\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"col-lg-6\">\r\n                    <LaporanDetailBarangExel\r\n                      data={this.props.data}\r\n                      kode_baki={this.props.kode_baki}\r\n                    />\r\n                  </div>\r\n                </>\r\n              ) : null\r\n            ) : null}\r\n            {this.state.table_per_baki ? (\r\n              <>\r\n                <div className=\"col-lg-6\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => this.exportPdfGlobalBaki()}\r\n                    className=\"btn btn-warning btn-block\"\r\n                  >\r\n                    {\" \"}\r\n                    Export PDF{\" \"}\r\n                  </button>\r\n                </div>\r\n                <div className=\"col-lg-6\">\r\n                  <LaporanTambahBarangExelGlobalBaki\r\n                    data={this.state.data_per_baki}\r\n                    kode_baki={this.props.kode_baki}\r\n                  />\r\n                </div>\r\n              </>\r\n            ) : null}\r\n            {this.state.table_per_jenis ? (\r\n              <>\r\n                <div className=\"col-lg-6\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => this.exportPdfGlobalJenis()}\r\n                    className=\"btn btn-warning btn-block\"\r\n                  >\r\n                    {\" \"}\r\n                    Export PDF{\" \"}\r\n                  </button>\r\n                </div>\r\n                <div className=\"col-lg-6\">\r\n                  <LaporanTambahBarangExelGlobalJenis\r\n                    data={this.state.data_per_jenis}\r\n                    kode_baki={this.props.kode_baki}\r\n                  />\r\n                </div>\r\n              </>\r\n            ) : null}\r\n          </div>\r\n          {this.props.isLoading ? (\r\n            <Loading\r\n              loading\r\n              background=\"rgba(0, 0, 0, 0.35)\"\r\n              loaderColor=\"rgba(94, 147, 117, 1)\"\r\n            />\r\n          ) : null}\r\n          {this.state.isLoading ? (\r\n            <Loading\r\n              loading\r\n              background=\"rgba(0, 0, 0, 0.35)\"\r\n              loaderColor=\"rgba(94, 147, 117, 1)\"\r\n            />\r\n          ) : null}\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// HeadFilterLaporan = reduxForm({\r\n//   form: \"HeadFilterLaporan\",\r\n//   enableReinitialize: true,\r\n// })(HeadFilterLaporan);\r\n// export default connect((state) => {\r\n//   return {\r\n//     databaki: state.datamaster.getDataBaki,\r\n//     dataJenis: state.datamaster.getDataJenis,\r\n//     initialValues: {\r\n//       tgl_awal: getTglSystem(),\r\n//       tgl_akhir: getTglSystem(),\r\n//     },\r\n//   };\r\n// })(HeadFilterLaporan);\r\n\r\nHeadFilterLaporan = reduxForm({\r\n  form: \"HeadFilterLaporan\",\r\n  enableReinitialize: true,\r\n})(HeadFilterLaporan);\r\nconst selector = formValueSelector(\"HeadFilterLaporan\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  return {\r\n    databaki: state.datamaster.getDataBaki,\r\n    dataJenis: state.datamaster.getDataJenis,\r\n    tgl_awal: selector(state, \"tgl_awal\"),\r\n    tgl_akhir: selector(state, \"tgl_akhir\"),\r\n    initialValues: {\r\n      tgl_awal: getTglSystem(),\r\n      tgl_akhir: getTglSystem(),\r\n    },\r\n  };\r\n})(HeadFilterLaporan);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Panel, PanelHeader } from \"../../../../components/panel/panel.jsx\";\r\nimport { connect } from \"react-redux\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { formatDate, formatGram, getTglSystem, localStoragedecryp, localStorageencryp } from \"../../../../components/helpers/function.jsx\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {\r\n  NotifError,\r\n  ToastNotification,\r\n} from \"../../../../components/helpers/notification.jsx\";\r\n// import CetakLaporanDetailBarang from \"./CetakLaporanDetailBarang.jsx\";\r\n// import FormFilter from \"./FormFilter.jsx\";\r\nimport {  postDataNoTImeOut } from \"../../../../config/axios.jsx\";\r\nimport HeadFilterLaporan from \"./HeadFilterLaporan.jsx\";\r\nimport moment from \"moment\";\r\n// import LaporanDetailexel from \"./LaporanDetailExel.jsx\";\r\nconst maptostate = (state) => {\r\n  return {\r\n    hideModal: state.datamaster.modalDialog,\r\n  };\r\n};\r\n\r\nclass FormLaporanTambahBarang extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false,\r\n      modalDialog: false,\r\n      isLoading: false,\r\n      export: false,\r\n      kode_baki: [],\r\n      LaporanBarangDetail: false,\r\n      columns: [\r\n        {\r\n          dataField: \"kode_barcode\",\r\n          text: \"Kode Barcode\",\r\n        },\r\n        {\r\n          dataField: \"kode_gudang\",\r\n          text: \"Kode Gudang\",\r\n        },\r\n\r\n        {\r\n          dataField: \"kode_toko\",\r\n          text: \"Kode Baki\",\r\n        },\r\n     \r\n        {\r\n          dataField: \"kode_group\",\r\n          text: \"Kode Group\",\r\n        },\r\n        {\r\n          dataField: \"kode_dept\",\r\n          text: \"Kode Jenis\",\r\n        },\r\n        {\r\n          dataField: \"nama_barang\",\r\n          text: \"Nama Barang\",\r\n        },\r\n        {\r\n          dataField: \"nama_atribut\",\r\n          text: \"Nama Atribut\",\r\n        },\r\n        // {\r\n        //   dataField: \"berat_tambah\",\r\n        //   text: \"Berat Tambah\",\r\n        //   headerClasses: 'text-right',\r\n        //   formatter: (cell) => {\r\n        //     return <div className=\"text-right\"> {formatGram(cell, 3)} </div>;\r\n        //   },\r\n        // },\r\n        {\r\n          dataField: \"berat\",\r\n          text: \"Berat\",\r\n          headerClasses: 'text-right',\r\n          formatter: (cell) => {\r\n            return <div className=\"text-right\"> {formatGram(cell, 3)} </div>;\r\n          },\r\n        },\r\n        {\r\n          dataField: \"berat_asli\",\r\n          text: \"Berat Asli\",\r\n          headerClasses: 'text-right',\r\n          formatter: (cell) => {\r\n            return <div className=\"text-right\"> {formatGram(cell, 3)} </div>;\r\n          },\r\n        },\r\n       \r\n        {\r\n          dataField: \"berat_atribut\",\r\n          text: \"Berat Atribut\",\r\n          headerClasses: 'text-right',\r\n          formatter: (cell) => {\r\n            return <div className=\"text-right\"> {formatGram(cell, 3)} </div>;\r\n          },\r\n        },\r\n        {\r\n          dataField: \"harga_jual\",\r\n          text: \"Harga Jual\",\r\n          headerClasses: 'text-right',\r\n          formatter: (data) => {\r\n            return <div className=\"text-right\"> {parseFloat(data).toLocaleString(\"kr-KO\")}</div>;\r\n          },\r\n        },\r\n      ],\r\n      columns_per_baki : [\r\n        {\r\n          dataField: \"kode_toko\",\r\n          text: \"Kode Baki\",\r\n        },\r\n        {\r\n          dataField: \"nama_toko\",\r\n          text: \"Nama Baki\",\r\n        },\r\n        {\r\n          dataField: \"stock_tambah\",\r\n          text: \"Tambah Ptg\",\r\n          headerClasses: 'text-right',\r\n          formatter: (cell) => {\r\n            return <div className=\"text-right\"> {cell} </div>;\r\n          },\r\n        },\r\n        {\r\n          dataField: \"berat_tambah\",\r\n          text: \"Tambah Berat\",\r\n          headerClasses: 'text-right',\r\n          formatter: (cell) => {\r\n            return <div className=\"text-right\"> {formatGram(cell, 3)} </div>;\r\n          },\r\n        },\r\n        {\r\n          dataField: \"berat_asli_tambah\",\r\n          text: \"Tambah Berat Asli\",\r\n          headerClasses: 'text-right',\r\n          formatter: (cell) => {\r\n            return <div className=\"text-right\"> {formatGram(cell, 3)} </div>;\r\n          },\r\n        },\r\n\r\n      ],\r\n      columns_per_jenis : [\r\n        {\r\n          dataField: \"kode_dept\",\r\n          text: \"Kode Jenis\",\r\n        },\r\n        {\r\n          dataField: \"nama_dept\",\r\n          text: \"Nama Jenis\",\r\n        },\r\n        {\r\n          dataField: \"stock_tambah\",\r\n          text: \"Tambah Ptg\",\r\n          headerClasses: 'text-right',\r\n          formatter: (cell) => {\r\n            return <div className=\"text-right\"> {cell} </div>;\r\n          },\r\n        },\r\n        {\r\n          dataField: \"berat_tambah\",\r\n          text: \"Tambah Berat\",\r\n          headerClasses: 'text-right',\r\n          formatter: (cell) => {\r\n            return <div className=\"text-right\"> {formatGram(cell, 3)} </div>;\r\n          },\r\n        },\r\n        {\r\n          dataField: \"berat_asli_tambah\",\r\n          text: \"Tambah Berat Asli\",\r\n          headerClasses: 'text-right',\r\n          formatter: (cell) => {\r\n            return <div className=\"text-right\"> {formatGram(cell, 3)} </div>;\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    let data = JSON.parse(localStoragedecryp(\"userdata\"));\r\n    this.setState({ username: data.user_id });\r\n  }\r\n  handleSubmit(data) {\r\n    let data_post = {\r\n      tgl_awal: formatDate(moment(new Date(data.tgl_awal || getTglSystem())).format('YYYY-MM-DD')),\r\n      tgl_akhir: formatDate(moment(new Date(data.tgl_akhir || getTglSystem())).format('YYYY-MM-DD')),\r\n    };\r\n    this.setState({ isLoading: true, kode_toko: data.kode_baki });\r\n    postDataNoTImeOut(`barang/tambah-barangs?tanggal[gte]=${data_post.tgl_awal}&tanggal[lte]=${data_post.tgl_akhir}&kode_dept=${data.kode_dept}&kode_toko=${data.kode_toko}`)\r\n      .then((res) => {\r\n        if (res.data.length === 0) {\r\n          this.setState({\r\n            export: false,\r\n            LaporanBarangDetail: [],\r\n          });\r\n          ToastNotification(\"info\", \"Laporan Tambah Barang Tidak Tersedia\");\r\n        } else {\r\n          ToastNotification(\"success\", \"Laporan Tambah Barang Tersedia\");\r\n          localStorageencryp('tgl_laporan', JSON.stringify(data_post))\r\n          this.setState({\r\n            export: true,\r\n            LaporanBarangDetail: res.data,\r\n          });\r\n        }\r\n      })\r\n      .then(() => {\r\n        this.setState({ isLoading: false });\r\n      })\r\n      .catch((error) => this.errorHandling(error));\r\n  }\r\n  errorHandling(err) {\r\n    NotifError(err);\r\n    this.setState({ isLoading: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Laporan Tambah Barang</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Laporan Tambah Barang Detail</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Laporan Tambah Barang</h1>\r\n        <Panel>\r\n          <PanelHeader>Filter Laporan</PanelHeader>\r\n          <br />\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <HeadFilterLaporan\r\n                  kode_baki={this.state.kode_baki}\r\n                  export={this.state.export}\r\n                  columns={this.state.columns}\r\n                  data={this.state.LaporanBarangDetail}\r\n                  isLoading={this.state.isLoading}\r\n                  columns_per_baki={this.state.columns_per_baki}\r\n                  columns_per_jenis ={this.state.columns_per_jenis}\r\n                  onSubmit={(data) => this.handleSubmit(data)}\r\n                />\r\n              </div>\r\n        \r\n            </div>\r\n          </div>\r\n          <br />\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFormLaporanTambahBarang = reduxForm({\r\n  form: \"FormLaporanTambahBarang\",\r\n  enableReinitialize: true,\r\n})(FormLaporanTambahBarang);\r\nexport default connect(maptostate, null)(FormLaporanTambahBarang);\r\n"],"sourceRoot":""}