{"version":3,"sources":["pages/utility/CetakBarcode/CetakBarcode.jsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","_components_helpers_notification__WEBPACK_IMPORTED_MODULE_2__","_components_panel_panel__WEBPACK_IMPORTED_MODULE_3__","_config_axios__WEBPACK_IMPORTED_MODULE_4__","_components_helpers_tabel__WEBPACK_IMPORTED_MODULE_5__","redux_form__WEBPACK_IMPORTED_MODULE_6__","redux_form__WEBPACK_IMPORTED_MODULE_7__","react_redux__WEBPACK_IMPORTED_MODULE_8__","_actions_datamaster_action__WEBPACK_IMPORTED_MODULE_9__","_components_helpers_field__WEBPACK_IMPORTED_MODULE_10__","_components_helpers_function__WEBPACK_IMPORTED_MODULE_11__","_components_helpers_library__WEBPACK_IMPORTED_MODULE_12__","CetakBarcode","React","Component","constructor","props","super","this","toggle","bind","state","activeTab","loading","isLoading","kode_baki","kode_gudang","databarang","columns","dataField","text","tab","setState","componentDidMount","setItem","dispatch","getDataGudang","getDataBaki","setSystem","data","hasil","key","value","type","postData2","then","ToastNotification","getBarcode","getData2","concat","res","length","catch","err","print","JSON","parse","localStorage","getItem","postData","hasil_print","no","map","index","kode_barcode","document","getElementById","TextFilenotapesanan","element","createElement","file","Blob","href","URL","createObjectURL","download","body","appendChild","click","render","dataGudang","name","forEach","list","nama_gudang","push","databaki","nama_baki","selectedRow","mode","clickToSelect","selectColumnPosition","onSelect","row","isSelect","rowIndex","e","nama_barang","berat","kode_intern","kode_dept","cek","findIndex","stringify","hasil_cek","splice","onSelectAll","kadar_cetak","a","className","to","style","display","id","rows","cols","label","options","placeholder","onChange","getDataBakiByGudang","component","ReanderSelect","htmlFor","onClick","Fragment","selectRow","keyField","empty","background","loaderColor","reduxForm","form","enableReinitialize","connect","datamaster","dataGroup","GetDataGroup","dataJenis","getDataJenis"],"mappings":"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","file":"static/js/120.a87162e9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ToastNotification } from \"../../../components/helpers/notification\";\r\nimport { Panel, PanelHeader } from \"../../../components/panel/panel\";\r\nimport { getData2, postData, postData2 } from \"../../../config/axios\";\r\nimport Tabel from \"../../../components/helpers/tabel\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getDataBaki,\r\n  getDataBakiByGudang,\r\n} from \"../../../actions/datamaster_action\";\r\nimport { getDataGudang } from \"../../../actions/datamaster_action\";\r\nimport {\r\n  ReanderSelect,\r\n  SkeletonLoading,\r\n} from \"../../../components/helpers/field\";\r\n// import { getListBarangBarcode } from \"../../../actions/databarang_action\";\r\nimport { setItem } from \"../../../components/helpers/function\";\r\nimport { Loading } from \"../../../components/helpers/library\";\r\n\r\nclass CetakBarcode extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n\r\n    this.state = {\r\n      activeTab: \"1\",\r\n      loading: false,\r\n      isLoading: false,\r\n      kode_baki: \"\",\r\n      kode_gudang: \"\",\r\n      databarang: [],\r\n      columns: [\r\n        {\r\n          dataField: \"kode_barcode\",\r\n          text: \"Kode Barcode \",\r\n        },\r\n        {\r\n          dataField: \"nama_barang\",\r\n          text: \"Nama Barang \",\r\n        },\r\n        {\r\n          dataField: \"kode_dept\",\r\n          text: \"Kode Jenis \",\r\n        },\r\n        {\r\n          dataField: \"berat\",\r\n          text: \"Berat \",\r\n        },\r\n        {\r\n          dataField: \"kode_intern\",\r\n          text: \"Kode Intern \",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  toggle(tab) {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({\r\n        activeTab: tab,\r\n      });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    setItem(\"cetak_barcode_selected\", []);\r\n    this.props.dispatch(getDataGudang());\r\n    this.props.dispatch(getDataBaki());\r\n  }\r\n  setSystem(data) {\r\n    let hasil = {\r\n      key: \"kategori_harga\",\r\n      value: data,\r\n      type: \"kategori_harga\",\r\n    };\r\n    postData2(\"para-system/\", hasil).then(() => {\r\n      ToastNotification(\"success\", \"Berhasil Setting System\");\r\n    });\r\n  }\r\n\r\n  getBarcode() {\r\n    // this.props.dispatch(getListBarangBarcode(this.state.kode_gudang, this.state.kode_baki))\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    getData2(\r\n      `tambah-barang?kode_gudang=${this.state.kode_gudang || \"ALL\"}&kode_toko=${\r\n        this.state.kode_baki || \"ALL\"\r\n      }`\r\n    )\r\n      .then((res) => {\r\n        // console.log(res.data);\r\n        if (res.data.length === 0) {\r\n          ToastNotification(\"info\", \"Data Yang Anda Cari Tidak Ada\");\r\n          this.setState({\r\n            isLoading: false,\r\n            databarang: [],\r\n          });\r\n        } else {\r\n          ToastNotification(\"success\", \"Data Barang Tersedia\");\r\n          this.setState({\r\n            isLoading: false,\r\n            databarang: res.data,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err);\r\n        ToastNotification(\"info\", \"Terjadi Kesalahan Saat Request Data\");\r\n        this.setState({\r\n          isLoading: false,\r\n          databarang: [],\r\n        });\r\n      });\r\n  }\r\n\r\n  print() {\r\n    let hasil = JSON.parse(localStorage.getItem(\"cetak_barcode_selected\")) || [];\r\n    if (hasil.length === 0) {\r\n      ToastNotification(\"info\", \"Silahkan pilih barcode terlebih dahulu\");\r\n    } else {\r\n    postData(\"tmp-barang\", hasil)\r\n      .then((res) => {\r\n        // console.log(\"\");\r\n        ToastNotification(\"success\", \"Data Berhasil Disimpan\");\r\n      })\r\n      .catch((err) => {\r\n        ToastNotification(\"info\", \"Data Gagal Disimpan\");\r\n      }); \r\n      // let panjang = hasil.length;\r\n      let hasil_print = ``;\r\n\r\n      // console.log(hasil);\r\n      let no = 1;\r\n      hasil.map((data, index) => {\r\n        if (hasil.length === 1) {\r\n          hasil_print = hasil_print + data.kode_barcode;\r\n        } else {\r\n          if (no === hasil.length) {\r\n            hasil_print = hasil_print + data.kode_barcode;\r\n          } else {\r\n            hasil_print = hasil_print + data.kode_barcode + ',';\r\n          }\r\n        }\r\n\r\n      \r\n        no++;\r\n\r\n      //   if (index % 2 === 0) {\r\n      //     hasil_print =\r\n      //       hasil_print + `\u001bA\u001bCB+19\u001bZ\u0003\u0002\u001bA\u001bCD200,3300\u001bZ\u0003\u0002\u001bA\u001bEX0\u001bAR\u001bA3H001V001\u001bCS2\u001b#E4A\u001bPM0\u001bPO3+00\u001bYE1\u001bIG1\u001bPH0\u001bA101920610\u001bZ\u0003\u0002\u001bA\u001bPS`;\r\n      //     hasil_print = hasil_print + `\u001b%0\u001bH0470\u001bV005\u001bL0101\u001bP02\u001bS${data.nama_barang}`;\r\n      //     hasil_print = hasil_print + `\u001b%0\u001bH0490\u001bV0025\u001bBG01045>I${data.kode_barcode}`;\r\n      //     hasil_print = hasil_print + `\u001b%0\u001bH0490\u001bV0075\u001bL0101\u001bP02\u001bS${data.kode_barcode}`;\r\n      //     hasil_print = hasil_print + `\u001b%0\u001bH0470\u001bV0100\u001bL0101\u001bP02\u001bS${data.kode_dept}`;\r\n      //     hasil_print = hasil_print + `\u001b%0\u001bH0470\u001bV0115\u001bL0102\u001bP02\u001bM${data.berat}Gr`;\r\n      //     hasil_print = hasil_print + `\u001b%0\u001bH0470\u001bV0165\u001bL0101\u001bP02\u001bS${data.kode_intern}`;\r\n      //   } else {\r\n      //     hasil_print = hasil_print + `\u001b%0\u001bH0016\u001bV0005\u001bL0101\u001bP02\u001bS${data.nama_barang}`;\r\n      //     hasil_print = hasil_print + `\u001b%0\u001bH0030\u001bV0025\u001bBG01045>I${data.kode_barcode}`;\r\n      //     hasil_print = hasil_print + `\u001b%0\u001bH0030\u001bV0075\u001bL0101\u001bP02\u001bS${data.kode_barcode}`;\r\n      //     hasil_print = hasil_print + `\u001b%0\u001bH0016\u001bV0100\u001bL0101\u001bP02\u001bS${data.kode_dept}`;\r\n      //     hasil_print = hasil_print + `\u001b%0\u001bH0016\u001bV0115\u001bL0102\u001bP02\u001bM${data.berat}Gr`;\r\n      //     hasil_print = hasil_print + `\u001b%0\u001bH0016\u001bV0165\u001bL0101\u001bP02\u001bS${data.kode_intern}`;\r\n      //     hasil_print = hasil_print + `\u0002\u001bA\u001b/\u001bCK1\u001bQ1\u001bCL0\u001bZ\u0003`;\r\n      //   }\r\n        return true;\r\n      });\r\n      // if (panjang % 2 === 1) {\r\n      //   hasil_print = hasil_print + `\u0002\u001bA\u001b/\u001bCK1\u001bQ1\u001bCL0\u001bZ\u0003`;\r\n      // }\r\n      // console.log(hasil_print);\r\n      document.getElementById(\"barcode\").value = hasil_print;\r\n        this.TextFilenotapesanan();\r\n    }\r\n  }\r\n  TextFilenotapesanan() {\r\n    const element = document.createElement(\"a\");\r\n    const file = new Blob([document.getElementById(\"barcode\").value], {\r\n      type: \"text/plain;charset=utf-8\",\r\n    });\r\n    element.href = URL.createObjectURL(file);\r\n    element.download = \"autoprint_barcode.txt\";\r\n    document.body.appendChild(element);\r\n    element.click();\r\n  }\r\n\r\n  render() {\r\n    let dataGudang = [\r\n      {\r\n        value: \"ALL\",\r\n        name: \"SEMUA\",\r\n      },\r\n    ];\r\n    this.props.dataGudang.forEach((list) => {\r\n      let data = {\r\n        value: list.kode_gudang,\r\n        name: list.kode_gudang + \" - \" + list.nama_gudang,\r\n      };\r\n      dataGudang.push(data);\r\n    });\r\n    let databaki = [\r\n      {\r\n        value: \"ALL\",\r\n        name: \"SEMUA\",\r\n      },\r\n    ];\r\n    this.props.databaki.forEach((list) => {\r\n      let data = {\r\n        value: list.kode_baki,\r\n        name: list.kode_baki + \" - \" + list.nama_baki,\r\n      };\r\n      databaki.push(data);\r\n    });\r\n    const selectedRow = {\r\n      mode: \"checkbox\",\r\n      clickToSelect: true,\r\n      selectColumnPosition: \"left\",\r\n      onSelect: (row, isSelect, rowIndex, e) => {\r\n        // console.log(isSelect);\r\n        if (isSelect === true) {\r\n          let hasil = {\r\n            kode_barcode: row.kode_barcode,\r\n            nama_barang: row.nama_barang,\r\n            berat: row.berat,\r\n            kode_intern: row.kode_intern,\r\n            kode_dept: row.kode_dept,\r\n            // kadar_cetak : row.kadar_cetak,\r\n          };\r\n          let cek =\r\n            JSON.parse(localStorage.getItem(\"cetak_barcode_selected\")) || [];\r\n          let hasil_cek = cek.findIndex(\r\n            (hasil) => hasil.kode_barcode === row.kode_barcode\r\n          );\r\n          if (hasil_cek === -1) {\r\n            cek.push(hasil);\r\n            localStorage.setItem(\"cetak_barcode_selected\", JSON.stringify(cek));\r\n          }\r\n        } else {\r\n          // console.log();\r\n          if (localStorage.getItem(\"cetak_barcode_selected\") === null) {\r\n          } else {\r\n            let cek =\r\n              JSON.parse(localStorage.getItem(\"cetak_barcode_selected\")) || [];\r\n            let hasil_cek = cek.findIndex(\r\n              (hasil) => hasil.kode_barcode === row.kode_barcode\r\n            );\r\n            let data = JSON.parse(\r\n              localStorage.getItem(\"cetak_barcode_selected\")\r\n            );\r\n            data.splice(hasil_cek, 1);\r\n            localStorage.setItem(\r\n              \"cetak_barcode_selected\",\r\n              JSON.stringify(data)\r\n            );\r\n          }\r\n        }\r\n      },\r\n      onSelectAll: (isSelect, data, e) => {\r\n        data.forEach((list, index) => {\r\n          if (isSelect === true) {\r\n            let hasil = {\r\n              kode_barcode: list.kode_barcode,\r\n              nama_barang: list.nama_barang,\r\n              berat: list.berat,\r\n              kode_intern: list.kode_intern,\r\n              kode_dept: list.kode_dept,\r\n              kadar_cetak: list.kadar_cetak,\r\n            };\r\n            let cek =\r\n              JSON.parse(localStorage.getItem(\"cetak_barcode_selected\")) || [];\r\n            let hasil_cek = cek.findIndex(\r\n              (hasil) => hasil.kode_barcode === list.kode_barcode\r\n            );\r\n            if (hasil_cek === -1) {\r\n              cek.push(hasil);\r\n              localStorage.setItem(\r\n                \"cetak_barcode_selected\",\r\n                JSON.stringify(cek)\r\n              );\r\n            }\r\n          } else {\r\n            if (localStorage.getItem(\"cetak_barcode_selected\") === null) {\r\n            } else {\r\n              let cek =\r\n                JSON.parse(localStorage.getItem(\"cetak_barcode_selected\")) ||\r\n                [];\r\n              let hasil_cek = cek.findIndex(\r\n                (hasil) => hasil.kode_barcode === list.kode_barcode\r\n              );\r\n              let data = JSON.parse(\r\n                localStorage.getItem(\"cetak_barcode_selected\")\r\n              );\r\n              data.splice(hasil_cek, 1);\r\n              localStorage.setItem(\r\n                \"cetak_barcode_selected\",\r\n                JSON.stringify(data)\r\n              );\r\n            }\r\n          }\r\n        });\r\n      },\r\n    };\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Dashboard</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item\">Cetak Barcode</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Cetak Barcode</h1>\r\n        <Panel>\r\n          <PanelHeader>Cetak Barcode</PanelHeader>\r\n          <br />\r\n          {/* Blank Page */}\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"d-none\">\r\n                <textarea\r\n                  style={{ display: \"none\" }}\r\n                  id=\"barcode\"\r\n                  rows=\"100\"\r\n                  cols=\"100\"\r\n                />\r\n              </div>\r\n              <div className=\"col-3\">\r\n                {this.state.loading === false ? (\r\n                  <Field\r\n                    label=\"Gudang\"\r\n                    name=\"kode_gudang\"\r\n                    options={dataGudang}\r\n                    placeholder={\"Silahkan Pilih Kode Baki\"}\r\n                    onChange={(e) => {\r\n                      if (e !== \"ALL\") {\r\n                        this.props.dispatch(getDataBakiByGudang(e));\r\n                      } else {\r\n                        this.props.dispatch(getDataBaki());\r\n                      }\r\n                      this.setState({\r\n                        kode_gudang: e,\r\n                      });\r\n                    }}\r\n                    component={ReanderSelect}\r\n                  />\r\n                ) : (\r\n                  <SkeletonLoading label=\"Kode Baki\" />\r\n                )}\r\n              </div>\r\n              <div className=\"col-3\">\r\n                {this.state.loading === false ? (\r\n                  <Field\r\n                    label=\"Kode Baki\"\r\n                    name=\"kode_baki\"\r\n                    options={databaki}\r\n                    onChange={(e) => {\r\n                      this.setState({\r\n                        kode_baki: e,\r\n                      });\r\n                    }}\r\n                    placeholder={\"Silahkan Pilih Kode Baki\"}\r\n                    component={ReanderSelect}\r\n                  />\r\n                ) : (\r\n                  <SkeletonLoading label=\"Kode Baki\" />\r\n                )}\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-6\">\r\n                    <label htmlFor=\"\">&nbsp;</label>\r\n                    <button\r\n                      className=\"btn btn-outline-secondary btn-block\"\r\n                      onClick={(data) => this.getBarcode(data)}\r\n                    >\r\n                      {this.state.isLoading ? (\r\n                        <>\r\n                          <i className=\"fas fa-spinner fa-spin\"></i> &nbsp;\r\n                          Sedang Mencari\r\n                        </>\r\n                      ) : (\r\n                        \"Cari Data\"\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"col-lg-6\">\r\n                    <label htmlFor=\"\">&nbsp;</label>\r\n                    <button\r\n                      className=\"btn btn-primary btn-block\"\r\n                      onClick={() => this.print()}\r\n                    >\r\n                      Print Barcode\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Tabel\r\n              selectRow={selectedRow}\r\n              keyField=\"kode_barcode\"\r\n              columns={this.state.columns}\r\n              data={this.state.databarang || []}\r\n              empty={true}\r\n            />\r\n          </div>\r\n          <br />\r\n        </Panel>\r\n        {/* End Tambah Blank Page  */}\r\n        {this.state.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCetakBarcode = reduxForm({\r\n  form: \"CetakBarcode\",\r\n  enableReinitialize: true,\r\n})(CetakBarcode);\r\nexport default connect((state) => {\r\n  return {\r\n    databaki: state.datamaster.getDataBaki,\r\n    dataGroup: state.datamaster.GetDataGroup,\r\n    dataJenis: state.datamaster.getDataJenis,\r\n    dataGudang: state.datamaster.getDataGudang,\r\n    // barangBarcode : state.databarang.barangBarcode\r\n  };\r\n})(CetakBarcode);\r\n"],"sourceRoot":""}