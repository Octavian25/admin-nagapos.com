{"version":3,"sources":["pages/Laporan/LaporanBarang/LaporanHancurBarang/exel/LaporanHancurBarangExel.jsx","pages/Laporan/LaporanBarang/LaporanHancurBarang/pdf/CetakLaporanHancurBarang.jsx","pages/Laporan/LaporanBarang/LaporanHancurBarang/HeadHancurBarang.jsx","pages/Laporan/LaporanBarang/LaporanHancurBarang/FormLaporanHancurBarang.jsx"],"names":["LaporanHancurBarangExel","Component","constructor","props","super","this","state","render","stock_on_hand","berat","berat_atribut","total_barang","data","forEach","barang","index","detail","item","length","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","rowkey","style","display","colSpan","localStoragedecryp","JSON","parse","tgl_awal","tgl_akhir","getUserdata","nama_toko","alamat_toko","backgroundColor","color","textAlign","map","no","key","row","kode_gudang","kode_baki","kode_barcode","nama_barang","kondisi_barang","nama_atribut","formatGram","CetakLaporanHancurBarang","doc","jsPDF","tableRows","finalY","grand_total_berat","grand_berat_atribut","setFontSize","text","jml_alamat","slice","setProperties","title","concat","i","total_berat","total_berat_atribut","rows","content","styles","halign","parseFloat","push","total","fillColor","textColor","printed","user_id","getToday","fontStyle","autoTable","head","body","startY","theme","rowPageBreak","margin","top","footStyles","fontSize","bodyStyles","headStyles","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","string","output","x","window","open","document","write","HeadHancurBarang","date","Date","setStartDate","bind","setLastDate","exportPdf","LaporanDataBarang","setState","databarang","element","columns","dataField","footerAttrs","footer","cell","num","headerClasses","formatter","columnData","reduce","acc","onSubmit","handleSubmit","autoComplete","Field","name","component","InputDate","label","type","selected","onChange","placeholder","value","isLoading","tabel","keyField","export","empty","textEmpty","onClick","exel_LaporanHancurBarangExel","loading_default","loading","background","loaderColor","reduxForm","form","enableReinitialize","validate","ValidasiTanggalLaporan","connect","initialValues","getTglSystem","FormLaporanHancurBarang","React","isEdit","modalDialog","username","data_post","formatDate","moment","format","postDataNoTImeOut","then","res","ToastNotification","localStorageencryp","stringify","catch","error","errorHandling","err","NotifError","react_router_dom","to","panel","LaporanHancurBarang_HeadHancurBarang","hideModal","datamaster"],"mappings":"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","file":"static/js/72.3ff56d3b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport { localStoragedecryp,formatGram, getUserdata } from \"../../../../../components/helpers/function\";\r\nclass LaporanHancurBarangExel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    let stock_on_hand = 0;\r\n    let berat = 0;\r\n    let berat_atribut = 0;\r\n    let total_barang = 0;\r\n    this.props.data.forEach((barang, index) => {\r\n      barang.detail.forEach((item, index) => {\r\n        stock_on_hand = stock_on_hand + item.stock_on_hand;\r\n        berat_atribut = berat_atribut + item.berat_atribut;\r\n        berat = berat + item.berat;\r\n      });\r\n      total_barang = total_barang + barang.detail.length;\r\n    });\r\n    return (\r\n      <>\r\n        <ReactHTMLTableToExcel\r\n          id=\"test-table-xls-button\"\r\n          className=\"btn btn-success btn-block\"\r\n          table=\"table-to-xls\"\r\n          filename=\"Laporan Hancur Barang\"\r\n          sheet=\"Laporan Hancur Barang\"\r\n          buttonText=\"Export Exel\"\r\n        />\r\n        <table\r\n          rowkey=\"kode_member\"\r\n          id=\"table-to-xls\"\r\n          style={{ display: \"none\" }}\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th colSpan=\"8\"> Laporan Hancur Barang </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"8\"> Periode </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"8\">\r\n                {\" \"}\r\n                {localStoragedecryp(\"tgl_laporan\").length === 0\r\n                  ? null\r\n                  : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n                    \" s/d \" +\r\n                    JSON.parse(localStoragedecryp(\"tgl_laporan\"))\r\n                      .tgl_akhir}{\" \"}\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"8\"> TOKO :  {getUserdata().nama_toko} </th>\r\n            </tr>\r\n           \r\n            <tr>\r\n              <th colSpan=\"8\"> ALAMAT :  {getUserdata().alamat_toko} </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"8\"></th>\r\n            </tr>\r\n            <tr>\r\n            <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                NO\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                KODE GUDANG\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                KODE BAKI\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                KODE BARCODE\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                NAMA BARANG\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                KONDISI BARANG\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                NAMA ATRIBUT\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"right\" }}>\r\n                BERAT ATRIBUT\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"right\" }}>\r\n                BERAT\r\n              </th>\r\n\r\n              \r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.data.map((item, no) => (\r\n              <div key={no}>\r\n                {item.detail.map((row, index) => (\r\n                  <tr key={index}>\r\n                    <td> {++no}</td>\r\n                    <td> {row.kode_gudang}</td>\r\n                    <td> {row.kode_baki}</td>\r\n                    <td>&nbsp;{row.kode_barcode}</td>\r\n                    <td> {row.nama_barang}</td>\r\n                    <td> {row.kondisi_barang}</td>\r\n                    <td> {row.nama_atribut}</td>\r\n                    <td style={{textAlign : \"right\"}}> {formatGram(row.berat_atribut,2)}</td>\r\n                    <td style={{textAlign : \"right\"}}> {formatGram(row.berat,2)}</td>\r\n                  </tr>\r\n                ))}\r\n                </div>\r\n            ))}\r\n          </tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <td\r\n                colSpan=\"5\"\r\n                style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"center\" }}\r\n              >\r\n                {\" \"}\r\n                Total\r\n              </td>\r\n            \r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}> </td>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}> </td>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\", textAlign: \"right\" }}> {formatGram(berat_atribut,2)} </td>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"right\" }}> {formatGram(berat,2)} </td>\r\n\r\n              {/* <th\r\n              colSpan=\"8\"\r\n              style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"left\" }}\r\n            >\r\n              Total Brang : {total_barang} Pcs<br />\r\n              Total Berat : {berat.toFixed(3)} <br />\r\n              Total Berat Atribut : {berat_atribut.toFixed(3) }\r\n            </th> */}\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default LaporanHancurBarangExel;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport {\r\n  getToday,\r\n  localStoragedecryp,\r\n  formatGram,\r\n  getUserdata,\r\n} from \"../../../../../components/helpers/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst CetakLaporanHancurBarang = (data = \"\") => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  let finalY = 30;\r\n\r\n  let total_barang = 0;\r\n  let grand_total_berat = 0;\r\n  let grand_berat_atribut = 0;\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN HANCUR BARANG\", 14, 15);\r\n  doc.setFontSize(20);\r\n  doc.text(getUserdata().nama_toko, 200, 15);\r\n  doc.setFontSize(8);\r\n  let jml_alamat = getUserdata().alamat_toko.length;\r\n  if (jml_alamat > 20) {\r\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\r\n  }\r\n  if (jml_alamat > 50) {\r\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\r\n  }\r\n  doc.setFontSize(10);\r\n  doc.setProperties({\r\n    title: \"Laporan Hancur Barang\",\r\n  });\r\n  //row 1\r\n  doc.text(\r\n    `PERIODE : ${\r\n      localStoragedecryp(\"tgl_laporan\").length === 0\r\n        ? null\r\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n          \" s/d \" +\r\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\r\n    }`,\r\n    14,\r\n    25\r\n  );\r\n  let tableColumn = [\r\n    // [\r\n    //   {\r\n    //     content: `No Hancur : ${item._id.no_hancur}`,\r\n    //     colSpan: 8,\r\n    //   },\r\n    // ],\r\n    [\r\n      {\r\n        content: `No`,\r\n      },\r\n      {\r\n        content: `Kode Gudang`,\r\n      },\r\n      {\r\n        content: `Kode Baki`,\r\n      },\r\n      {\r\n        content: `BARCODE`,\r\n      },\r\n      {\r\n        content: `NAMA BARANG`,\r\n      },\r\n      {\r\n        content: `Kondisi Barang`,\r\n      },\r\n      {\r\n        content: `NAMA ATR`,\r\n      },\r\n      {\r\n        content: `BRT ATR`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      {\r\n        content: `BERAT`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n     \r\n    ],\r\n  ];\r\n  let i = 1;\r\n  data.forEach((item, no) => {\r\n    let total_berat = 0;\r\n    let total_berat_atribut = 0;\r\n\r\n    // let data = [\r\n    //   {\r\n    //     content: `NO HANCUR : ${item._id.no_hancur}`,\r\n    //     colSpan: \"9\",\r\n    //   },\r\n    // ];\r\n    // tableRows.push(data);\r\n    item.detail.forEach((barang, index) => {\r\n      let rows = [\r\n        i,\r\n        barang.kode_gudang,\r\n        barang.kode_baki,\r\n        barang.kode_barcode,\r\n        barang.nama_barang,\r\n        barang.kondisi_barang,\r\n        barang.nama_atribut,\r\n        {\r\n          content: formatGram(barang.berat_atribut,3),\r\n          styles: {\r\n            halign: 'right'\r\n          },\r\n        },\r\n        {\r\n          content: formatGram(barang.berat,3),\r\n          styles: {\r\n            halign: 'right'\r\n          },\r\n        },\r\n      ];\r\n\r\n      total_berat = total_berat + parseFloat(barang.berat);\r\n      total_berat_atribut =\r\n      total_berat_atribut + parseFloat(barang.berat_atribut);\r\n\r\n      grand_total_berat = grand_total_berat + parseFloat(barang.berat);\r\n      grand_berat_atribut =\r\n      grand_berat_atribut + parseFloat(barang.berat_atribut);\r\n\r\n      tableRows.push(rows);\r\n      ++i\r\n    });\r\n    total_barang = total_barang + item.detail.length;\r\n    // localStorage.setItem('hasil',JSON.stringify(item.detail.length))\r\n    // console.log();\r\n    \r\n  });\r\n\r\n  let total = [\r\n    {\r\n      content: `Total`,\r\n      colSpan: 5,\r\n      styles: {\r\n        halign: \"center\",\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    \r\n    {\r\n      content: ``,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n   \r\n    {\r\n      content: ``,\r\n      styles: {\r\n        halign: \"center\",\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: `${formatGram(grand_berat_atribut,3)}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right'\r\n      },\r\n    },{\r\n      content: `${formatGram(grand_total_berat,3)}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right'\r\n      },\r\n    },\r\n    // `${sub_qty}`,\r\n  ];\r\n  tableRows.push(total);\r\n  // let footer = [\r\n  //   {\r\n  //     content: `Total Barang : ${total_barang} Pcs\\nTotal Berat : ${grand_total_berat.toFixed(\r\n  //       3\r\n  //     )}\\nTotal Berat Atribut : ${grand_berat_atribut.toFixed(3)}`,\r\n  //     colSpan: 10,\r\n  //     styles: {\r\n  //       fillColor: \"#E8E5E5\",\r\n  //       textColor: \"#000\",\r\n  //     },\r\n  //   },\r\n  // ];\r\n\r\n  // tableRows.push(footer);\r\n  // let footer = [\r\n  //   {\r\n  //     content: `Sub total : ${item.detail.length}`,\r\n  //     colSpan: 4,\r\n  //   },\r\n  //   `${sub_total.toFixed(3)}`,\r\n  //   \"\",\r\n  //   `${berat_atribut.toFixed(3)}`,\r\n  // ];\r\n  // footRows.push(footer);\r\n  let printed = [\r\n    {\r\n      colSpan:9,\r\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\r\n      styles: {\r\n        // lineWidth: 0.1,\r\n        fontStyle: \"italic\",\r\n        textColor: \"#000\",\r\n        // fillColor: \"#E8E5E5\"\r\n      },\r\n    },\r\n  ]\r\n  tableRows.push(printed);\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    // foot: footRows,\r\n    startY: finalY,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    // pageBreak: \"avoid\",\r\n    margin: { top: 10 },\r\n    footStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    bodyStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    headStyles: {\r\n      fontSize: 8,\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n\r\n      fillColor: \"#E8E5E5\",\r\n      textColor: \"#000\",\r\n    },\r\n  });\r\n  finalY = doc.autoTableEndPosY() + 3;\r\n  tableRows = [];\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n\r\n  // doc.text(\r\n  //   `User                        : ${\r\n  //     JSON.parse(localStoragedecryp(\"userdata\")).user_id\r\n  //   }`,\r\n  //   14,\r\n  //   finalY + 10\r\n  // );\r\n  // doc.text(`Cetak                      : ${getToday()}`, 14, finalY + 16);\r\n  // doc.text(\r\n  //   `Grand Total Berat   : ${parseFloat(grandtotalberat).toFixed(3)}`,\r\n  //   14,\r\n  //   finalY + 22\r\n  // );\r\n  // doc.text(`Grand Total Barang: ${parseFloat(total_baraang)}`, 14, finalY + 28);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  // doc.autoPrint();\r\n  // doc.save(`Laporan Hancur Barang.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(\r\n    \"<html><head><title>Laporan Hancur Barang</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n      string +\r\n      \"></embed></body></html>\"\r\n  );\r\n  // x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default CetakLaporanHancurBarang;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { InputDate } from \"../../../../components/helpers/field\";\r\nimport { getTglSystem,formatGram } from \"../../../../components/helpers/function\";\r\nimport Tabel from \"../../../../components/helpers/tabel\";\r\nimport ValidasiTanggalLaporan from \"../../../../Validasi/ValidasiTanggalLaporan\";\r\nimport LaporanHancurBarangExel from \"./exel/LaporanHancurBarangExel\";\r\n// import LaporanBatalServiceExel from \"./exel/LaporanBatalServiceExel\";\r\nimport CetakLaporanHancurBarang from \"./pdf/CetakLaporanHancurBarang\";\r\nimport Loading from 'react-fullscreen-loading';\r\n\r\nclass HeadHancurBarang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: new Date(),\r\n    };\r\n    // this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.setStartDate = this.setStartDate.bind(this);\r\n    this.setLastDate = this.setLastDate.bind(this);\r\n  }\r\n\r\n  exportPdf() {\r\n    CetakLaporanHancurBarang(this.props.LaporanDataBarang);\r\n  }\r\n  setStartDate(date) {\r\n    this.setState({\r\n      tgl_awal: new Date(date),\r\n    });\r\n  }\r\n  setLastDate(date) {\r\n    this.setState({\r\n      tgl_akhir: new Date(date),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let databarang = [];\r\n    let berat = 0;\r\n    this.props.LaporanDataBarang.forEach((element) => {\r\n      element.detail.forEach((detail) => {\r\n        databarang.push(detail);\r\n        berat = berat + detail.berat\r\n      });\r\n    });\r\n    const columns = [\r\n  \r\n      {\r\n        dataField: \"kode_gudang\",\r\n        text: \"Kode Gudang\",\r\n        footerAttrs: {\r\n          colSpan: \"4\",\r\n        },\r\n        footer: (cell, row, num, index) => {\r\n          return <div>Total Barang  : {databarang.length} </div>;\r\n        },\r\n      },\r\n      {\r\n        dataField: \"kode_baki\",\r\n        text: \"Kode Baki\",\r\n      },\r\n      {\r\n        dataField: \"kode_barcode\",\r\n        text: \"Kode Barcode\",\r\n      },\r\n\r\n      {\r\n        dataField: \"nama_barang\",\r\n        text: \"Nama Barang\",\r\n      },\r\n     \r\n      {\r\n        dataField: \"berat\",\r\n        text: \"Berat\",\r\n        headerClasses: 'text-right',\r\n        formatter: (cell) => {\r\n          return <div className=\"text-right\"> {formatGram(cell, 2)} </div>;\r\n        },\r\n        footer: (columnData) => {\r\n          return <div className=\"text-right\"> {formatGram(columnData.reduce((acc, item) => acc + item, 0), 2)} </div>\r\n        }\r\n      }\r\n    ];\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_awal\"\r\n              component={InputDate}\r\n              label=\"Tanggal Dari\"\r\n              type=\"text\"\r\n              selected={this.state.tgl_awal}\r\n              onChange={(date) => this.setStartDate(date)}\r\n              placeholder=\"Masukan Tanggal Dari\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_akhir\"\r\n              component={InputDate}\r\n              type=\"text\"\r\n              selected={this.state.tgl_akhir}\r\n              onChange={(date) => this.setLastDate(date)}\r\n              label=\"Tanggal Akhir\"\r\n              placeholder=\"Masukan Tanggal Akhir\"\r\n            />\r\n          </div>\r\n         \r\n          <div className=\"col-lg-4\">\r\n            <div className=\"text-right\">\r\n              <label>&nbsp;</label>\r\n              <button\r\n                type=\"submit\"\r\n                value=\"PDF\"\r\n                name=\"type_btn\"\r\n                className=\"btn btn-primary btn-block\"\r\n              >\r\n                {this.props.isLoading ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Mencari\r\n                  </>\r\n                ) : (\r\n                  \"Cari Laporan\"\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <Tabel\r\n              keyField=\"kode_gudang\"\r\n              data={this.props.export ? databarang  :  []}\r\n              columns={columns}\r\n              empty={true}\r\n              textEmpty=\"Data Laporan Hancur Barang Kosong\"\r\n            />\r\n          </div>\r\n          <div className={this.props.export ? \"col-lg-12\" : \"col-lg-12 d-none\"}>\r\n            {/* <label htmlFor=\"\">&nbsp;</label> */}\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-6\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => this.exportPdf()}\r\n                  className=\"btn btn-warning btn-block\"\r\n                >\r\n                  {\" \"}\r\n                  Export PDF{\" \"}\r\n                </button>\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <LaporanHancurBarangExel data={this.props.LaporanDataBarang} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {this.props.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadHancurBarang = reduxForm({\r\n  form: \"HeadHancurBarang\",\r\n    enableReinitialize: true,\r\n  validate: ValidasiTanggalLaporan \r\n})(HeadHancurBarang);\r\nexport default connect((state) => {\r\n  return {\r\n    initialValues: {\r\n      tgl_awal: getTglSystem(),\r\n      tgl_akhir: getTglSystem(),\r\n    },\r\n  };\r\n})(HeadHancurBarang);\r\n\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Panel, PanelHeader } from \"../../../../components/panel/panel.jsx\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { postDataNoTImeOut } from \"../../../../config/axios.jsx\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { NotifError, ToastNotification } from \"../../../../components/helpers/notification.jsx\";\r\nimport HeadHancurBarang from \"./HeadHancurBarang.jsx\";\r\nimport { formatDate, localStorageencryp } from \"../../../../components/helpers/function.jsx\";\r\nimport * as moment from \"moment-timezone\";\r\n\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    hideModal: state.datamaster.modalDialog,\r\n  };\r\n};\r\n\r\nclass FormLaporanHancurBarang extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false,\r\n      modalDialog: false,\r\n      isLoading: false,\r\n      username: false,\r\n      export: false,\r\n      LaporanDataBarang: [],\r\n      tgl_awal: new Date(),\r\n      tgl_akhir: new Date(),\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    let data_post = {\r\n      tgl_awal: formatDate(moment(new Date(data.tgl_awal)).format('YYYY-MM-DD')),\r\n      tgl_akhir: formatDate(moment(new Date(data.tgl_akhir)).format('YYYY-MM-DD')),\r\n    };\r\n\r\n    postDataNoTImeOut(\"hancurbarang/get/report\", data_post)\r\n      .then((res) => {\r\n        if (res.data.length === 0) {\r\n          ToastNotification(\"info\", \"Data Yang Anda Cari Tidak Ada\");\r\n          this.setState({\r\n            isLoading: false,\r\n            export: false,\r\n          });\r\n        } else {\r\n          localStorageencryp(\"tgl_laporan\", JSON.stringify(data_post));\r\n          ToastNotification(\"success\", \"Laporan Hancur Barang Tersedia\");\r\n          this.setState({\r\n            LaporanDataBarang: res.data,\r\n            isLoading: false,\r\n            export: true,\r\n          })\r\n        }\r\n      })\r\n      .catch((error) => this.errorHandling(error));\r\n  }\r\n\r\n  errorHandling(err) {\r\n    NotifError(err);\r\n    this.setState({\r\n      isLoading: false,\r\n      export: false,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Laporan Barang</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Laporan Hancur Barang</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Laporan Hancur Barang </h1>\r\n        <Panel>\r\n          <PanelHeader>Filter Laporan</PanelHeader>\r\n          <br />\r\n          <div className=\"container\">\r\n            <HeadHancurBarang\r\n              export={this.state.export}\r\n              LaporanDataBarang={this.state.LaporanDataBarang}\r\n              isLoading={this.state.isLoading}\r\n              onSubmit={(data) => this.handleSubmit(data)}\r\n            />\r\n          </div>\r\n          <br/>\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFormLaporanHancurBarang = reduxForm({\r\n  form: \"FormLaporanHancurBarang\",\r\n  enableReinitialize: true,\r\n})(FormLaporanHancurBarang);\r\nexport default connect(maptostate, null)(FormLaporanHancurBarang);\r\n"],"sourceRoot":""}