{"version":3,"sources":["pages/DataMaster/DataGudang/FormModalMasterGudang.jsx","pages/DataMaster/DataGudang/MasterGudang.jsx","Validasi/ValidasiMasterGudang.jsx"],"names":["FormModalMasterGudang","Component","constructor","props","super","this","state","listgroup","aktif","componentDidMount","setTimeout","isEdit","document","getElementById","focus","render","react_default","a","createElement","onSubmit","handleSubmit","onKeyPress","e","key","preventDefault","autoComplete","Fragment","Field","name","component","HiidenFiled","type","readOnly","id","tabIndex","ReanderField","label","placeholder","onBlur","setState","className","onClick","dispatch","hideModal","disabled","isLoading","submitting","loading_default","loading","background","loaderColor","reduxForm","form","enableReinitialize","validate","ValidasiMasterGudang","connect","datamaster","ShowModalGudang","initialValues","kode_gudang","nama_gudang","hapusDataGudang","kode","params","Swal","fire","html","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","then","result","isConfirmed","deleteData","NotifSucces","getDataGudang","catch","err","ToastNotification","response","data","DataGudang","modalDialog","React","columns","dataField","text","sort","csvExport","headerClasses","formatter","rowcontent","row","dataEdit","_id","formEditDataKategori","bind","data_edit","data_post","putData","reset","error","undefined","postData","ErrorHandling","showModal","shoModalGudang","react_router_dom","to","panel","tabel","keyField","tambahData","handleClick","exportCsv","empty","textEmpty","ModalGlobal","size","title","content","DataGudang_FormModalMasterGudang","value","event","errors"],"mappings":"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","file":"static/js/39.b5b02ab1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { hideModal } from \"../../../actions/datamaster_action\";\r\nimport { HiidenFiled, ReanderField } from \"../../../components/helpers/field\";\r\nimport ValidasiMasterGudang from \"../../../Validasi/ValidasiMasterGudang.jsx\";\r\nimport Loading from 'react-fullscreen-loading';\r\n\r\nconst maptostate = (state) => {\r\n  if (state.datamaster.ShowModalGudang !== null) {\r\n    return {\r\n      initialValues: {\r\n        id: state.datamaster.ShowModalGudang.id,\r\n        kode_gudang: state.datamaster.ShowModalGudang.kode_gudang,\r\n        nama_gudang: state.datamaster.ShowModalGudang.nama_gudang,\r\n      },\r\n    };\r\n  }\r\n};\r\nclass FormModalMasterGudang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listgroup: [],\r\n      aktif: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.props.isEdit\r\n      ? document.getElementById(\"nama_gudang\").focus()\r\n      : document.getElementById(\"kode_gudang\").focus()\r\n    }, 100);\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n        autoComplete=\"off\"\r\n      >\r\n        {\r\n          this.props.isEdit ? <>\r\n             <Field\r\n              name=\"id\"\r\n              component={HiidenFiled}\r\n              type=\"hidden\"\r\n              readOnly={this.props.isEdit}\r\n            />\r\n          </> : null\r\n        }\r\n        <Field\r\n          id=\"kode_gudang\"\r\n          tabIndex=\"1\"\r\n          name=\"kode_gudang\"\r\n          component={ReanderField}\r\n          type=\"text\"\r\n          label=\"Kode Gudang\"\r\n          readOnly={this.props.isEdit}\r\n          placeholder=\"Masukan Kode Gudang\"\r\n        />\r\n        <Field\r\n          tabIndex=\"2\"\r\n          id=\"nama_gudang\"\r\n          name=\"nama_gudang\"\r\n          component={ReanderField}\r\n          type=\"text\"\r\n          label=\"Nama Gudang\"\r\n          onBlur={() => this.setState({ aktif: true })}\r\n          placeholder=\"Masukan Nama Gudang\"\r\n        />\r\n        <div className=\"row\">\r\n          <div className=\"col-12 text-right\">\r\n            <button\r\n              className=\"btn btn-white\"\r\n              onClick={() => this.props.dispatch(hideModal())}\r\n              type=\"button\"\r\n              disabled={this.props.isLoading}\r\n            >\r\n              Batal\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              tabIndex=\"3\"\r\n              className={this.state.aktif ? \"btn btn-primary\" : \"btn btn-white\"}\r\n              disabled={this.props.submitting}\r\n              type=\"submit\"\r\n            >\r\n              {this.props.isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Menyimpan\r\n                </>\r\n              ) : (\r\n                \"Simpan Data\"\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {this.props.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormModalMasterGudang = reduxForm({\r\n  form: \"ModalMasterGudang\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiMasterGudang,\r\n})(FormModalMasterGudang);\r\nexport default connect(maptostate, null)(FormModalMasterGudang);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\r\n\r\nimport {\r\n  ShowModalGudang,\r\n  showModal,\r\n  getDataGudang,\r\n  hideModal,\r\n  } from \"../../../actions/datamaster_action.jsx\";\r\nimport { connect } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  NotifSucces,\r\n  ToastNotification,\r\n} from \"../../../components/helpers/notification.jsx\";\r\nimport { reset } from \"redux-form\";\r\nimport { deleteData, postData, putData } from \"../../../config/axios.jsx\";\r\nimport { ErrorHandling } from \"../../../components/helpers/function.jsx\";\r\nimport Tabel from \"../../../components/helpers/tabel.jsx\";\r\nimport ModalGlobal from \"../../../components/helpers/ModalGlobal.jsx\";\r\nimport FormModalMasterGudang from \"./FormModalMasterGudang.jsx\";\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    DataGudang: state.datamaster.getDataGudang,\r\n    hideModal: state.datamaster.modalDialog,\r\n  };\r\n};\r\n\r\nconst hapusDataGudang = (kode,params, dispatch) => {\r\n  Swal.fire({\r\n    // title: \"Anda Yakin !!\",\r\n    // text: \"Ingin Menghapus Data Ini ?\",\r\n    html:\r\n      \"Apakah Anda Yakin Ingin \" +\r\n      \"Menghapus \" +\r\n      \"<h1><b>Kode Gudang \" +\r\n      kode +\r\n      \"</b> ?</h1>\",\r\n    icon: \"warning\",\r\n    position: \"top-center\",\r\n    cancelButtonText: \"Tidak\",\r\n    showCancelButton: true,\r\n    confirmButtonText: \"OK\",\r\n    showConfirmButton: true,\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      deleteData(\"gudang/delete/by-kode-gudang/\" + params).then(() => {\r\n        NotifSucces(\"Data Berhasil Di Hapus\").then(() =>\r\n          dispatch(getDataGudang())\r\n        );\r\n      }).catch((err) => {\r\n        ToastNotification(\"error\", err.response.data)\r\n      })\r\n    }\r\n  });\r\n};\r\nclass MasterGudang extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false,\r\n      modalDialog: false,\r\n      isLoading: false,\r\n      columns: [\r\n        {\r\n          dataField: \"kode_gudang\",\r\n          text: \"Kode Gudang \",\r\n          sort: true,\r\n        },\r\n        {\r\n          dataField: \"nama_gudang\",\r\n          text: \"Nama Gudang \",\r\n          sort: true,\r\n        },\r\n        {\r\n          dataField: \"action\",\r\n          text: \"Action\",\r\n          csvExport: false,\r\n          headerClasses: \"text-center\",\r\n          formatter: (rowcontent, row) => {\r\n            let dataEdit = {\r\n              id: row._id,\r\n              kode_gudang: row.kode_gudang,\r\n              nama_gudang: row.nama_gudang,\r\n            };\r\n            return (\r\n              <div className=\"row text-center\">\r\n                {row.kode_gudang === \"TOKO\" ? null : <>\r\n                <div className=\"col-12\">\r\n                  <button\r\n                    onClick={() => this.formEditDataKategori(dataEdit)}\r\n                    className=\"btn btn-primary mr-3\"\r\n                  >\r\n                    <i className=\"fa fa-edit\"></i>\r\n                  </button>\r\n                  <button\r\n                    onClick={() =>\r\n                      hapusDataGudang(row.kode_gudang,row._id, this.props.dispatch)\r\n                    }\r\n                    className=\"btn btn-danger\"\r\n                  >\r\n                    <i className=\"fa fa-trash\"></i>\r\n                  </button>\r\n                  </div>\r\n                  </>\r\n                }\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      // dataGudang: [\r\n      //   {\r\n      //     kode_gudang: \"tk\",\r\n      //     nama_gudang: \"Toko\",\r\n      //   },\r\n      // ],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getDataGudang(\"master\"));\r\n  }\r\n  handleSubmit(data) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    // console.log(data);\r\n    let data_edit = {\r\n      kode_gudang: data.kode_gudang,\r\n      nama_gudang: data.nama_gudang,\r\n    };\r\n    let data_post = {\r\n      kode_gudang: data.kode_gudang,\r\n      nama_gudang: data.nama_gudang,\r\n    };\r\n    this.state.isEdit\r\n      ? putData(\"gudang/edit/by-kode-gudang/\" + data.id, data_edit)\r\n          .then(() => {\r\n            this.props.dispatch(hideModal());\r\n          })\r\n          .then(() => {\r\n            ToastNotification(\"success\", \"Data Berhasil Diedit\");\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(getDataGudang());\r\n          })\r\n          .then(() => {\r\n            this.setState({ isLoading: false });\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(reset(\"ModalMasterGudang\"));\r\n          })\r\n        .catch((error) => {\r\n          ToastNotification(\"info\", error.response === undefined ? \"Terjadi Kesalahan Saat Megirim Data \" : error.response.data)\r\n          this.setState({ isLoading: false });\r\n          })\r\n      : postData(\"gudang/add\", data_post)\r\n          .then(() => {\r\n            this.props.dispatch(hideModal());\r\n          })\r\n          .then(() => {\r\n            ToastNotification(\"success\", \"Data Berhasil Disimpan\");\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(getDataGudang());\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(reset(\"ModalMasterGudang\"));\r\n          })\r\n          .then(() => {\r\n            this.setState({ isLoading: false });\r\n          })\r\n          .catch((error) =>\r\n            ErrorHandling(\r\n              error,\r\n              \"gudang/reactive/by-kode-gudang/\",\r\n              // data.kode_gudang,\r\n              data_post,\r\n              this.props.dispatch,\r\n              getDataGudang(),\r\n              hideModal(),\r\n              \"ModalMasterGudang\"\r\n            ).then(() => {\r\n              this.setState({ isLoading: false });\r\n            })\r\n          );\r\n  }\r\n\r\n  formEditDataKategori(dataEdit) {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(ShowModalGudang(dataEdit));\r\n    this.setState({\r\n      isEdit: true,\r\n    });\r\n  }\r\n  shoModalGudang() {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(ShowModalGudang(false));\r\n    this.setState({\r\n      isEdit: false,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Data Master</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Master Gudang</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Master Gudang </h1>\r\n        <Panel>\r\n          <PanelHeader>Master Gudang</PanelHeader>\r\n          <br />\r\n\r\n          {/* Master Gudang */}\r\n          <div className=\"container\">\r\n            <Tabel\r\n              keyField=\"kode_gudang\"\r\n              tambahData={true}\r\n              handleClick={() => this.shoModalGudang()}\r\n              exportCsv={true}\r\n              data={this.props.DataGudang}\r\n              columns={this.state.columns}\r\n              empty={this.props.DataGudang}\r\n              textEmpty=\"Data Gudang Kosong\"\r\n            />\r\n          </div>\r\n          <br />\r\n          {/* End Master Gudang */}\r\n          <ModalGlobal\r\n            size=\"P\"\r\n            title={\r\n              this.state.isEdit ? \"Edit Data Gudang\" : \"Tambah Data Gudang\"\r\n            }\r\n            content={\r\n              <FormModalMasterGudang\r\n                isEdit={this.state.isEdit}\r\n                isLoading={this.state.isLoading}\r\n                onSubmit={(data) => this.handleSubmit(data)}\r\n              />\r\n            }\r\n          />\r\n\r\n          {/* End Tambah Master Gudang  */}\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(MasterGudang);\r\n","const ValidasiMasterGudang = (value, event) => {\r\n  const errors = {};\r\n  // console.log(event.charCode==13);\r\n  if (!value.kode_gudang) {\r\n    errors.kode_gudang = \"Kode Gudang Tidak Boleh Kosong\";\r\n  }\r\n  if (!value.nama_gudang) {\r\n    errors.nama_gudang = \"Nama Gudang Tidak Boleh Kosong\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default ValidasiMasterGudang;\r\n"],"sourceRoot":""}