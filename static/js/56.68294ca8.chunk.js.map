{"version":3,"sources":["pages/DataMaster/DataKategori/MasterKategori.jsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","_components_panel_panel_jsx__WEBPACK_IMPORTED_MODULE_2__","react_bootstrap_table_next__WEBPACK_IMPORTED_MODULE_3__","react_bootstrap_table_next__WEBPACK_IMPORTED_MODULE_3___default","react_bootstrap_table2_toolkit__WEBPACK_IMPORTED_MODULE_4__","react_bootstrap_table2_toolkit__WEBPACK_IMPORTED_MODULE_4___default","react_bootstrap_table2_paginator__WEBPACK_IMPORTED_MODULE_5__","react_bootstrap_table2_paginator__WEBPACK_IMPORTED_MODULE_5___default","_actions_datamaster_action_jsx__WEBPACK_IMPORTED_MODULE_6__","react_redux__WEBPACK_IMPORTED_MODULE_7__","sweetalert2__WEBPACK_IMPORTED_MODULE_8__","sweetalert2__WEBPACK_IMPORTED_MODULE_8___default","_components_helpers_notification_jsx__WEBPACK_IMPORTED_MODULE_9__","FormModalDataKategori","lazy","e","then","bind","SearchBar","Search","ExportCSVButton","CSVExport","hapusDataKategori","params","dispatch","console","log","Swal","fire","html","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","result","isConfirmed","NotifSucces","catch","err","ToastNotification","response","data","connect","state","hideModal","datamaster","modalDialog","React","Component","constructor","props","super","this","isEdit","isLoading","columns","dataField","text","sort","formatter","cell","a","createElement","parseFloat","toLocaleString","toFixed","csvExport","headerClasses","rowcontent","row","dataEdit","kode","nama_kategori","harga_pergram","presentase","kadar","className","onClick","formEditDataKategori","datakategori","handleSubmit","setState","showModal","ShowtModalKategori","showModalKategori","render","to","keyField","search","exportCSV","fileName","data-tip","searchProps","Object","assign","pagination","paginationFactory","baseProps","csvProps","title","isOpen","onSubmit"],"mappings":"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","file":"static/js/56.68294ca8.chunk.js","sourcesContent":["import React, { lazy } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Panel, PanelHeader } from '../../../components/panel/panel.jsx';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search, CSVExport } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport { ShowtModalKategori, showModal } from '../../../actions/datamaster_action.jsx';\r\nimport { connect } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { NotifSucces, ToastNotification } from \"../../../components/helpers/notification.jsx\";\r\nconst FormModalDataKategori = lazy(() => import( './FormModalDataKategori.jsx'));\r\n\r\nconst { SearchBar } = Search;\r\nconst { ExportCSVButton } = CSVExport;\r\n\r\nconst maptostate = (state) => {\r\n    return {\r\n        hideModal: state.datamaster.modalDialog\r\n    }\r\n}\r\nconst hapusDataKategori = (params, dispatch) => {\r\n  console.log(params);\r\n    Swal.fire({\r\n        html:\r\n        'Apakah Anda Yakin Ingin ' +\r\n        'Menghapus ' +\r\n        '<h1><b>Kode '+params+'</b> ?</h1>',\r\n        icon: 'warning',\r\n        position: 'top-center',\r\n        cancelButtonText: 'Tidak',\r\n        showCancelButton: true,\r\n        confirmButtonText: 'OK',\r\n        showConfirmButton: true,\r\n    }).then((result) => {\r\n        if (result.isConfirmed) {\r\n            NotifSucces('Data Berhasil Di Hapus')\r\n        }\r\n    }).catch((err) => {\r\n      ToastNotification(\"error\", err.response.data)\r\n    })\r\n\r\n}\r\nclass MasterKategori extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          isEdit: false,\r\n          modalDialog: false,\r\n          isLoading: false,\r\n          columns: [\r\n            {\r\n              dataField: \"kode\",\r\n              text: \"Kode\",\r\n              sort: true,\r\n            },\r\n            {\r\n              dataField: \"nama_kategori\",\r\n              text: \"Nama Kategori\",\r\n            },\r\n            {\r\n              dataField: \"harga_pergram\",\r\n              text: \"Harga / Gram\",\r\n              formatter: (cell) => {\r\n                return (\r\n                  <span>Rp. {parseFloat(cell).toLocaleString(\"kr-KO\")}</span>\r\n                );\r\n              },\r\n            },\r\n\r\n            {\r\n              dataField: \"presentase\",\r\n              text: \"Persentase\",\r\n              formatter: (cell) => {\r\n                return cell.toFixed(2);\r\n              },\r\n            },\r\n            {\r\n              dataField: \"kadar\",\r\n              text: \"Kadar\",\r\n            },\r\n            {\r\n              dataField: \"action\",\r\n              text: \"Action\",\r\n              csvExport: false,\r\n              headerClasses: \"text-center\",\r\n              formatter: (rowcontent, row) => {\r\n                let dataEdit = {\r\n                  kode: row.kode,\r\n                  nama_kategori: row.nama_kategori,\r\n                  harga_pergram: row.harga_pergram,\r\n                  presentase: row.presentase,\r\n                  kadar: row.kadar,\r\n                };\r\n                 \r\n                return (\r\n                  <div className=\"row text-center\">\r\n                    <div className=\"col-12\">\r\n                      <button\r\n                        onClick={() => this.formEditDataKategori(dataEdit)}\r\n                        className=\"btn btn-primary mr-3\"\r\n                      >  <i className=\"fa fa-edit\"></i>             \r\n                      </button>\r\n                      <button\r\n                        onClick={() =>\r\n                          hapusDataKategori(\r\n                            row.kode,\r\n                            this.props.dispatch\r\n                          )\r\n                        }\r\n                        className=\"btn btn-danger\"\r\n                      >\r\n                        <i className=\"fa fa-trash\"></i>  \r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              },\r\n            },\r\n          ],\r\n          datakategori: [\r\n            {\r\n              kode: \"CC\",\r\n              nama_kategori: \"Emas Tua\",\r\n              harga_pergram: \"7700000\",\r\n              presentase: \"80\",\r\n              kadar: \"17k\",\r\n            },\r\n          ],\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(data) {\r\n        this.setState({ isLoading: true });\r\n        console.log(data);\r\n    }\r\n    formEditDataKategori(dataEdit) {\r\n        this.props.dispatch(showModal())\r\n        this.props.dispatch(ShowtModalKategori(dataEdit));\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n    }\r\n    showModalKategori() {\r\n        this.props.dispatch(showModal());\r\n        this.props.dispatch(ShowtModalKategori(false))\r\n        this.setState({\r\n          isEdit: false,\r\n          isLoading: false,\r\n        });\r\n    }\r\n    render() {\r\n\t\treturn (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Data Master</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Master Kategori</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Master Kategori </h1>\r\n        <Panel>\r\n          <PanelHeader>Master Kategori</PanelHeader>\r\n          <br />\r\n\r\n          {/* Master Kategori */}\r\n          <div className=\"container\">\r\n            <ToolkitProvider\r\n              keyField=\"kode\"\r\n              data={this.state.datakategori || []}\r\n              columns={this.state.columns}\r\n              search\r\n              exportCSV={{\r\n                fileName: \"Export Master Kategori.csv\",\r\n              }}\r\n            >\r\n              {(props) => (\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">\r\n                    <button\r\n                      onClick={() => this.showModalKategori()}\r\n                      className=\"btn btn-primary\"\r\n                      data-tip=\"Tambah Data\"\r\n                    >\r\n                      <i className=\"fa fa-plus\"></i>\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"col-6\">\r\n                    <div className=\"text-right\">\r\n                      <SearchBar {...props.searchProps} />\r\n                    </div>\r\n                  </div>\r\n                  <hr />\r\n                  <div className=\"col-12\">\r\n                    <BootstrapTable\r\n                      pagination={paginationFactory()}\r\n                      {...props.baseProps}\r\n                    />\r\n                    <br />\r\n                    <ExportCSVButton {...props.csvProps}>\r\n                      Export CSV!! \r\n                    </ExportCSVButton>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </ToolkitProvider>\r\n          </div>\r\n          <br />\r\n          {/* End Master Kategori */}\r\n          <FormModalDataKategori\r\n            isEdit={this.state.isEdit}\r\n            isLoading={this.state.isLoading}\r\n            title={\r\n              this.state.isEdit ? \"Edit Data Kategori\" : \"Tambah Data Kategori\"\r\n            }\r\n            isOpen={this.props.hideModal}\r\n            onSubmit={(data) => this.handleSubmit(data)}\r\n          />\r\n\r\n          {/* <Modal  title={ this.state.isEdit ? 'Edit Data Kategori' : 'Tambah Data Kategori' } content={ <FormModalKategori isEdit={this.state.isEdit} /> } isOpen={ this.props.hideModal} onSubmit={ (data)=>this.handleSubmit(data) } /> */}\r\n\r\n          {/* End Tambah Master Kategori  */}\r\n        </Panel>\r\n      </div>\r\n    );\r\n\t}\r\n}\r\n\r\n\r\nexport default connect(maptostate, null)(MasterKategori);"],"sourceRoot":""}