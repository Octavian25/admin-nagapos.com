{"version":3,"sources":["pages/Laporan/LaporanPembelian/PembelianSales/exel/ExportExelPembelianSales.jsx","pages/Laporan/LaporanPembelian/PembelianSales/pdf/ExportLaporanPembelianSales.jsx","pages/Laporan/LaporanPembelian/PembelianSales/HeadFormLaporanPembelianSales.jsx","Validasi/Penjualan/ValidasiLaporanPenjualanSales.jsx"],"names":["ExportExelPembelianSales","Component","constructor","props","super","this","state","render","total_berat","total_barang","harga","jumlah","data","forEach","item","index","parseFloat","berat","length","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","style","display","colSpan","localStoragedecryp","JSON","parse","tgl_awal","tgl_akhir","getUserdata","nama_toko","alamat_toko","backgroundColor","color","textAlign","map","row","_id","kode_sales","formatGram","toLocaleString","ExportLaporanPembelianSales","username","tanggal_dari","tanggal_sampai","doc","jsPDF","tableRows","footRows","finalY","setFontSize","text","jml_alamat","slice","concat","setProperties","title","sub_jumlah","sub_harga","sub_berat","rows","content","styles","halign","parseInt","push","footer","fillColor","textColor","toFixed","printed","user_id","getToday","fontStyle","autoTable","head","body","foot","startY","theme","rowPageBreak","margin","top","bodyStyles","fontSize","headStyles","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","string","output","x","window","open","document","write","HeadFormLaporanPembelianSales","_this","Object","classCallCheck","_super","call","date","Date","setStartDate","bind","assertThisInitialized","setLastDate","dispatch","getDataSales","change","GetDataGroup","setState","LaporanTransaksiPembelian","_this2","datagroup","value","name","list","kode_group","databarang","element","columns","dataField","headerClasses","cell","num","formatter","sales","datasales","nama_sales","onSubmit","handleSubmit","onKeyPress","e","key","preventDefault","autoComplete","Field","component","InputDate","label","type","selected","onChange","placeholder","options","ReanderSelect","isLoading","tabel","keyField","export","empty","textEmpty","onClick","exportPdf","exel_ExportExelPembelianSales","loading_default","loading","background","loaderColor","reduxForm","form","enableReinitialize","validate","ValidasiLaporanPenjualanSales","connect","datamaster","initialValues","getTglSystem","errors","tanggal_awal","sampai_tgl"],"mappings":"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","file":"static/js/30.93691d3d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport { formatGram, getUserdata, localStoragedecryp } from \"../../../../../components/helpers/function\";\r\nclass ExportExelPembelianSales extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    let total_berat = 0;\r\n    let total_barang = 0;\r\n    let harga = 0;\r\n    let jumlah = 0;\r\n    this.props.data.forEach((item, index) => {\r\n      // barang.detail.forEach((item, index) => {\r\n      total_berat = total_berat + parseFloat(item.berat);\r\n      total_berat = total_berat + parseFloat(item.berat);\r\n      harga = harga + item.harga;\r\n      jumlah = jumlah + item.jumlah;\r\n      total_barang = total_barang + item.length;\r\n    });\r\n    return (\r\n      <>\r\n        <ReactHTMLTableToExcel\r\n          id=\"test-table-xls-button\"\r\n          className=\"btn btn-success btn-block\"\r\n          table=\"table-to-xls\"\r\n          filename=\"Laporan Pembelian Pramuniaga\"\r\n          sheet=\"Laporan Pembelian Pramuniaga\"\r\n          buttonText=\"Export Exel\"\r\n        />\r\n        <table id=\"table-to-xls\" style={{ display: \"none\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan=\"4\"> Laporan Pembelian Sales </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"4\">\r\n                {\" \"}\r\n                Periode{\" \"}\r\n                {localStoragedecryp(\"tgl_laporan\").length === 0\r\n                  ? null\r\n                  : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n                    \" s/d \" +\r\n                    JSON.parse(localStoragedecryp(\"tgl_laporan\"))\r\n                      .tgl_akhir}{\" \"}\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"4\"> TOKO :  {getUserdata().nama_toko} </th>\r\n            </tr>\r\n           \r\n            <tr>\r\n              <th colSpan=\"4\"> ALAMAT :  {getUserdata().alamat_toko} </th>\r\n            </tr>\r\n            <tr>\r\n              <th\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                SALES\r\n              </th>\r\n              <th\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                BERAT\r\n              </th>\r\n              <th\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                TOTAL QTY\r\n              </th>\r\n              <th\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                TOTAL PEMBELIAN RP\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.data.map((row, index) => (\r\n              <>\r\n                {/* {item.detail.map((row, index) => ( */}\r\n                <tr>\r\n                  <td>{row._id.kode_sales}</td>\r\n                  <td\r\n                    style={{\r\n                      textAlign: \"right\",\r\n                    }}\r\n                  >\r\n                    {formatGram(row.berat,3)}\r\n                  </td>\r\n                  <td style={{textAlign: \"right\"}}>{row.jumlah}</td>\r\n                  <td style={{textAlign: \"right\"}}>{row.harga.toLocaleString(\"kr-KO\")}</td>\r\n                </tr>\r\n                {/* ))} */}\r\n              </>\r\n            ))}\r\n          </tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <td\r\n                // colSpan=\"6\"\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n\r\n                  textAlign: \"center\",\r\n                }}\r\n              ></td>\r\n\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                {formatGram(total_berat,3)}\r\n              </td>\r\n\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                {jumlah}\r\n              </td>\r\n\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                {harga.toLocaleString(\"kr-KO\")}\r\n              </td>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default ExportExelPembelianSales;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport {\r\n  formatGram,\r\n  getToday,\r\n  getUserdata,\r\n  localStoragedecryp,\r\n} from \"../../../../../components/helpers/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst ExportLaporanPembelianSales = (\r\n  data = \"\",\r\n  username = \"\",\r\n  tanggal_dari = \"\",\r\n  tanggal_sampai = \"\"\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"L\", \"mm\");\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  let footRows = [];\r\n  let finalY = 30;\r\n  // let total_baraang = 0;\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN PEMBELIAN SALES\", 14, 15);\r\n  doc.setFontSize(20);\r\n  doc.text(getUserdata().nama_toko, 200, 15);\r\n  doc.setFontSize(8);\r\n  let jml_alamat = getUserdata().alamat_toko.length;\r\n  if (jml_alamat > 20) {\r\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\r\n  }\r\n  if (jml_alamat > 50) {\r\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\r\n  }\r\n  doc.setFontSize(10);\r\n  doc.text(\r\n    `PERIODE : ${\r\n      localStoragedecryp(\"tgl_laporan\").length === 0\r\n        ? null\r\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n          \" s/d \" +\r\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\r\n    }`,\r\n    14,\r\n    25\r\n  );\r\n\r\n  doc.setProperties({\r\n    title: \"LAPORAN PEMBELIAN PRAMUNIAGA\",\r\n  });\r\n  //row 1\r\n  \r\n  let tableColumn = [\r\n    [\r\n      {\r\n        content: `SALES`,\r\n      },\r\n      {\r\n        content: `BERAT`,\r\n        styles: {\r\n          halign: \"right\",\r\n        },\r\n      },\r\n      {\r\n        content: `TOTAL QTY`,\r\n        styles: {\r\n          halign: \"right\",\r\n        },\r\n      },\r\n      {\r\n        content: `TOTAL PEMBELIAN RP`,\r\n        styles: {\r\n          halign: \"right\",\r\n        },\r\n      },\r\n      // {\r\n      //   content: `NO FAKTUR`,\r\n      // },\r\n      // {\r\n      //   content: `NAMA CUSTOMER`,\r\n      // },\r\n      // {\r\n      //   content: `NO HP`,\r\n      // },\r\n      // {\r\n      //   content: `ALAMAT CUSTOMER`,\r\n      // },\r\n      // {\r\n      //   content: `KODE GUDANG`,\r\n      // },\r\n      // {\r\n      //   content: `KODE DEPT`,\r\n      // },\r\n      // {\r\n      //   content: `BERAT NOTA`,\r\n      // },\r\n      // {\r\n      //   content: `BERAT`,\r\n      // },\r\n      // {\r\n      //   content: `HARGA NOTA`,\r\n      // },\r\n      // {\r\n      //   content: `HARGA`,\r\n      // },\r\n      // {\r\n      //   content: `HARGA RATA`,\r\n      // },\r\n      // {\r\n      //   content: `KONDISI`,\r\n      // },\r\n    ],\r\n  ];\r\n  let sub_jumlah = 0;\r\n  let sub_harga = 0;\r\n  let sub_berat = 0;\r\n  data.forEach((item, index) => {\r\n    // let head = [\r\n    //   {\r\n    //     content: `KODE SALES : ${item._id.kode_sales}`,\r\n    //     colSpan: 12,\r\n    //   },\r\n    // ];\r\n    // tableRows.push(head);\r\n\r\n    let rows = [\r\n      item._id.kode_sales,\r\n      // item.no_faktur_beli,\r\n      // item.nama_customer,\r\n      // item.no_hp,\r\n      // item.alamat_customer,\r\n      // item.kode_gudang,\r\n      // item.kode_dept,\r\n      // item.jumlah,\r\n      // parseInt(item.harga).toLocaleString(\"kr-KO\"),\r\n      {\r\n        content: formatGram(item.berat, 3),\r\n        styles: {\r\n          halign: \"right\",\r\n        },\r\n      },\r\n      {\r\n        content: parseInt(item.jumlah),\r\n        styles: {\r\n          halign: \"right\",\r\n        },\r\n      },\r\n      {\r\n        content: parseInt(item.harga).toLocaleString(\"kr-KO\"),\r\n        styles: {\r\n          halign: \"right\",\r\n        },\r\n      },\r\n      // item.berat.toFixed(1),\r\n      // parseInt(item.harga_nota).toLocaleString(\"kr-KO\"),\r\n      // parseInt(item.harga_rata).toLocaleString(\"kr-KO\"),\r\n      // item.kondisi,\r\n    ];\r\n\r\n    sub_jumlah = sub_jumlah + parseFloat(item.jumlah);\r\n    sub_harga = sub_harga + parseFloat(item.harga);\r\n    sub_berat = sub_berat + parseFloat(item.berat);\r\n    tableRows.push(rows);\r\n\r\n    // total_baraang = total_baraang+item.detail.length;\r\n    // localStorage.setItem('hasil',JSON.stringify(item.detail.length))\r\n    // console.log();\r\n  });\r\n  let footer = [\r\n    {\r\n      content: ``,\r\n      // colSpan: ,\r\n      styles: {\r\n        halign: \"center\",\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: `${sub_berat.toFixed(3)}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: \"right\",\r\n      },\r\n    },\r\n\r\n    {\r\n      content: sub_jumlah.toLocaleString(\"kr-KO\"),\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: \"right\",\r\n      },\r\n    },\r\n    {\r\n      content: sub_harga.toLocaleString(\"kr-KO\"),\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: \"right\",\r\n      },\r\n    },\r\n  ];\r\n  tableRows.push(footer);\r\n  let printed = [\r\n    {\r\n      colSpan: 9,\r\n      content: `Printed By ${\r\n        JSON.parse(localStoragedecryp(\"userdata\")).user_id\r\n      } / ${getToday()}`,\r\n      styles: {\r\n        // lineWidth: 0.1,\r\n        fontStyle: \"italic\",\r\n        textColor: \"#000\",\r\n        // fillColor: \"#E8E5E5\"\r\n      },\r\n    },\r\n  ];\r\n  tableRows.push(printed);\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    foot: footRows,\r\n    startY: finalY,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    // pageBreak: \"avoid\",\r\n    margin: { top: 10 },\r\n    bodyStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    headStyles: {\r\n      fontSize: 8,\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fillColor: \"#E8E5E5\",\r\n      textColor: \"#000\",\r\n    },\r\n  });\r\n  finalY = doc.autoTableEndPosY() + 3;\r\n  tableRows = [];\r\n  footRows = [];\r\n  // sub_harga = 0;\r\n  // sub_harga_rata = 0;\r\n  // sub_harga_nota = 0;\r\n  // sub_berat = 0;\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n\r\n  // doc.text(\r\n  //   `User                        : ${\r\n  //     JSON.parse(localStoragedecryp(\"userdata\")).user_id\r\n  //   }`,\r\n  //   14,\r\n  //   finalY + 10\r\n  // );\r\n  // doc.text(`Cetak                      : ${getToday()}`, 14, finalY + 16);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  // doc.autoPrint();\r\n  // doc.save(`LAPORAN PEMBELIAN PRAMUNIAGA.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(\r\n    \"<html><head><title>LAPORAN PEMBELIAN PRAMUNIAGA</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n      string +\r\n      \"></embed></body></html>\"\r\n  );\r\n  // x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default ExportLaporanPembelianSales;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { GetDataGroup, getDataSales } from \"../../../../actions/datamaster_action\";\r\nimport {\r\n  InputDate, ReanderSelect,\r\n  // ReanderSelect,\r\n} from \"../../../../components/helpers/field\";\r\nimport { formatGram, getTglSystem } from \"../../../../components/helpers/function\";\r\nimport Tabel from \"../../../../components/helpers/tabel\";\r\nimport ValidasiLaporanPenjualanSales from \"../../../../Validasi/Penjualan/ValidasiLaporanPenjualanSales\";\r\nimport ExportExelPembelianSales from \"./exel/ExportExelPembelianSales\";\r\nimport ExportLaporanPembelianSales from \"./pdf/ExportLaporanPembelianSales\"\r\nimport Loading from 'react-fullscreen-loading';\r\n// const maptostate = (state) => {\r\n//   return {\r\n//     datasales: state.datamaster.getDataSales,\r\n//   };\r\n// };\r\nclass HeadFormLaporanPembelianSales extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: new Date(),\r\n    };\r\n    this.setStartDate = this.setStartDate.bind(this);\r\n    this.setLastDate = this.setLastDate.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getDataSales())\r\n    this.props.change(\"kode_sales\",\"ALL\")\r\n    this.props.dispatch(GetDataGroup());\r\n    this.props.change(\"kode_group\", \"ALL\");\r\n    this.props.change(\"jenis_group\", \"ALL\");\r\n\r\n  }\r\n  setStartDate(date) {\r\n    this.setState({\r\n      tgl_awal: new Date(date),\r\n    });\r\n  }\r\n  setLastDate(date) {\r\n    this.setState({\r\n      tgl_akhir: new Date(date),\r\n    });\r\n  }\r\n  exportPdf() {\r\n    ExportLaporanPembelianSales(this.props.LaporanTransaksiPembelian);\r\n  }\r\n  render() {\r\n    let datagroup = [\r\n      {\r\n        value: \"ALL\",\r\n        name: \"SEMUA\",\r\n      },\r\n    ];\r\n    this.props.GetDataGroup.forEach((list) => {\r\n      let row = {\r\n        name: list.kode_group,\r\n        value: list.kode_group,\r\n      };\r\n      datagroup.push(row);\r\n    });\r\n    let databarang = [];\r\n    let berat = 0;\r\n    let harga = 0;\r\n    let jumlah = 0;\r\n    this.props.LaporanTransaksiPembelian.forEach((element) => {\r\n      // element.detail.forEach((detail) => {\r\n      let row = {\r\n        kode_sales: element._id.kode_sales,\r\n        berat: element.berat,\r\n        harga: element.harga,\r\n        jumlah: element.jumlah\r\n        }\r\n        databarang.push(row);\r\n        berat = berat + element.berat;\r\n        harga = harga + element.harga;\r\n        jumlah = jumlah + element.jumlah;\r\n       \r\n      // });\r\n    });\r\n    const columns = [\r\n      \r\n      // {\r\n      //   dataField: \"no_faktur_beli\",\r\n      //   text: \"No FB\",\r\n      //   footerAttrs: {\r\n      //     colSpan: \"4\",\r\n      //   },\r\n      //   footer: (cell, row, num, index) => {\r\n      //     return <div>Total Barang : {databarang.length} </div>;\r\n      //   },\r\n      // },\r\n      \r\n      {\r\n        dataField: \"kode_sales\",\r\n        text: \"Kode Sales\",\r\n        footer: \"\",\r\n        // footerAttrs: {\r\n        //   colSpan: \"3\",\r\n        // },\r\n        // footer: (cell, row, num, index) => {\r\n        //   return <div>Total Barang : {databarang.length} </div>;\r\n        // },\r\n      },\r\n     \r\n      {\r\n        dataField: \"berat\",\r\n        text: \"Berat\",\r\n        headerClasses: 'text-right',\r\n        footer: (cell, row, num, index) => {\r\n          return <div className=\"text-right\">{formatGram(berat,3)} </div>;\r\n        },\r\n        formatter: (cell) => {\r\n          return <div className=\"text-right\"> {formatGram(cell,3)} </div>;\r\n        },\r\n      },\r\n     \r\n      {\r\n        dataField: \"jumlah\",\r\n        text: \"Total Qty\",\r\n        headerClasses: 'text-right',\r\n        footer: (cell, row, num, index) => {\r\n          return <div className=\"text-right\">{jumlah.toLocaleString(\"kr-KO\")} </div>;\r\n        },\r\n        formatter: (cell) => {\r\n          return <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>;\r\n        },\r\n      },\r\n      {\r\n        dataField: \"harga\",\r\n        text: \"Total Pembelian Rp\",\r\n        headerClasses: 'text-right',\r\n        footer: (cell, row, num, index) => {\r\n          return <div className=\"text-right\">{harga.toLocaleString(\"kr-KO\")} </div>;\r\n        },\r\n        formatter: (cell) => {\r\n          return <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>;\r\n        },\r\n      },\r\n     \r\n    ];\r\n    let sales = [\r\n      {\r\n        value: \"ALL\",\r\n        name : \"SEMUA\"\r\n      }\r\n    ]\r\n    this.props.datasales.map((row) => {\r\n      let data = {\r\n        value: row.kode_sales,\r\n        name: row.kode_sales + \" - \" + row.nama_sales,\r\n      };\r\n      sales.push(data);\r\n      return true\r\n    })\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit} onKeyPress={(e) => { e.key === 'Enter' && e.preventDefault(); }} autoComplete=\"off\">\r\n        <div className=\"row\">\r\n        <div className=\"col-lg-4\">\r\n          <Field\r\n            name=\"tgl_awal\"\r\n            component={InputDate}\r\n            label=\"Tanggal Dari\"\r\n            type=\"text\"\r\n            selected={this.state.tgl_awal}\r\n            onChange={(date) => this.setStartDate(date)}\r\n            placeholder=\"Masukan Tanggal Dari\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-lg-4\">\r\n          <Field\r\n            name=\"tgl_akhir\"\r\n            component={InputDate}\r\n            type=\"text\"\r\n            selected={this.state.tgl_akhir}\r\n            onChange={(date) => this.setLastDate(date)}\r\n            label=\"Tanggal Akhir\"\r\n            placeholder=\"Masukan Tanggal Akhir\"\r\n          />\r\n        </div>\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              label=\"Kode Sales\"\r\n              name=\"kode_sales\"\r\n              options={sales}\r\n              placeholder={\"Silahkan Pilih Nama Sales\"}\r\n              component={ReanderSelect}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"kode_group\"\r\n              component={ReanderSelect}\r\n              options={datagroup}\r\n              onChange={(e) => this.setState({ kode_group: e })}\r\n              label=\"Kode Group\"\r\n              placeholder=\"Pilih Kode Group\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"jenis_group\"\r\n              component={ReanderSelect}\r\n              options={[\r\n                {\r\n                  value: \"ALL\",\r\n                  name: \"SEMUA\",\r\n                },\r\n                {\r\n                  value: \"MUDA\",\r\n                  name: \"MUDA\",\r\n                },\r\n                {\r\n                  value: \"TUA\",\r\n                  name: \"TUA\",\r\n                },\r\n              ]}\r\n              label=\"Jenis Group\"\r\n              placeholder=\"Pilih Jenis Group\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-4\">\r\n            <div className=\"text-right\">\r\n              <label>&nbsp;</label>\r\n              <button\r\n                type=\"submit\"\r\n                value=\"PDF\"\r\n                name=\"type_btn\"\r\n                className=\"btn btn-primary btn-block\"\r\n              >\r\n                {this.props.isLoading ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Mencari\r\n                  </>\r\n                ) : (\r\n                  \"Cari Laporan\"\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-12\">\r\n            <Tabel\r\n              keyField=\"kode_barcode\"\r\n              data={this.props.export ? databarang : []}\r\n              columns={columns}\r\n              empty={true}\r\n              textEmpty=\"Data Laporan Transaksi Pembelian Kosong\"\r\n            />\r\n          </div>\r\n          <div className={this.props.export ? \"col-lg-12\" : \"col-lg-12 d-none\"}>\r\n          {/* <label htmlFor=\"\">&nbsp;</label> */}\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-6\">\r\n                <button\r\n                  type=\"button\"\r\n                onClick={() => this.exportPdf()}\r\n                className=\"btn btn-warning btn-block\"\r\n              >\r\n                {\" \"}\r\n                Export PDF{\" \"}\r\n              </button>\r\n            </div>\r\n            <div className=\"col-lg-6\">\r\n              <ExportExelPembelianSales data={this.props.LaporanTransaksiPembelian} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </div>\r\n        {this.props.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadFormLaporanPembelianSales = reduxForm({\r\n  form: \"HeadFormLaporanPembelianSales\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiLaporanPenjualanSales,\r\n})(HeadFormLaporanPembelianSales);\r\n// export default connect(maptostate, null)(HeadFormLaporanPembelianSales);\r\nexport default connect((state) => {\r\n  return {\r\n    datasales: state.datamaster.getDataSales,\r\n    GetDataGroup: state.datamaster.GetDataGroup,\r\n    initialValues: {\r\n      tgl_awal: getTglSystem(),\r\n      tgl_akhir: getTglSystem(),\r\n    },\r\n  };\r\n})(HeadFormLaporanPembelianSales);\r\n","const ValidasiLaporanPenjualanSales = (value) => {\r\n    const errors = {};\r\n    if (!value.tanggal_awal) {\r\n        errors.tanggal_awal = \"Tanggal Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.sampai_tgl) {\r\n        errors.sampai_tgl = \"Tanggal Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.kode_sales) {\r\n        errors.kode_sales = \"Kode Tidak Boleh Kosong\";\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\nexport default ValidasiLaporanPenjualanSales;\r\n\r\n\r\n"],"sourceRoot":""}