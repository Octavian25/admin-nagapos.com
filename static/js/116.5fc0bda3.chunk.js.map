{"version":3,"sources":["pages/Member/LihatTransaksiMember/HeadTransaksiMember.jsx","pages/Member/LihatTransaksiMember/LihatTransaksiMember.jsx"],"names":["HeadTransaksiMember","Component","constructor","props","super","this","state","date","Date","kondisi_barang","isLoadingBatal","setStartDate","setState","tgl_awal","setLastDate","tgl_akhir","render","react_default","a","createElement","onSubmit","handleSubmit","autoComplete","className","Field","onChange","getKodeMember","name","component","ReanderField","type","label","placeholder","id","readOnly","Fragment","style","point","fontSize","position","left","top","InputDate","selected","value","isLoading","onClick","batalLihatTransaksi","tabel","keyField","exportCsv","data","datatransaksimember","columns","empty","textEmpty","loading_default","loading","background","loaderColor","reduxForm","form","enableReinitialize","connect","initialValues","dari_tanggal","getTglSystem","sampai_tanggal","datakondisi","datamaster","getDataKondisiBarang","setHancurBarang","databarang","LihatTransaksiMember","React","dataField","text","sort","formatter","cell","parseFloat","toFixed","toLocaleString","row","bind","setTimeout","dispatch","reset","e","clearTimeout","delay","undefined","kode_member","getData","then","res","forEach","item","index","document","getElementById","nama_customer","alamat_customer","no_hp","catch","err","ToastNotification","data_post","formatDate","moment","format","postData","length","export","localStorageencryp","JSON","stringify","error","react_router_dom","to","panel","LihatTransaksiMember_HeadTransaksiMember"],"mappings":"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","file":"static/js/116.5fc0bda3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { InputDate, ReanderField } from \"../../../components/helpers/field\";\r\nimport { getTglSystem } from \"../../../components/helpers/function\";\r\nimport Tabel from \"../../../components/helpers/tabel\";\r\nimport Loading from 'react-fullscreen-loading';\r\n// import { getData } from \"../../../config/axios\";\r\nconst maptostate = (state) => {\r\n  return {\r\n    initialValues: {\r\n      dari_tanggal: getTglSystem(),\r\n      sampai_tanggal: getTglSystem(),\r\n    },\r\n    datakondisi: state.datamaster.getDataKondisiBarang,\r\n    setHancurBarang: state.databarang.setHancurBarang,\r\n  };\r\n};\r\nclass HeadTransaksiMember extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: new Date(),\r\n      kondisi_barang: \"kosong\",\r\n      isLoadingBatal: false,\r\n    };\r\n  }\r\n  setStartDate(date) {\r\n    this.setState({\r\n      tgl_awal: new Date(date),\r\n    });\r\n  }\r\n  setLastDate(date) {\r\n    this.setState({\r\n      tgl_akhir: new Date(date),\r\n    });\r\n  }\r\n\r\n  // getKodeMember(e) {\r\n  //   // console.log(e);\r\n  //   getData(\"member/get/by-kode-member/\" + e).then((res) => {\r\n  //     res.data.forEach((item, index) => {\r\n  //       this.props.change(\"nama_member\", item.nama_customer);\r\n  //       this.props.change(\"alamat\", item.alamat_customer);\r\n  //       this.props.change(\"no_hp\", item.no_hp);\r\n  //       // this.props.change(\"point\", item.point);\r\n  //       this.setState({\r\n  //         point: item.point,\r\n  //       });\r\n  //     });\r\n  //     // console.log(res.data);\r\n  //   });\r\n  // }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\r\n        <div className=\"row\">\r\n          <div className=\"col-8\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-6\">\r\n                <Field\r\n                  onChange={this.props.getKodeMember}\r\n                  name=\"kode_member\"\r\n                  component={ReanderField}\r\n                  type=\"text\"\r\n                  label=\"Kode Member\"\r\n                  placeholder=\"Masukan Kode Member\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <Field\r\n                  id=\"lihat_transaksi_nama_member\"\r\n                  name=\"nama_member\"\r\n                  readOnly={true}\r\n                  component={ReanderField}\r\n                  type=\"text\"\r\n                  label=\"Nama Member\"\r\n                  placeholder=\"Masukan Nama Member\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-4 text-center\">\r\n            <> &nbsp; </>\r\n            <h1\r\n              style={\r\n                this.props.point === \"POINT\"\r\n                  ? {\r\n                      fontSize: \"4.875rem\",\r\n                      position: \"absolute\",\r\n                      left: \"56px\",\r\n                      top: \"25px\",\r\n                    }\r\n                  : {\r\n                      fontSize: \"4.875rem\",\r\n                      position: \"absolute\",\r\n                      left: \"110px\",\r\n                      top: \"25px\",\r\n                    }\r\n              }\r\n            >\r\n              {\" \"}\r\n              {this.props.point}{\" \"}\r\n            </h1>\r\n          </div>\r\n          <div className=\"col-8\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-6\">\r\n                <Field\r\n                  id=\"lihat_transaksi_alamat\"\r\n                  name=\"alamat\"\r\n                  readOnly={true}\r\n                  component={ReanderField}\r\n                  type=\"text\"\r\n                  label=\"Alamat\"\r\n                  placeholder=\"Masukan Alamat\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <Field\r\n                  id=\"lihat_transaksi_no_hp\"\r\n                  name=\"no_hp\"\r\n                  readOnly={true}\r\n                  component={ReanderField}\r\n                  type=\"text\"\r\n                  label=\"No Hp\"\r\n                  placeholder=\"Masukan No Hp\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-4 text-center\">\r\n            {/* <Field\r\n              name=\"point\"\r\n              readOnly={true}\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              placeholder=\"Point Saya\"\r\n            /> */}\r\n          </div>\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"dari_tanggal\"\r\n              component={InputDate}\r\n              type=\"text\"\r\n              selected={this.state.tgl_awal}\r\n              onChange={(date) => this.setStartDate(date)}\r\n              label=\"Dari Tanggal\"\r\n              placeholder=\"Masukan Dari Tanggal\"\r\n\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"sampai_tanggal\"\r\n              component={InputDate}\r\n              type=\"text\"\r\n              selected={this.state.tgl_akhir}\r\n              onChange={(date) => this.setLastDate(date)}\r\n              label=\"Sampai Tanggal\"\r\n              placeholder=\"Masukan Sampai Tanggal\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-4\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-6\">\r\n                <label>&nbsp;</label>\r\n                <button\r\n                  type=\"submit\"\r\n                  value=\"PDF\"\r\n                  name=\"type_btn\"\r\n                  className=\"btn btn-primary btn-block\"\r\n                >\r\n                  {this.props.isLoading ? (\r\n                    <>\r\n                      <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Lihat\r\n                    </>\r\n                  ) : (\r\n                    \"Lihat\"\r\n                  )}\r\n                </button>\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <label>&nbsp;</label>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={this.props.batalLihatTransaksi}\r\n                  className=\"btn btn-warning btn-block\"\r\n                >\r\n                  {this.props.isLoadingBatal ? (\r\n                    <>\r\n                      <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Batal\r\n                    </>\r\n                  ) : (\r\n                    \"Batal\"\r\n                  )}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-12\">\r\n            <Tabel\r\n              keyField=\"tgl_trx\"\r\n              exportCsv={true}\r\n              data={this.props.datatransaksimember}\r\n              columns={this.props.columns}\r\n              empty={true}\r\n              textEmpty=\"Data Transaksi Member Kosong\"\r\n            />\r\n          </div>\r\n        </div>\r\n        {this.props.isLoadingBatal || this.props.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadTransaksiMember = reduxForm({\r\n  form: \"HeadTransaksiMember\",\r\n  enableReinitialize: true,\r\n})(HeadTransaksiMember);\r\nexport default connect(maptostate, null)(HeadTransaksiMember);\r\n\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\r\nimport HeadTransaksiMember from \"./HeadTransaksiMember.jsx\";\r\nimport {\r\n  formatDate,\r\n  localStorageencryp,\r\n} from \"../../../components/helpers/function.jsx\";\r\nimport { ToastNotification } from \"../../../components/helpers/notification.jsx\";\r\nimport * as moment from \"moment-timezone\";\r\nimport { getData, postData } from \"../../../config/axios.jsx\";\r\nimport { reduxForm, reset } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport Loading from 'react-fullscreen-loading';\r\n\r\nclass LihatTransaksiMember extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isLoadingBatal: false,\r\n      point: \"POINT\",\r\n      datatransaksimember: [],\r\n      columns: [\r\n        {\r\n          dataField: \"tgl_trx\",\r\n          text: \"Tanggal Trx\",\r\n          sort: true,\r\n        },\r\n        {\r\n          dataField: \"kategori\",\r\n          text: \"Kategori\",\r\n        },\r\n        {\r\n          dataField: \"deskripsi\",\r\n          text: \"Deskripsi\",\r\n        },\r\n        {\r\n          dataField: \"berat\",\r\n          text: \"Berat\",\r\n          formatter: (cell) => {\r\n            return <span>{parseFloat(cell).toFixed(3)}</span>;\r\n          },\r\n        },\r\n        {\r\n          dataField: \"jumlah_rp\",\r\n          text: \"Jumlah Rp\",\r\n          formatter: (cell) => {\r\n            return <span>{parseFloat(cell).toLocaleString(\"kr-KO\")}</span>;\r\n          },\r\n        },\r\n        {\r\n          dataField: \"poin_awal\",\r\n          text: \"Poin Awal\",\r\n          formatter: (value, row) => {\r\n            return value || 0;\r\n          },\r\n        },\r\n        {\r\n          dataField: \"poin\",\r\n          text: \"Poin\",\r\n          formatter: (value, row) => {\r\n            return value || 0;\r\n          },\r\n        },\r\n        {\r\n          dataField: \"poin_akhir\",\r\n          text: \"Poin Akhir\",\r\n          formatter: (value, row) => {\r\n            return value || 0;\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.getKodeMember = this.getKodeMember.bind(this);\r\n  }\r\n  batalLihatTransaksi() {\r\n    this.setState({\r\n      isLoadingBatal: true,\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({\r\n        isLoadingBatal: false,\r\n        datatransaksimember: []\r\n      });\r\n      this.props.dispatch(reset(\"HeadTransaksiMember\"));\r\n    }, 1000);\r\n  }\r\n  getKodeMember(e) {\r\n    clearTimeout(this.delay)\r\n    this.delay = setTimeout(() => {\r\n      if(e.kode_member === undefined){\r\n        return false;\r\n      }\r\n      this.setState({\r\n        isLoading: true\r\n      })\r\n      getData(\"member/get/by-kode-member/\" + e.kode_member).then((res) => {\r\n        // console.log(res.data)\r\n        this.setState({\r\n          isLoading: false\r\n        });\r\n        res.data.forEach((item, index) => {\r\n          document.getElementById('lihat_transaksi_nama_member').value = item.nama_customer\r\n          document.getElementById('lihat_transaksi_alamat').value = item.alamat_customer\r\n          document.getElementById('lihat_transaksi_no_hp').value = item.no_hp\r\n          // this.props.change(\"point\", item.point);\r\n          this.setState({\r\n            datatransaksimember: [],\r\n            point: item.point || 0,\r\n            isLoading: false\r\n          });\r\n        });\r\n        // console.log(res.data);\r\n      }).catch((err)=> {\r\n        ToastNotification(\"info\", \"Data member tidak ada\")\r\n        this.setState({\r\n          datatransaksimember: [],\r\n          isLoading: false\r\n        });\r\n      })\r\n    }, 1500);\r\n  }\r\n  handleSubmit(data) {\r\n    //   console.log(data);\r\n    let data_post = {\r\n      kode_member: data.kode_member,\r\n      tgl_awal: formatDate(\r\n        moment(new Date(data.dari_tanggal)).format(\"YYYY-MM-DD\")\r\n      ),\r\n      tgl_akhir: formatDate(\r\n        moment(new Date(data.sampai_tanggal)).format(\"YYYY-MM-DD\")\r\n      ),\r\n    };\r\n\r\n    postData(\"trxmember/get/by-tanggal\", data_post)\r\n      .then((res) => {\r\n        if (res.data.length === 0) {\r\n          ToastNotification(\"info\", \"Data Yang Di Cari Tidak Ada !!!\");\r\n          this.setState({\r\n            isLoading: false,\r\n            export: false,\r\n          });\r\n        } else {\r\n          ToastNotification(\"success\", \"Laporan Transaksi Member Tersedia\");\r\n          localStorageencryp(\"tgl_laporan\", JSON.stringify(data_post));\r\n          this.setState({\r\n            export: true,\r\n            isLoading: false,\r\n            datatransaksimember: res.data,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        ToastNotification(\"info\", \"Data Yang Di Cari Tidak Ada !!!\");\r\n        this.setState({\r\n          isLoading: false,\r\n          export: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Member</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Lihat Transaksi Member</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Lihat Transaksi Member </h1>\r\n        <Panel>\r\n          <PanelHeader>Lihat Transaksi Member</PanelHeader>\r\n          <br />\r\n          {/* Lihat Transaksi Member */}\r\n          <div className=\"container\">\r\n            <HeadTransaksiMember\r\n              onChange={(e)=>this.getKodeMember(e)}\r\n              batalLihatTransaksi={() => this.batalLihatTransaksi()}\r\n              onSubmit={(data) => this.handleSubmit(data)}\r\n              columns={this.state.columns}\r\n              point={this.state.point}\r\n              isLoadingBatal={this.state.isLoadingBatal}\r\n              datatransaksimember={this.state.datatransaksimember}\r\n            />\r\n            <br />\r\n          </div>\r\n          <br />\r\n          {/* End Tambah Lihat Transaksi Member  */}\r\n        </Panel>\r\n        {this.state.isLoadingBatal || this.state.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLihatTransaksiMember = reduxForm({\r\n  form: \"LihatTransaksiMember\",\r\n  enableReinitialize: true,\r\n  // validate: ValidasiDataUsers,\r\n})(LihatTransaksiMember);\r\nexport default connect( null)(LihatTransaksiMember);"],"sourceRoot":""}