{"version":3,"sources":["pages/Laporan/LaporanPenjualan/LaporanStockJual/pdf/LaporanStockJualPdf.jsx","pages/Laporan/LaporanPenjualan/LaporanStockJual/exel/LaporanStockJualExel.jsx","pages/Laporan/LaporanPenjualan/LaporanStockJual/HeadLaporanStockJual.jsx","pages/Laporan/LaporanPenjualan/LaporanStockJual/index.jsx"],"names":["LaporanStockJualPdf","data","username","tanggal_dari","tanggal_sampai","doc","jsPDF","tableRows","tableColumn","finalY","setFontSize","text","getUserdata","nama_toko","jml_alamat","alamat_toko","length","slice","setProperties","title","concat","localStoragedecryp","JSON","parse","tgl_awal","tgl_akhir","content","styles","halign","total","forEach","item","index","harga_total","rows","kode_barcode","kode_dept","nama_barang","berat","toFixed","parseInt","harga_gram","toLocaleString","harga_jual","harga_atribut","ongkos","push","footer","colSpan","fillColor","textColor","printed","user_id","getToday","fontStyle","autoTable","head","body","startY","theme","rowPageBreak","margin","top","footStyles","fontSize","bodyStyles","headStyles","tableLineColor","tableLineWidth","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","save","LaporanStockJualExel","Component","constructor","props","super","this","state","render","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","style","display","textAlign","backgroundColor","color","map","row","key","list","reduce","b","HeadLaporanServiceAmbil","date","Date","setStartDate","bind","setLastDate","exportPdf","LaporanStockJual","setState","componentDidMount","dispatch","getDataJenis","getDataBaki","setTimeout","change","databaki","value","name","kode_baki","nama_baki","dataJenis","nama_dept","columns","dataField","footerAttrs","coulmdata","headerClasses","formatter","cell","formatGram","num","onSubmit","handleSubmit","autoComplete","Field","component","InputDate","label","type","selected","onChange","placeholder","options","ReanderSelect","isLoading","tabel","keyField","export","empty","textEmpty","onClick","exel_LaporanStockJualExel","loading_default","loading","background","loaderColor","reduxForm","form","enableReinitialize","validate","ValidasiTanggalLaporan","connect","datamaster","initialValues","getTglSystem","_this","Object","classCallCheck","_super","call","assertThisInitialized","_this2","data_post","tgl_from","formatDate","moment","format","tgl_to","tgl_laporan","postDataNoTImeOut","then","res","ToastNotification","localStorageencryp","stringify","catch","err","_this3","library","to","HeadLaporanStockJual","React"],"mappings":"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","file":"static/js/101.f905b938.chunk.js","sourcesContent":["import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport {\r\n  getToday,\r\n  getUserdata,\r\n  localStoragedecryp,\r\n} from \"../../../../../components/helpers/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst LaporanStockJualPdf = (\r\n  data = \"\",\r\n  username = \"\",\r\n  tanggal_dari = \"\",\r\n  tanggal_sampai = \"\"\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  // let footRows = [];\r\n  let tableColumn = [];\r\n  let finalY = 30;\r\n\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN STOCK JUAL\", 14, 15);\r\n  doc.setFontSize(20);\r\n  doc.text(getUserdata().nama_toko, 200, 15);\r\n  doc.setFontSize(8);\r\n  let jml_alamat = getUserdata().alamat_toko.length;\r\n  if (jml_alamat > 20) {\r\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\r\n  }\r\n  if (jml_alamat > 50) {\r\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\r\n  }\r\n  doc.setFontSize(10);\r\n  doc.setProperties({\r\n    title: \"LAPORAN STOCK JUAL\",\r\n  });\r\n  //row 1\r\n  doc.text(\r\n    `PERIODE : ${\r\n      localStoragedecryp(\"tgl_laporan\").length === 0\r\n        ? null\r\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n          \" s/d \" +\r\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\r\n    }`,\r\n    14,\r\n    25\r\n  );\r\n  tableColumn = [\r\n    [\r\n      {\r\n        content: `BARCODE`,\r\n      },\r\n      {\r\n        content: `KODE JENIS`,\r\n      },\r\n      {\r\n        content: `NAMA BARANG`,\r\n      },\r\n      {\r\n        content: `BERAT`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n      {\r\n        content: `HARGA / GRAM`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n      {\r\n        content: `HARGA JUAL`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n      {\r\n        content: `HARGA ATRIBUT`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n      {\r\n        content: `ONGKOS`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n      {\r\n        content: `TOTAL`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n    ],\r\n  ];\r\n  let total = 0;\r\n  data.forEach((item, index) => {\r\n    total = total + item.harga_total;\r\n    let rows = [\r\n      item.kode_barcode,\r\n      item.kode_dept,\r\n      item.nama_barang,\r\n      {\r\n        content: item.berat.toFixed(3),\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n      {\r\n        content: parseInt(item.harga_gram).toLocaleString(\"kr-KO\"),\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n      {\r\n        content: parseInt(item.harga_jual).toLocaleString(\"kr-KO\"),\r\n        styles: {\r\n          halign : \"right\",\r\n        }\r\n      },\r\n      {\r\n        content: parseInt(item.harga_atribut).toLocaleString(\"kr-KO\"),\r\n        styles: {\r\n          halign : \"right\",\r\n        }\r\n      },\r\n      {\r\n        content: parseInt(item.ongkos).toLocaleString(\"kr-KO\"),\r\n        styles: {\r\n          halign : \"right\",\r\n        }\r\n      },\r\n      {\r\n        content: parseInt(item.harga_total).toLocaleString(\"kr-KO\"),\r\n        styles: {\r\n          halign : \"right\",\r\n        }\r\n      },\r\n\r\n    ];\r\n    tableRows.push(rows)\r\n  })\r\n  \r\n  let footer = [\r\n    {\r\n      content: `Total Transaksi: ${data.length}`,\r\n      colSpan: 8,\r\n      styles: {\r\n        halign: 'center',\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: parseInt(total).toLocaleString(\"kr-KO\"),\r\n      styles: {\r\n        halign: \"right\",\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      }\r\n    },\r\n  ]\r\n  tableRows.push(footer)\r\n\r\n  let printed = [\r\n    {\r\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\r\n      colSpan: 7,\r\n      styles: {\r\n        // lineWidth: 0.1,\r\n        fontStyle: \"italic\",\r\n        textColor: \"#000\",\r\n        // fillColor: \"#E8E5E5\"\r\n      },\r\n    },\r\n  ]\r\n  tableRows.push(printed);\r\n\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    // foot: tbl_barang,\r\n    startY: finalY,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    // pageBreak: \"avoid\",\r\n    margin: { top: 10 },\r\n    footStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    bodyStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    headStyles: {\r\n      fontSize: 8,\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fillColor: \"#E8E5E5\",\r\n      textColor: \"#000\",\r\n    },\r\n    tableLineColor: [255, 255, 255],\r\n    tableLineWidth: 1,\r\n  });\r\n  finalY = doc.autoTableEndPosY() + 3;\r\n  tableRows = [];\r\n  // footRows = [];\r\n  // tbl_barang = [];\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  // doc.text(\r\n  //   `User                          : ${\r\n  //     JSON.parse(localStoragedecryp(\"userdata\")).user_id\r\n  //   }`,\r\n  //   14,\r\n  //   finalY + 10\r\n  // );\r\n  // doc.text(`Cetak                        : ${getToday()}`, 14, finalY + 16);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  // doc.autoPrint();\r\n  doc.save(`LAPORAN STOCK JUAL.pdf`);\r\n  // var string = doc.output(\"datauristring\");\r\n  // // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  // var x = window.open();\r\n  // x.document.open();\r\n  // x.document.write(\r\n  //   \"<html><head><title>LAPORAN STOCK JUAL</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n  //     string +\r\n  //     \"></embed></body></html>\"\r\n  // );\r\n  // x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default LaporanStockJualPdf;\r\n","import React, { Component } from \"react\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport {\r\n  getUserdata,\r\n  localStoragedecryp,\r\n} from \"../../../../../components/helpers/function\";\r\nclass LaporanStockJualExel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <ReactHTMLTableToExcel\r\n          id=\"test-table-xls-button\"\r\n          className=\"btn btn-success btn-block\"\r\n          table=\"table-to-xls\"\r\n          filename=\"Laporan Stock Jual\"\r\n          sheet=\"Laporan Stock Jual\"\r\n          buttonText=\"Export Exel\"\r\n        />\r\n        <table id=\"table-to-xls\" style={{ display: \"none\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan=\"9\" style={{ textAlign: \"center\" }}>\r\n                {\" \"}\r\n                LAPORAN Stock Jual{\" \"}\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"9\"> Periode </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"9\">\r\n                {\" \"}\r\n                {localStoragedecryp(\"tgl_laporan\").length === 0\r\n                  ? null\r\n                  : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n                    \" s/d \" +\r\n                    JSON.parse(localStoragedecryp(\"tgl_laporan\"))\r\n                      .tgl_akhir}{\" \"}\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"9\"> TOKO : {getUserdata().nama_toko} </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"9\"> ALAMAT : {getUserdata().alamat_toko} </th>\r\n            </tr>\r\n            <tr></tr>\r\n            <tr>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                BARCODE\r\n              </td>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>QTY</td>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                KODE JENIS\r\n              </td>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                NAMA BARANG\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                HARGA / GRAM\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                HARGA JUAL\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                HARGA ATRIBUT\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                ONGKOS\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                HARGA TOTAL\r\n              </td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.data.map((row, index) => (\r\n              <tr key={index}>\r\n                <td>{row.kode_barcode}</td>\r\n                <td>{row.kode_dept}</td>\r\n                <td>{row.nama_barang}</td>\r\n                <td style={{ textAlign: \"right\" }}>{row.berat.toFixed(2)}</td>\r\n                <td style={{ textAlign: \"right\" }}>\r\n                  {row.harga_gram.toLocaleString(\"kr-KO\")}\r\n                </td>\r\n                <td style={{ textAlign: \"right\" }}>\r\n                  {row.harga_jual.toLocaleString(\"kr-KO\")}\r\n                </td>\r\n                <td style={{ textAlign: \"right\" }}>\r\n                  {row.harga_atribut.toLocaleString(\"kr-KO\")}\r\n                </td>\r\n                <td style={{ textAlign: \"right\" }}>\r\n                  {row.ongkos.toLocaleString(\"kr-KO\")}\r\n                </td>\r\n                <td style={{ textAlign: \"right\" }}>\r\n                  {row.harga_total.toLocaleString(\"kr-KO\")}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <td\r\n                colSpan=\"8\"\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                Grand Total Barang :\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                {\" \"}\r\n                {this.props.data\r\n                  .map((list) => list.harga_total)\r\n                  .reduce((a, b) => a + b, 0)\r\n                  .toLocaleString(\"ko-KO\")}{\" \"}\r\n              </td>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default LaporanStockJualExel;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { InputDate, ReanderSelect } from \"../../../../components/helpers/field\";\r\nimport {\r\n  formatGram,\r\n  getTglSystem,\r\n} from \"../../../../components/helpers/function\";\r\nimport Tabel from \"../../../../components/helpers/tabel\";\r\nimport ValidasiTanggalLaporan from \"../../../../Validasi/ValidasiTanggalLaporan\";\r\nimport Loading from \"react-fullscreen-loading\";\r\nimport LaporanStockJualPdf from \"./pdf/LaporanStockJualPdf\";\r\nimport LaporanStockJualExel from \"./exel/LaporanStockJualExel\";\r\nimport {\r\n  getDataBaki,\r\n  getDataJenis,\r\n} from \"../../../../actions/datamaster_action\";\r\nclass HeadLaporanServiceAmbil extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: new Date(),\r\n    };\r\n    this.setStartDate = this.setStartDate.bind(this);\r\n    this.setLastDate = this.setLastDate.bind(this);\r\n  }\r\n\r\n  exportPdf() {\r\n    LaporanStockJualPdf(this.props.LaporanStockJual);\r\n  }\r\n  setStartDate(date) {\r\n    this.setState({\r\n      tgl_awal: new Date(date),\r\n    });\r\n  }\r\n  setLastDate(date) {\r\n    this.setState({\r\n      tgl_akhir: new Date(date),\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getDataJenis());\r\n    this.props.dispatch(getDataBaki());\r\n    setTimeout(() => {\r\n      this.props.change(\"kode_dept\",\"ALL\")\r\n      this.props.change(\"kode_baki\",\"ALL\")\r\n  }, 100);\r\n  }\r\n\r\n  render() {\r\n    let databaki = [\r\n      {\r\n        value: \"ALL\",\r\n        name: \"SEMUA\",\r\n      },\r\n    ];\r\n    this.props.databaki.forEach((list) => {\r\n      let data = {\r\n        value: list.kode_baki,\r\n        name: list.kode_baki + \" - \" + list.nama_baki,\r\n      };\r\n      databaki.push(data);\r\n    });\r\n    let dataJenis = [\r\n      {\r\n        value: \"ALL\",\r\n        name: \"SEMUA\",\r\n      },\r\n    ];\r\n    this.props.dataJenis.forEach((list) => {\r\n      let data = {\r\n        value: list.kode_dept,\r\n        name: list.kode_dept + \" - \" + list.nama_dept,\r\n      };\r\n      dataJenis.push(data);\r\n    });\r\n    const columns = [\r\n      {\r\n        dataField: \"kode_barcode\",\r\n        text: \"Kode Barcode\",\r\n        footerAttrs: {\r\n          colSpan: \"8\",\r\n        },\r\n        footer: (coulmdata) => {\r\n          return <div>Total Transaksi : {coulmdata.length} </div>;\r\n        },\r\n      },\r\n      {\r\n        dataField: \"kode_dept\",\r\n        text: \"Kode Jenis\",\r\n      },\r\n      {\r\n        dataField: \"nama_barang\",\r\n        text: \"Nama Barang\",\r\n      },\r\n      {\r\n        dataField: \"berat\",\r\n        text: \"Berat\",\r\n        headerClasses: \"text-right\",\r\n\r\n        formatter: (cell) => {\r\n          return <div className=\"text-right\">{formatGram(cell, 3)}</div>;\r\n        },\r\n      },\r\n      {\r\n        dataField: \"harga_gram\",\r\n        text: \"Harga / Gram\",\r\n        headerClasses: \"text-right\",\r\n\r\n        formatter: (cell) => {\r\n          return (\r\n            <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        dataField: \"harga_jual\",\r\n        text: \"Harga Jual\",\r\n        headerClasses: \"text-right\",\r\n\r\n        formatter: (cell) => {\r\n          return (\r\n            <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        dataField: \"harga_atribut\",\r\n        text: \"Harga Atribut\",\r\n        headerClasses: \"text-right\",\r\n\r\n        formatter: (cell) => {\r\n          return (\r\n            <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        dataField: \"ongkos\",\r\n        text: \"Ongkos\",\r\n        headerClasses: \"text-right\",\r\n\r\n        formatter: (cell) => {\r\n          return (\r\n            <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        dataField: \"harga_total\",\r\n        text: \"Harga Total\",\r\n        headerClasses: \"text-right\",\r\n        footer: (cell, row, num, index) => {\r\n          return (\r\n            <div className=\"text-right\">\r\n              {cell.reduce((a, b) => a + b, 0).toLocaleString(\"kr-KO\")}\r\n            </div>\r\n          );\r\n        },\r\n        formatter: (cell) => {\r\n          return (\r\n            <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>\r\n          );\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-2\">\r\n            <Field\r\n              name=\"tgl_awal\"\r\n              component={InputDate}\r\n              label=\"Tanggal Dari\"\r\n              type=\"text\"\r\n              selected={this.state.tgl_awal}\r\n              onChange={(date) => this.setStartDate(date)}\r\n              placeholder=\"Masukan Tanggal Dari\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-lg-2\">\r\n            <Field\r\n              name=\"tgl_akhir\"\r\n              component={InputDate}\r\n              type=\"text\"\r\n              selected={this.state.tgl_akhir}\r\n              onChange={(date) => this.setLastDate(date)}\r\n              label=\"Tanggal Akhir\"\r\n              placeholder=\"Masukan Tanggal Akhir\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-2\">\r\n            <Field\r\n              label=\"Jenis\"\r\n              name=\"kode_dept\"\r\n              options={dataJenis}\r\n              placeholder={\"Silahkan Pilih Kode Jenis\"}\r\n              component={ReanderSelect}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-2\">\r\n            <Field\r\n              label=\"Kode Baki\"\r\n              name=\"kode_baki\"\r\n              options={databaki}\r\n              placeholder={\"Silahkan Pilih Kode Baki\"}\r\n              component={ReanderSelect}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-4\">\r\n            <div className=\"text-right\">\r\n              <label>&nbsp;</label>\r\n              <button\r\n                type=\"submit\"\r\n                value=\"PDF\"\r\n                name=\"type_btn\"\r\n                className=\"btn btn-primary btn-block\"\r\n              >\r\n                {this.props.isLoading ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Mencari\r\n                  </>\r\n                ) : (\r\n                  \"Cari Laporan\"\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-12\">\r\n            <Tabel\r\n              keyField=\"kode_barcode\"\r\n              data={this.props.export ? this.props.LaporanStockJual : []}\r\n              columns={columns}\r\n              empty={true}\r\n              textEmpty=\"Data Laporan Stock Jual Kosong\"\r\n            />\r\n          </div>\r\n          <div className={this.props.export ? \"col-lg-12\" : \"col-lg-12 d-none\"}>\r\n            {/* <label htmlFor=\"\">&nbsp;</label> */}\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-6\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => this.exportPdf()}\r\n                  className=\"btn btn-warning btn-block\"\r\n                >\r\n                  {\" \"}\r\n                  Export PDF{\" \"}\r\n                </button>\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <LaporanStockJualExel data={this.props.LaporanStockJual} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {this.props.isLoading ? (\r\n          <Loading\r\n            loading\r\n            background=\"rgba(0, 0, 0, 0.35)\"\r\n            loaderColor=\"rgba(94, 147, 117, 1)\"\r\n          />\r\n        ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadLaporanServiceAmbil = reduxForm({\r\n  form: \"HeadLaporanServiceAmbil\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiTanggalLaporan,\r\n})(HeadLaporanServiceAmbil);\r\n// export default connect()(HeadLaporanServiceAmbil);\r\nexport default connect((state) => {\r\n  return {\r\n    databaki: state.datamaster.getDataBaki,\r\n    dataJenis: state.datamaster.getDataJenis,\r\n    initialValues: {\r\n      tgl_awal: getTglSystem(),\r\n      tgl_akhir: getTglSystem(),\r\n    },\r\n  };\r\n})(HeadLaporanServiceAmbil);\r\n","import {\r\n  React,\r\n  connect,\r\n  Link,\r\n  reduxForm,\r\n  Panel,\r\n  PanelHeader,\r\n  formatDate,\r\n  moment,\r\n  ToastNotification,\r\n  localStorageencryp,\r\n  PanelBody,\r\n  postDataNoTImeOut,\r\n} from \"../../../../components/helpers/library\";\r\nimport HeadLaporanStockJual from \"./HeadLaporanStockJual\";\r\n\r\nclass LaporanStockJual extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      LaporanStockJual: [],\r\n      export: false,\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    let data_post = {\r\n      tgl_from: formatDate(\r\n        moment(new Date(data.tgl_awal)).format(\"YYYY-MM-DD\")\r\n      ),\r\n      tgl_to: formatDate(\r\n        moment(new Date(data.tgl_akhir)).format(\"YYYY-MM-DD\")\r\n      ),\r\n      kode_dept : data.kode_dept,\r\n      kode_baki : data.kode_baki,\r\n    };\r\n    let tgl_laporan = {\r\n      tgl_awal: formatDate(\r\n        moment(new Date(data.tgl_awal)).format(\"YYYY-MM-DD\")\r\n      ),\r\n      tgl_akhir: formatDate(\r\n        moment(new Date(data.tgl_akhir)).format(\"YYYY-MM-DD\")\r\n      ),\r\n    };\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n  \r\n    postDataNoTImeOut(\"penjualan/report-stock-terjual\" , data_post)\r\n      .then((res) => {\r\n        // console.log(res);\r\n        if (res.data.length === 0) {\r\n          ToastNotification(\"info\", \"Laporan Stock Terjual Kosong\");\r\n          this.setState({\r\n            export: false,\r\n            isLoading: false,\r\n          });\r\n          return false;\r\n        }\r\n        ToastNotification(\"success\", \"Laporan Stock Jual Tersedia\");\r\n        localStorageencryp(\"tgl_laporan\", JSON.stringify(tgl_laporan));\r\n        this.setState({\r\n          LaporanStockJual: res.data,\r\n          isLoading: false,\r\n          export: true,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        ToastNotification(\"info\", \"Data Yang Di Cari Tidak Ada !!!\");\r\n        this.setState({\r\n          export: false,\r\n          isLoading: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Laporan</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Laporan Stock Jual</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Laporan Stock Jual </h1>\r\n        <Panel>\r\n          <PanelHeader>Laporan Stock Jual</PanelHeader>\r\n          <br />\r\n          {/* Blank Page */}\r\n          <PanelBody>\r\n            <HeadLaporanStockJual\r\n              export={this.state.export}\r\n              isLoading={this.state.isLoading}\r\n              LaporanStockJual={this.state.LaporanStockJual}\r\n              onSubmit={(data) => this.handleSubmit(data)}\r\n            />\r\n          </PanelBody>\r\n          <br />\r\n          {/* End Tambah Blank Page  */}\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLaporanStockJual = reduxForm({\r\n  form: \"LaporanStockJual\",\r\n  enableReinitialize: true,\r\n})(LaporanStockJual);\r\nexport default connect(null)(LaporanStockJual);\r\n"],"sourceRoot":""}