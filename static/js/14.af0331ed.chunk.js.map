{"version":3,"sources":["pages/Hutang/TransaksiHutang/Modal/ModalDataCustomer.jsx","Validasi/Hutang/ValidasiFormHutang.jsx","pages/Hutang/TransaksiHutang/Modal/ModalHutang.jsx","Validasi/ValidasiHutang.jsx","pages/Hutang/TransaksiHutang/Modal/ModalTambahBarang.jsx","pages/Hutang/TransaksiHutang/HeadHutang.jsx","pages/Hutang/TransaksiHutang/FormTransaksiHutang.jsx","Validasi/ManageUsers/ValidasiDataUsers.jsx","Validasi/Penjualan/ValidasiFormDataMemberPenjualan.jsx"],"names":["jenis_pelanggan","value","name","ModalDataCustomer","Component","constructor","props","super","this","state","showMember","componentDidMount","dispatch","getDataSales","data_customer","localStorage","getItem","JSON","parse","setState","change","changemember","e","document","getElementById","focus","getMember","getData","then","res","data","length","ToastNotification","forEach","item","index","nama_customer","no_hp","alamat_customer","catch","err","render","react_default","a","createElement","onSubmit","handleSubmit","onKeyPress","key","preventDefault","autoComplete","className","Field","label","placeholder","options","DataSales","filter","list","undefined","kode_sales","map","component","ReanderSelect","onChange","id","target","ReanderField","type","readOnly","normalize","NumberOnly","disabled","isLoadingDataCustomer","Fragment","isLoading","loading_default","loading","background","loaderColor","reduxForm","form","enableReinitialize","validate","ValidasiFormDataMemberPenjualan","connect","initialValues","kode_customer","datamaster","ValidasiFormHutang","event","errors","tgl_hutang","emasdanplastik","jml_hutang","bunga","lama_pinjam","currencyMask","createNumberMask","prefix","locale","ModalHutang","isLoadingBatal","setStartDate","bind","date","Date","total_berat","berat","parseFloat","toFixed","setTimeout","hitungTotal","bunga_rp","besar_kembali","tgl_jatuh_tempo","batalHutang","setItem","stringify","setBarangHutang","reset","hideModal","cekBeratEmas","berat_emas","InputDate","selected","Gramasi","onBlur","Object","assign","isLoadingHutang","_selector","formValueSelector","selector","tomorrow","moment","setDate","getDate","parseInt","format","getToday","toLocaleString","datakondisi","getDataKondisiBarang","kategori","GetDataGroup","ValidasiHutang","nama_barang","jumlah","ModalTambahBarang","visible","loadimage","imgfound","ModalWebCam","harga_jual","berat_jual","hargapergram","ongkos","total","gambar","getKondisiPinjaman","setCamera","handleTakePhoto","url","_this","asyncToGenerator","regenerator_default","mark","_callee","file","wrap","_context","prev","next","dataURLtoFile","resizeFile","sent","t0","stop","showModalWebcam","showModal","loadcamera","library","onTakePhoto","dataUri","HiidenFiled","src","foto","alt","height","width","onClick","defaultValue","databarang","showEditBarang","HeadHutang","FormModal","ShowModalCustomer","ShowModalBarang","ShowModalHutang","hasil","simpanTransaksiHutang","data_barang_hutang","detail_barang","row","kondisi","kondisi_barang","push","data_hutang","kode_member","formatDate","tgl_tempo","tgl_jth_tempo","jumlah_hutang","berat_bruto","postData","message","simpanBarang","cek","panel","tabel","keyField","exportCsv","tambahData","btnText","handleClick","columns","btnOptional","namaCustomer","jenisCustomer","btnTextOptional","handleClickOptional","btnOptional2","btnTextOptional2","handleClickOptional2","empty","textEmpty","ModalGlobal","size","title","TitleModal","content","Modal_ModalDataCustomer","Modal_ModalTambahBarang","Modal_ModalHutang","ValidasiDataUsers","hutang","modalDialog","React","dataField","text","footer","columnData","reduce","acc","formatter","cell","csvExport","headerClasses","rowcontent","hapusdata","Swal","fire","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","result","isConfirmed","splice","berhasil","componentWillUnmount","react_router_dom","to","TransaksiHutang_HeadHutang","user_id","user_name","level","alamat"],"mappings":"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","file":"static/js/14.af0331ed.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { getDataSales } from \"../../../../actions/datamaster_action\";\r\nimport {\r\n  ReanderField,\r\n  ReanderSelect,\r\n} from \"../../../../components/helpers/field\";\r\nimport { ToastNotification } from \"../../../../components/helpers/notification\";\r\nimport { getData } from \"../../../../config/axios\";\r\nimport { NumberOnly } from \"../../../../Validasi/normalize\";\r\nimport ValidasiFormDataMemberPenjualan from \"../../../../Validasi/Penjualan/ValidasiFormDataMemberPenjualan\";\r\nimport Loading from 'react-fullscreen-loading';\r\n\r\nconst maptostate = (state) => {\r\n  let data_customer =\r\n    localStorage.getItem(\"data_customer_hutang_tmp\") === null || undefined\r\n      ? []\r\n      : JSON.parse(localStorage.getItem(\"data_customer_hutang_tmp\") || []);\r\n  return {\r\n    initialValues: {\r\n      kode_sales: data_customer.kode_sales || \"\",\r\n      jenis_pelanggan: data_customer.jenis_pelanggan || \"\",\r\n      kode_customer: data_customer.kode_customer || \"\",\r\n      nama_customer: data_customer.nama_customer || \"\",\r\n      no_hp: data_customer.no_hp || \"\",\r\n      alamat_customer: data_customer.alamat_customer || \"\",\r\n    },\r\n    DataSales: state.datamaster.getDataSales,\r\n  };\r\n};\r\n\r\nconst jenis_pelanggan = [\r\n  {\r\n    value: \"MEMBER\",\r\n    name: \"MEMBER\",\r\n  },\r\n  {\r\n    value: \"NONMEMBER\",\r\n    name: \"NON MEMBER\",\r\n  },\r\n];\r\nclass ModalDataCustomer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showMember: true,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getDataSales());\r\n    let data_customer =\r\n      localStorage.getItem(\"data_customer_hutang_tmp\") === null || undefined\r\n        ? []\r\n        : JSON.parse(localStorage.getItem(\"data_customer_hutang_tmp\") || []);\r\n    \r\n    if (data_customer && data_customer.jenis_pelanggan === \"MEMBER\") {\r\n      this.setState({\r\n        showMember: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        showMember: true,\r\n      });\r\n      this.props.change(\"jenis_pelanggan\", \"NONMEMBER\")\r\n    }\r\n\r\n    // setTimeout(() => {\r\n    //   this.props.change(\"jenis_pelanggan\", \"MEMBER\");\r\n    //   this.setState({\r\n    //     showMember: false,\r\n    //   });\r\n    // }, 100);\r\n  }\r\n  changemember(e) {\r\n    // console.log(e);\r\n    if (e === \"MEMBER\") {\r\n      this.setState({\r\n        showMember: false,\r\n      });\r\n      document.getElementById('kode_customer').focus()\r\n    } else {\r\n      document.getElementById('nama_customer').focus()\r\n      this.props.change(\"kode_customer\", \"\");\r\n      this.props.change(\"nama_customer\", \"\");\r\n      this.props.change(\"no_hp\", \"\");\r\n      this.props.change(\"alamat_customer\", \"\");\r\n      this.setState({\r\n        showMember: true,\r\n      });\r\n    }\r\n  \r\n  }\r\n\r\n  getMember(e) {\r\n    // console.log(e);\r\n    getData(\"member/get/by-kode-member/\" + e)\r\n      .then((res) => {\r\n        // console.log(res.data);\r\n        if (res.data.length === 0) {\r\n          ToastNotification(\"info\", \"Member Yang Anda Masukan Tidak Ada !!!\");\r\n        } else {\r\n          res.data.forEach((item, index) => {\r\n            this.props.change(\"nama_customer\", item.nama_customer);\r\n            this.props.change(\"no_hp\", item.no_hp);\r\n            this.props.change(\"alamat_customer\", item.alamat_customer);\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        ToastNotification(\r\n          \"info\",\r\n          \"Terjadi Kesalahan SIlahkan Ulangi Kembali !!!\"\r\n        );\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n        autoComplete=\"off\"\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <Field\r\n              name=\"kode_sales\"\r\n              label=\"Pilih Kode Sales\"\r\n              placeholder=\"Masukan Kode Sales\"\r\n              options={this.props.DataSales.filter(\r\n                (list) => list.kode_sales !== undefined\r\n              ).map((list) => {\r\n                let data = {\r\n                  value: list.kode_sales,\r\n                  name: list.kode_sales,\r\n                };\r\n                return data;\r\n              })}\r\n              component={ReanderSelect}\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              name=\"jenis_pelanggan\"\r\n              label=\"Pilih Pelanggan\"\r\n              onChange={(e) => this.changemember(e)}\r\n              placeholder=\"Silahkan Pilih Pelanggan\"\r\n              options={jenis_pelanggan}\r\n              component={ReanderSelect}\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              id=\"kode_customer\"\r\n              name=\"kode_customer\"\r\n              onChange={(e) => this.getMember(e.target.value)}\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              readOnly={this.state.showMember}\r\n              label=\"Kode Customer\"\r\n              placeholder=\"Masukan Kode Customer\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              id=\"nama_customer\"\r\n              name=\"nama_customer\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Nama Customer\"\r\n              placeholder=\"Masukan Nama Customer\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              name=\"no_hp\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              normalize={NumberOnly}\r\n              label=\"No Hp\"\r\n              placeholder=\"Masukan No Hp\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              name=\"alamat_customer\"\r\n              component={ReanderField}\r\n              type=\"textarea\"\r\n              label=\"Alamat Customer\"\r\n              placeholder=\"Masukan Alamat Customer\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-8\"></div>\r\n          <div className=\"col-4\">\r\n            <button\r\n              className=\"btn btn-primary btn-block\"\r\n              disabled={this.props.isLoadingDataCustomer}\r\n              type=\"submit\"\r\n            >\r\n              {this.props.isLoadingDataCustomer ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Menyimpan\r\n                </>\r\n              ) : (\r\n                \"Simpan Data\"\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {this.props.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nModalDataCustomer = reduxForm({\r\n  form: \"ModalDataCustomer\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiFormDataMemberPenjualan,\r\n})(ModalDataCustomer);\r\nexport default connect(maptostate, null)(ModalDataCustomer);\r\n","const ValidasiFormHutang = (value, event) => {\r\n    const errors = {};\r\n    // console.log(event.charCode==13);\r\n    if (!value.tgl_hutang) {\r\n      errors.tgl_hutang = \"Tanggal Hutang Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.emasdanplastik) {\r\n      errors.emasdanplastik = \"Berat Emas + Plastik Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.jml_hutang) {\r\n      errors.jml_hutang = \"Jumlah Hutang Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.bunga) {\r\n      errors.bunga = \"Bunga / Bulan Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.lama_pinjam) {\r\n      errors.lama_pinjam = \"Lama Pinjam Tidak Boleh Kosong\";\r\n    }\r\n    return errors;\r\n  };\r\n  \r\n  export default ValidasiFormHutang;\r\n  ","import * as moment from \"moment-timezone\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, formValueSelector, reduxForm, reset } from \"redux-form\";\r\nimport { createNumberMask } from \"redux-form-input-masks\";\r\nimport { hideModal } from \"../../../../actions/datamaster_action\";\r\nimport { setBarangHutang } from \"../../../../actions/hutang_action\";\r\nimport { InputDate, ReanderField } from \"../../../../components/helpers/field\";\r\nimport { getToday } from \"../../../../components/helpers/function\";\r\nimport ValidasiFormHutang from \"../../../../Validasi/Hutang/ValidasiFormHutang\";\r\nimport { NumberOnly,Gramasi } from \"../../../../Validasi/normalize\";\r\n\r\nimport Loading from 'react-fullscreen-loading';\r\nimport { ToastNotification } from \"../../../../components/helpers/notification\";\r\n\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  locale: \"kr-KO\",\r\n});\r\nclass ModalHutang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // tgl_hutang : \r\n      isLoadingBatal: false,\r\n    };\r\n    this.setStartDate = this.setStartDate.bind(this);\r\n\r\n  }\r\n  setStartDate(date) {\r\n    this.setState({\r\n      tgl_hutang:  new Date(date),\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    let total_berat = 0;\r\n    let data = JSON.parse(localStorage.getItem(\"data_barang_hutang_tmp\"));\r\n    // console.log(data);\r\n    if (data !== null) {\r\n      data.forEach((item, index) => {\r\n        // console.log(item.total_berat);\r\n        total_berat = total_berat + item.berat;\r\n        this.props.change(\"berat_emas\", parseFloat(total_berat).toFixed(1));\r\n        this.props.change(\"emasdanplastik\", parseFloat(total_berat).toFixed(1));\r\n      });\r\n    }\r\n\r\n    setTimeout(() => {\r\n      document.getElementById('emasdanplastik').focus();\r\n    }, 100);\r\n  }\r\n  hitungTotal() {\r\n    this.props.change(\"bunga_rp\", this.props.bunga_rp);\r\n    this.props.change(\"besar_kembali\", this.props.besar_kembali);\r\n    this.props.change(\"tgl_jth_tempo\", this.props.tgl_jatuh_tempo);\r\n  }\r\n\r\n  batalHutang() {\r\n    this.setState({\r\n      isLoadingBatal: true,\r\n    });\r\n    setTimeout(() => {\r\n      localStorage.setItem(\"data_customer_hutang_tmp\", JSON.stringify([]));\r\n      localStorage.setItem(\"data_barang_hutang_tmp\", JSON.stringify([]));\r\n      this.props.dispatch(setBarangHutang([]));\r\n      this.props.dispatch(reset(\"ModalHutang\"));\r\n      this.props.dispatch(hideModal());\r\n    }, 300);\r\n  }\r\n  cekBeratEmas(e) {\r\n    let berat_emas = document.getElementById('berat_emas').value;\r\n    if (parseFloat(e) < parseFloat(berat_emas)){\r\n      ToastNotification('info', \"Berat Yang Diinputkan Tidak Boleh Lebih Kecil Dari Berat Emas\")\r\n      this.props.change('emasdanplastik', '');\r\n      document.getElementById('emasdanplastik').focus();\r\n      return false\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n        autoComplete=\"off\"\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <Field\r\n              readOnly={true}\r\n              id=\"berat_emas\"\r\n              name=\"berat_emas\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Berat Emas\"\r\n              placeholder=\"Masukan Berat Emas\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            {/* <Field\r\n              name=\"tgl_hutang\"\r\n              component={ReanderField}\r\n              type=\"date\"\r\n              label=\"Tanggal Hutang\"\r\n              placeholder=\"dd-mm-yyyy\"\r\n            /> */}\r\n            <Field\r\n              name=\"tgl_hutang\"\r\n              component={InputDate}\r\n              label=\"Tanggal Hutang\"\r\n              type=\"text\"\r\n              selected={this.state.tgl_hutang}\r\n              onChange={(date) => this.setStartDate(date)}\r\n              placeholder=\"Masukan Tanggal Dari\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              id=\"emasdanplastik\"\r\n              name=\"emasdanplastik\"\r\n              type=\"text\"\r\n              component={ReanderField}\r\n              normalize={Gramasi}\r\n              onBlur={(e) => this.cekBeratEmas(e.target.value)}\r\n              label=\"Berat Emas + Plastik\"\r\n              placeholder=\"Masukan Berat Emas + Plastik\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              name=\"jml_hutang\"\r\n              component={ReanderField}\r\n              type=\"telp\"\r\n              {...currencyMask}\r\n              onChange={this.hitungTotal()}\r\n              label=\"Jumlah Hutang\"\r\n              placeholder=\"Masukan Jumlah Hutang\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              name=\"bunga\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              normalize={NumberOnly}\r\n              onChange={this.hitungTotal()}\r\n              label=\"Bunga / Bulan ( % )\"\r\n              placeholder=\"Masukan Bunga / Bulan ( % )\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              name=\"lama_pinjam\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              normalize={NumberOnly}\r\n              onChange={this.hitungTotal()}\r\n              label=\"Lama Pinjam\"\r\n              placeholder=\"Masukan Lama Pinjam\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              readOnly={true}\r\n              name=\"tgl_jth_tempo\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Tanggal Jatuh Tempo\"\r\n              placeholder=\"Masukan Tanggal Jatuh Tempo\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              readOnly={true}\r\n              name=\"bunga_rp\"\r\n              component={ReanderField}\r\n              normalize={NumberOnly}\r\n              type=\"text\"\r\n              label=\"Bunga Rp\"\r\n              placeholder=\"Masukan Bunga Rp\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              readOnly={true}\r\n              name=\"besar_kembali\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Besar Kembali\"\r\n              placeholder=\"Masukan Besar Kembali\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-8\"></div>\r\n          <div className=\"col-2\">\r\n           \r\n          </div>\r\n          <div className=\"col-2\">\r\n            <button\r\n              className=\"btn btn-primary btn-block\"\r\n              disabled={this.props.isLoadingHutang}\r\n              type=\"submit\"\r\n            >\r\n              {this.props.isLoadingHutang ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Menyimpan\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <i className=\"fas fa-paper-plane\"></i> &nbsp; Simpan Data\r\n                </>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {this.props.isLoadingHutang ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nModalHutang = reduxForm({\r\n  form: \"ModalHutang\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiFormHutang,\r\n})(ModalHutang);\r\nexport default connect((state) => {\r\n  const selector = formValueSelector(\"ModalHutang\"); // <-- same as form name\r\n  const { jml_hutang, bunga, lama_pinjam, tgl_hutang } = selector(\r\n    state,\r\n    \"jml_hutang\",\r\n    \"bunga\",\r\n    \"lama_pinjam\",\r\n    \"tgl_hutang\"\r\n  );\r\n  let bunga_rp =\r\n    (parseFloat(bunga || 0) / parseFloat(100)) *\r\n    parseFloat(jml_hutang || 0) *\r\n    (parseFloat(lama_pinjam || 0) / parseFloat(30));\r\n  let besar_kembali = parseFloat(jml_hutang || 0) + parseFloat(bunga_rp || 0);\r\n  let tomorrow = new Date(tgl_hutang);\r\n  // console.log(tomorrow);\r\n  let tgl_jatuh_tempo = moment(\r\n    tomorrow.setDate(tomorrow.getDate() + parseInt(lama_pinjam || 0))\r\n  ).format(\"YYYY-MM-DD\");\r\n  return {\r\n    initialValues: {\r\n      tgl_hutang: getToday(),\r\n    },\r\n    bunga_rp: parseFloat(bunga_rp).toLocaleString(\"kr-KO\"),\r\n    besar_kembali: parseFloat(besar_kembali).toLocaleString(\"kr-KO\"),\r\n    tgl_jatuh_tempo: tgl_jatuh_tempo,\r\n    datakondisi: state.datamaster.getDataKondisiBarang,\r\n    kategori: state.datamaster.GetDataGroup,\r\n  };\r\n})(ModalHutang);\r\n","const ValidasiHutang = (value, event) => {\r\n    const errors = {};\r\n    // console.log(event.charCode==13);\r\n    if (!value.nama_barang) {\r\n      errors.nama_barang = \"Nama Barang Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.berat) {\r\n      errors.berat = \"Berat Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.jumlah) {\r\n      errors.jumlah = \"Jumlah Tidak Boleh Kosong\";\r\n    }\r\n\r\n    return errors;\r\n  };\r\n  \r\n  export default ValidasiHutang;\r\n  ","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  getKondisiPinjaman,\r\n  GetDataGroup,\r\n  showModal,\r\n} from \"../../../../actions/datamaster_action\";\r\nimport {\r\n  HiidenFiled,\r\n  ReanderField,\r\n} from \"../../../../components/helpers/field\";\r\nimport { NumberOnly, Gramasi } from \"../../../../Validasi/normalize\";\r\nimport Loading from \"react-fullscreen-loading\";\r\nimport ValidasiHutang from \"../../../../Validasi/ValidasiHutang\";\r\nimport { Camera, imgfound } from \"../../../../components/helpers/library\";\r\nimport { setCamera } from \"../../../../actions/databarang_action\";\r\nimport {\r\n  dataURLtoFile,\r\n  resizeFile,\r\n} from \"../../../../components/helpers/function\";\r\n\r\nclass ModalTambahBarang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: true,\r\n      loadimage: imgfound,\r\n      ModalWebCam: false,\r\n      isLoading: false,\r\n      harga_jual: true,\r\n      berat_jual: true,\r\n      hargapergram: true,\r\n      ongkos: true,\r\n      total: true,\r\n      gambar: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getKondisiPinjaman());\r\n    this.props.dispatch(GetDataGroup());\r\n    setTimeout(() => {\r\n      // document.getElementById(\"nama_barang_hutang\").focus();\r\n      this.props.dispatch(setCamera(false));\r\n    }, 100);\r\n  }\r\n\r\n  async handleTakePhoto(url) {\r\n    try {\r\n      const file = dataURLtoFile(url);\r\n      const res = await resizeFile(file);\r\n      // console.log(res);\r\n      this.props.dispatch(setCamera(res));\r\n      this.props.change(\"foto\", res);\r\n\r\n      document.getElementById(\"nama_barang_hutang\").focus()\r\n    } catch (err) {\r\n      // console.log(err);\r\n    }\r\n  }\r\n  showModalWebcam() {\r\n    this.props.dispatch(setCamera(false));\r\n    this.props.dispatch(showModal());\r\n    this.setState({ ModalWebCam: true });\r\n  }\r\n  loadcamera() {\r\n    return (\r\n      <Camera\r\n        onTakePhoto={(dataUri) => {\r\n          this.handleTakePhoto(dataUri);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n        autoComplete=\"off\"\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12 text-center\">\r\n            <Field\r\n              readOnly={true}\r\n              name=\"foto\"\r\n              type=\"hidden\"\r\n              component={HiidenFiled}\r\n            />\r\n            {this.state.ModalWebCam === true ? (\r\n              this.props.setCamera === false ? (\r\n                <div className=\"container\">{this.loadcamera()}</div>\r\n              ) : (\r\n                <>\r\n                  <img\r\n                    src={\r\n                      this.props.foto === undefined\r\n                        ? this.props.setCamera === false\r\n                          ? imgfound\r\n                          : this.props.setCamera\r\n                        : this.props.setCamera\r\n                        ? this.props.setCamera\r\n                        : this.props.foto\r\n                    }\r\n                    alt=\"img\"\r\n                    height=\"245px\"\r\n                    width=\"355px\"\r\n                  />\r\n                </>\r\n              )\r\n            ) : (\r\n              <>\r\n                <img\r\n                  src={\r\n                    this.props.foto === undefined\r\n                      ? this.props.setCamera === false\r\n                        ? imgfound\r\n                        : this.props.setCamera\r\n                      : this.props.setCamera\r\n                      ? this.props.setCamera\r\n                      : this.props.foto\r\n                  }\r\n                  alt=\"img\"\r\n                  height=\"245px\"\r\n                  width=\"355px\"\r\n                />\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className=\"col-lg-12 text-center\">\r\n            <br></br>\r\n          </div>\r\n          <div className=\"col-lg-12 text-center\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={() => this.showModalWebcam()}\r\n            >\r\n              {\" \"}\r\n              WebCam{\" \"}\r\n            </button>\r\n          </div>\r\n          <div className=\"col-lg-12 text-center\">\r\n            <br></br>\r\n          </div>\r\n\r\n          <div className=\"col-4\">\r\n            <Field\r\n              id=\"nama_barang_hutang\"\r\n              name=\"nama_barang\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Nama Barang\"\r\n              placeholder=\"Masukan Nama Barang\"\r\n            />\r\n          </div>\r\n          {/* <div className=\"col-4\">\r\n          <Field\r\n              label=\"Kondisi Barang\"\r\n              name=\"kondisi_barang\"\r\n              options={this.props.datakondisi\r\n                .map((list) => {\r\n                  let data = {\r\n                    value: list.kondisi_barang,\r\n                    name: list.kondisi_barang,\r\n                  };\r\n                  return data;\r\n                })}\r\n              placeholder={\"Silahkan Pilih Kondisi Barang\"}\r\n              component={ReanderSelect}\r\n            />\r\n          </div> */}\r\n          {/* <div className=\"col-4\">\r\n          <Field\r\n              label=\"Kategori\"\r\n              name=\"kategori\"\r\n              options={this.props.kategori.filter(\r\n                (list) => list.kode_group !== undefined)\r\n                .map((list) => {\r\n                  let data = {\r\n                    value: list.kode_group,\r\n                    name: list.kode_group +' - '+ list.nama_group,\r\n                  };\r\n                  return data;\r\n                })}\r\n              placeholder={\"Silahkan Pilih Kategori\"}\r\n              component={ReanderSelect}\r\n            />\r\n          </div> */}\r\n          <div className=\"col-4\">\r\n            <Field\r\n              name=\"berat\"\r\n              component={ReanderField}\r\n              normalize={Gramasi}\r\n              type=\"text\"\r\n              label=\"Berat\"\r\n              placeholder=\"Masukan Berat\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              name=\"jumlah\"\r\n              defaultValue=\"1\"\r\n              component={ReanderField}\r\n              type=\"jumlah\"\r\n              normalize={NumberOnly}\r\n              label=\"Jumlah\"\r\n              placeholder=\"Masukan Jumlah\"\r\n            />\r\n          </div>\r\n          <div className=\"col-12 text-right\">\r\n            <label>&nbsp;</label>\r\n            <button\r\n              className=\"btn btn-primary \"\r\n              disabled={this.props.isLoading}\r\n              type=\"submit\"\r\n            >\r\n              {this.props.isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Menyimpan\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <i className=\"fas fa-paper-plane\"></i> &nbsp; Simpan Data\r\n                </>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {this.props.isLoading ? (\r\n          <Loading\r\n            loading\r\n            background=\"rgba(0, 0, 0, 0.35)\"\r\n            loaderColor=\"rgba(94, 147, 117, 1)\"\r\n          />\r\n        ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n// ModalTambahBarang = reduxForm({\r\n//   form: \"ModalTambahBarang\",\r\n//   enableReinitialize: true,\r\n//   validate: ValidasiMasterDataHadiah,\r\n// })(ModalTambahBarang);\r\n// export default connect(maptostate, null)(ModalTambahBarang);\r\n\r\nModalTambahBarang = reduxForm({\r\n  form: \"ModalTambahBarang\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiHutang,\r\n})(ModalTambahBarang);\r\n\r\nexport default connect((state) => {\r\n  return {\r\n    initialValues: {\r\n      jumlah: \"1\",\r\n    },\r\n    datakondisi: state.datamaster.getKondisiPinjaman,\r\n    kategori: state.datamaster.GetDataGroup,\r\n    foto: state.databarang.showEditBarang.foto,\r\n    setCamera: state.databarang.setCamera,\r\n  };\r\n})(ModalTambahBarang);\r\n","import moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { reduxForm, reset } from \"redux-form\";\r\nimport { hideModal, showModal } from \"../../../actions/datamaster_action\";\r\nimport { setBarangHutang } from \"../../../actions/hutang_action\";\r\nimport { formatDate } from \"../../../components/helpers/function\";\r\nimport ModalGlobal from \"../../../components/helpers/ModalGlobal\";\r\nimport { ToastNotification } from \"../../../components/helpers/notification\";\r\nimport Tabel from \"../../../components/helpers/tabel\";\r\nimport { Panel } from \"../../../components/panel/panel\";\r\nimport { postData } from \"../../../config/axios\";\r\nimport ValidasiDataUsers from \"../../../Validasi/ManageUsers/ValidasiDataUsers\";\r\nimport ModalDataCustomer from \"./Modal/ModalDataCustomer\";\r\nimport ModalHutang from \"./Modal/ModalHutang\";\r\nimport ModalTambahBarang from \"./Modal/ModalTambahBarang\";\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    setBarangHutang: state.hutang.setBarangHutang,\r\n    DataSales: state.datamaster.getDataSales,\r\n    hideModal: state.datamaster.modalDialog,\r\n  };\r\n};\r\n\r\nclass HeadHutang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoadingDataCustomer: false,\r\n      isLoadingBatal: false,\r\n      isLoadingHutang: false,\r\n      FormModal: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {}\r\n\r\n  ShowModalCustomer() {\r\n    this.setState({ FormModal: \"ShowModalCustomer\" });\r\n    this.props.dispatch(showModal());\r\n  }\r\n  ShowModalBarang() {\r\n    this.props.dispatch(showModal());\r\n    this.setState({ FormModal: \"ShowModalBarang\" });\r\n  }\r\n  ShowModalHutang() {\r\n    let data_customer = JSON.parse(localStorage.getItem(\"data_customer_hutang_tmp\"));\r\n    let data = JSON.parse(localStorage.getItem(\"data_barang_hutang_tmp\"));\r\n    if (data === null || undefined || data.length === 0 || data_customer === null || undefined || data_customer.length === 0) {\r\n      ToastNotification('info', 'Data Customer / Data Barang Belum Diisi')\r\n      return false\r\n    } else {\r\n      this.props.dispatch(showModal());\r\n      this.setState({ FormModal: \"ShowModalHutang\" });\r\n    }\r\n  }\r\n\r\n  // simpanDataCustomer(data) {\r\n    // this.setState(({\r\n    //   isLoadingDataCustomer :true\r\n    // }))\r\n    // setTimeout(() => {\r\n    //   this.setState(({\r\n    //     isLoadingDataCustomer :false\r\n    //   }))\r\n    //   this.props.dispatch(hideModal());\r\n    //   localStorage.setItem(\"data_customer_hutang_tmp\", JSON.stringify(data));\r\n    // }, 500);\r\n  // }\r\n\r\n  handleSubmit(data) {\r\n    let hasil = {\r\n      alamat_customer: data.alamat_customer || \"-\",\r\n      jenis_pelanggan: data.jenis_pelanggan || \"NONMEMBER\",\r\n      kode_customer: data.jenis_pelanggan === \"NONMEMBER\" ? \"NONMEMBER\" : data.kode_customer,\r\n      kode_sales: data.kode_sales,\r\n      nama_customer: data.nama_customer || \"REGULER\",\r\n      no_hp: data.no_hp || \"-\"\r\n    }\r\n    this.setState(({\r\n      isLoadingDataCustomer :true\r\n    }))\r\n    localStorage.setItem(\"data_customer_hutang_tmp\", JSON.stringify(hasil));\r\n    setTimeout(() => {\r\n      this.setState(({\r\n        isLoadingDataCustomer :false\r\n      }))\r\n      this.props.dispatch(hideModal());\r\n    }, 500);\r\n  }\r\n \r\n  simpanTransaksiHutang(data) {\r\n    // console.log(data);\r\n    // console.log(parseInt(data.jml_hutang));\r\n    let data_customer = JSON.parse(localStorage.getItem(\"data_customer_hutang_tmp\"));\r\n    let data_barang_hutang = JSON.parse(localStorage.getItem(\"data_barang_hutang_tmp\"));\r\n\r\n    let detail_barang = [];\r\n    data_barang_hutang.forEach((item, index) => {\r\n      let row = {\r\n        nama_barang: item.nama_barang,\r\n        kondisi: item.kondisi_barang,\r\n        kategori: item.kategori,\r\n        foto: item.foto,\r\n        berat: parseFloat(item.berat),\r\n        jumlah: parseInt(item.jumlah),\r\n      };\r\n      detail_barang.push(row);\r\n    });\r\n    let data_hutang = {\r\n      kode_sales: data_customer.kode_sales,\r\n      nama_customer: data_customer.nama_customer,\r\n      alamat_customer: data_customer.alamat_customer,\r\n      kode_member: data_customer.jenis_pelanggan === \"NONMEMBER\" ? data_customer.jenis_pelanggan : data_customer.kode_customer,\r\n      no_hp : data_customer.no_hp,\r\n      tgl_hutang : formatDate(moment(new Date(data.tgl_hutang)).format('YYYY-MM-DD')),\r\n      tgl_tempo : data.tgl_jth_tempo,\r\n      jumlah_hutang : parseInt(data.jml_hutang),\r\n      lama_pinjam : parseInt(data.lama_pinjam),\r\n      bunga : parseFloat(data.bunga),\r\n      berat_emas : parseFloat(data.berat_emas),\r\n      berat_bruto: parseFloat(data.emasdanplastik),\r\n      detail_barang : detail_barang\r\n    }\r\n\r\n    // console.log(data_hutang);\r\n    this.setState({\r\n      isLoadingHutang: true\r\n    })\r\n    setTimeout(() => {\r\n      postData('hutang/simpan', data_hutang).then((res) => {\r\n        ToastNotification('success', res.data.message)\r\n        this.setState({\r\n          isLoadingHutang: false\r\n        })\r\n        this.props.dispatch(reset('ModalHutang'))\r\n      }).then(() => {\r\n        localStorage.setItem(\"data_customer_hutang_tmp\", JSON.stringify([]));\r\n        localStorage.setItem(\"data_barang_hutang_tmp\", JSON.stringify([]));\r\n        this.props.dispatch(setBarangHutang([]))\r\n        this.setState({\r\n          isLoadingHutang: false\r\n        })\r\n      }).then(() => {\r\n        this.props.dispatch(hideModal())\r\n      })\r\n        .catch((err) => {\r\n          this.setState({\r\n            isLoadingHutang: false\r\n          })\r\n        ToastNotification('info','Transaksi Gagal Disimpan')\r\n      })\r\n    }, 500);\r\n    \r\n  }\r\n  batalHutang() {\r\n    this.setState({\r\n      isLoadingBatal: true,\r\n    });\r\n    setTimeout(() => {\r\n      localStorage.setItem(\"data_customer_hutang_tmp\", JSON.stringify([]));\r\n      localStorage.setItem(\"data_barang_hutang_tmp\", JSON.stringify([]));\r\n      this.props.dispatch(setBarangHutang([]));\r\n      this.props.dispatch(reset(\"ModalHutang\"));\r\n      this.props.dispatch(hideModal());\r\n      this.setState({\r\n        isLoadingBatal: false,\r\n      });\r\n    }, 300);\r\n  }\r\n  simpanBarang(data) {\r\n    let hasil = {\r\n      nama_barang: data.nama_barang || \"-\",\r\n      kondisi_barang: data.kondisi_barang || \"-\",\r\n      kategori: data.kategori || \"-\",\r\n      berat: parseFloat(data.berat) || 0,\r\n      jumlah: parseInt(data.jumlah) || 0,\r\n      foto: data.foto || \"-\",\r\n    };\r\n    let cek = JSON.parse(localStorage.getItem(\"data_barang_hutang_tmp\")) || [];\r\n    cek.push(hasil);\r\n    document.getElementById('nama_barang_hutang').focus()\r\n    this.props.dispatch(reset('ModalTambahBarang'));\r\n    this.props.dispatch(setBarangHutang(cek));\r\n    localStorage.setItem(\"data_barang_hutang_tmp\", JSON.stringify(cek));\r\n    this.props.dispatch(hideModal())\r\n  }\r\n  render() {\r\n    return (\r\n      <Panel>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <Tabel\r\n              keyField=\"nama_barang\"\r\n              exportCsv={false}\r\n              data={\r\n                this.props.setBarangHutang.length === 0 ? JSON.parse(localStorage.getItem(\"data_barang_hutang_tmp\")) || []\r\n                : this.props.setBarangHutang || []\r\n              }\r\n              tambahData={true}\r\n              btnText=\"Data Customer\"\r\n              handleClick={() => this.ShowModalCustomer()}\r\n              columns={this.props.columns}\r\n              btnOptional={true}\r\n              namaCustomer={true}\r\n              jenisCustomer={true}\r\n              form=\"Hutang\"\r\n              btnTextOptional=\"Data Barang\"\r\n              handleClickOptional={() => this.ShowModalBarang()}\r\n              btnOptional2={true}\r\n              btnTextOptional2=\"Data Hutang\"\r\n              handleClickOptional2={() => this.ShowModalHutang()}\r\n              empty={true}\r\n              textEmpty=\"Data Barang Kosong\"\r\n            />\r\n          </div>\r\n          \r\n        </div>\r\n        <div className=\"row\">\r\n            <div className=\"col-6\">\r\n            <button\r\n              onClick={() => this.batalHutang()}\r\n              className=\"btn btn-warning\"\r\n              disabled={this.state.isLoadingBatal}\r\n              type=\"button\"\r\n            >\r\n              {this.state.isLoadingBatal ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Reset\r\n                </>\r\n              ) : (\r\n                \"Reset\"\r\n              )}\r\n            </button>\r\n            </div>\r\n          </div>\r\n        <ModalGlobal\r\n          size={this.state.FormModal === \"ShowModalBarang\" ? \"l\" :\"xl\"}\r\n          title={<TitleModal state={this.state.FormModal} />}\r\n          content={\r\n            this.state.FormModal === \"ShowModalCustomer\" ? (\r\n              <ModalDataCustomer isLoadingDataCustomer={this.state.isLoadingDataCustomer} onSubmit={(data) => this.handleSubmit(data)} />\r\n            ) : this.state.FormModal === \"ShowModalBarang\" ? (\r\n              <ModalTambahBarang onSubmit={(data) => this.simpanBarang(data)} />\r\n            ) : (\r\n              <ModalHutang isLoadingHutang={this.state.isLoadingHutang} onSubmit={(data) => this.simpanTransaksiHutang(data)} />\r\n            )\r\n          }\r\n        />\r\n      </Panel>\r\n    );\r\n  }\r\n}\r\n\r\nfunction TitleModal(data, onSubmit) {\r\n  // console.log(state.state);\r\n  if (data.state === \"ShowModalCustomer\") {\r\n    return \"Form Data Customer\";\r\n  } else if (data.state === \"ShowModalBarang\") {\r\n    return \"Form Data Barang\";\r\n  } else {\r\n    return \"Form Data Hutang\";\r\n  }\r\n}\r\nHeadHutang = reduxForm({\r\n  form: \"HeadHutang\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiDataUsers,\r\n})(HeadHutang);\r\nexport default connect(maptostate, null)(HeadHutang);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { setBarangHutang } from \"../../../actions/hutang_action.jsx\";\r\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\r\nimport HeadHutang from \"./HeadHutang.jsx\";\r\n\r\nclass FormTransaksiHutang extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      columns: [\r\n        {\r\n          dataField: \"nama_barang\",\r\n          text: \"Nama Barang\",\r\n\r\n          footer:\"\"\r\n        },\r\n\r\n        // {\r\n        //   dataField: \"kondisi_barang\",\r\n        //   text: \"Kondisi\",\r\n        // },\r\n        // {\r\n        //   dataField: \"kategori\",\r\n        //   text: \"Kategori\",\r\n        // },\r\n        {\r\n          dataField: \"berat\",\r\n          text: \"Berat\",\r\n          footer: columnData => parseFloat(columnData.reduce((acc, item) => acc + item, 0)).toFixed(1)\r\n        },\r\n        {\r\n          dataField: \"jumlah\",\r\n          text: \"Jumlah\",\r\n          formatter: (cell) => {\r\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\r\n          },\r\n          footer: columnData => parseInt(columnData.reduce((acc, item) => acc + item, 0)).toLocaleString(\"kr-KO\")\r\n        },\r\n        {\r\n          dataField: \"action\",\r\n          text: \"Action\",\r\n          csvExport: false,\r\n          headerClasses: \"text-center\",\r\n          formatter: (rowcontent, row, index) => {\r\n             \r\n            return (\r\n              <div className=\"row text-center\">\r\n                <div className=\"col-12\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => this.hapusdata(index)}\r\n                    className=\"btn btn-danger mr-3\"\r\n                  >\r\n                    <i className=\"fa fa-trash\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n          footer: \"\"\r\n        },\r\n      ],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  hapusdata(id) {\r\n    Swal.fire({\r\n      title: \"Anda Yakin !!\",\r\n      text: \"Ingin Menghapus Data Ini ?\",\r\n      icon: \"warning\",\r\n      position: \"top-center\",\r\n      cancelButtonText: \"Tidak\",\r\n      showCancelButton: true,\r\n      confirmButtonText: \"OK\",\r\n      showConfirmButton: true,\r\n    }).then((result) => {\r\n      // console.log(id);\r\n      if (result.isConfirmed) {\r\n        let data = JSON.parse(localStorage.getItem('data_barang_hutang_tmp'));\r\n        data.splice(id, 1)\r\n        localStorage.setItem('data_barang_hutang_tmp', JSON.stringify(data));\r\n        this.props.dispatch(setBarangHutang(data));\r\n        this.setState({\r\n          berhasil : \"ok\"\r\n        })\r\n      }\r\n    });\r\n  }\r\n  handleSubmit(data) { }\r\n  \r\n  componentWillUnmount() {\r\n    localStorage.setItem(\"data_customer_hutang_tmp\", JSON.stringify([]));\r\n    localStorage.setItem(\"data_barang_hutang_tmp\", JSON.stringify([]));\r\n  }\r\n\r\n  render() {\r\n   \r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Hutang</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Transaksi Hutang</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Transaksi Hutang </h1>\r\n        <Panel>\r\n          <PanelHeader>Transaksi Hutang</PanelHeader>\r\n          <br />\r\n          {/* Transaksi Hutang */}\r\n          <div className=\"container\">\r\n            <HeadHutang\r\n              isLoading={this.state.isLoading}\r\n              columns={this.state.columns}\r\n            />\r\n          </div>\r\n          <br />\r\n          {/* End Tambah Transaksi Hutang  */}\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default connect(null)(FormTransaksiHutang);\r\n","const ValidasiDataUsers = (value) => {\r\n    const errors = {};\r\n    if (!value.user_id) {\r\n        errors.user_id = \"User Id Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.user_name) {\r\n        errors.user_name = \"Username Tidak Boleh Kosong\";\r\n    }\r\n\r\n    if (!value.level) {\r\n        errors.level = \"Level Harus Dipilih \";\r\n    }\r\n    // if (!value.password) {\r\n    //     errors.password = \"Hassword Harus Diisi \";\r\n    // }\r\n    // if (!value.retype_password) {\r\n    //     errors.retype_password = \"Retype Password Harus Diisi \";\r\n    // }\r\n\r\n    return errors;\r\n}\r\n\r\nexport default ValidasiDataUsers;\r\n\r\n\r\n","const ValidasiFormDataMemberPenjualan = (value) => {\r\n    const errors = {};\r\n    if (!value.kode_sales) {\r\n        errors.kode_sales = \"Kode Sales Harus Dipilih\";\r\n    }\r\n    if (!value.nama_customer) {\r\n        errors.nama_customer = \"Nama Customer Harus Diisi\";\r\n    }\r\n    if (!value.no_hp) {\r\n        errors.no_hp = \"No Hp Harus Diisi\";\r\n    }\r\n    if (!value.alamat) {\r\n        errors.alamat = \"Alamat Harus Diisi\";\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\nexport default ValidasiFormDataMemberPenjualan;\r\n\r\n\r\n"],"sourceRoot":""}