{"version":3,"sources":["pages/Barang/HancurDataBarang/HeadaHancurDataBarang.jsx","Validasi/Barang/PindahBarang/ValidasiPindahBarang.jsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","redux_form__WEBPACK_IMPORTED_MODULE_2__","redux_form__WEBPACK_IMPORTED_MODULE_3__","_actions_databarang_action__WEBPACK_IMPORTED_MODULE_4__","_actions_datamaster_action__WEBPACK_IMPORTED_MODULE_5__","_components_helpers_field__WEBPACK_IMPORTED_MODULE_6__","_components_helpers_notification__WEBPACK_IMPORTED_MODULE_7__","_components_helpers_tabel__WEBPACK_IMPORTED_MODULE_8__","_config_axios__WEBPACK_IMPORTED_MODULE_9__","_Validasi_Barang_PindahBarang_ValidasiPindahBarang__WEBPACK_IMPORTED_MODULE_10__","react_fullscreen_loading__WEBPACK_IMPORTED_MODULE_11__","react_fullscreen_loading__WEBPACK_IMPORTED_MODULE_11___default","HeadaHancurDataBarang","Component","constructor","props","super","this","state","date","Date","isLoadingBatal","kondisi_barang","componentDidMount","dispatch","getDataKondisiBarang","getKodeBarcode","e","clearTimeout","delay","setTimeout","getData","then","res","data","length","ToastNotification","change","forEach","list","index","kode_barcode","kode_group","kode_dept","nama_barang","nama_atribut","berat","cek","JSON","parse","localStorage","getItem","findIndex","hasil","push","setItem","stringify","setHancurBarang","catch","err","response","batalHancur","setState","render","a","createElement","onSubmit","handleSubmit","autoComplete","onKeyPress","key","preventDefault","className","label","name","onChange","options","datakondisi","filter","undefined","map","value","placeholder","component","ReanderSelect","target","ReanderField","type","keyField","pagination","exportCsv","columns","empty","textEmpty","disabled","isLoading","Fragment","onClick","loading","background","loaderColor","reduxForm","form","enableReinitialize","validate","ValidasiPindahBarang","connect","datamaster","databarang","errors","kode_gudang","kode_baki","statusAktif"],"mappings":"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","file":"static/js/21.c2502176.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { setHancurBarang } from \"../../../actions/databarang_action\";\r\nimport { getDataKondisiBarang } from \"../../../actions/datamaster_action\";\r\nimport { ReanderSelect, ReanderField } from \"../../../components/helpers/field\";\r\nimport { ToastNotification } from \"../../../components/helpers/notification\";\r\nimport Tabel from \"../../../components/helpers/tabel\";\r\nimport { getData } from \"../../../config/axios\";\r\nimport ValidasiPindahBarang from \"../../../Validasi/Barang/PindahBarang/ValidasiPindahBarang\";\r\nimport Loading from 'react-fullscreen-loading';\r\nconst maptostate = (state) => {\r\n  return {\r\n    datakondisi: state.datamaster.getDataKondisiBarang,\r\n    setHancurBarang: state.databarang.setHancurBarang,\r\n  };\r\n};\r\nclass HeadaHancurDataBarang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: new Date(),\r\n      isLoadingBatal: false,\r\n      kondisi_barang: \"kosong\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getDataKondisiBarang());\r\n  }\r\n  getKodeBarcode(e) {\r\n    clearTimeout(this.delay)\r\n    this.delay = setTimeout(() => {\r\n      if(e === \"\"){\r\n        return false;\r\n      }\r\n      getData(\"barang/open/kode-barcode?kode_barcode=\" + e)\r\n        .then((res) => {\r\n          if (res.data.length === 0) {\r\n            ToastNotification(\"info\", \"Data Yang Dicari Tidak Ada\");\r\n          } else {\r\n            if (this.state.kondisi_barang ===\"kosong\") {\r\n                ToastNotification(\"info\", \"Kondisi Barang Harus Dipilih\");\r\n                this.props.change(\"kode_barcode\", \"\");\r\n            } else {\r\n              res.data.forEach((list, index) => {\r\n                let data = {\r\n                  kode_barcode: list.kode_barcode,\r\n                  kode_group: list.kode_group,\r\n                  kode_dept: list.kode_dept,\r\n                  nama_barang: list.nama_barang,\r\n                  nama_atribut: list.nama_atribut,\r\n                  berat: list.berat,\r\n                  kondisi_barang: this.state.kondisi_barang,\r\n                };\r\n                //   console.log(data);\r\n                let cek =\r\n                  JSON.parse(localStorage.getItem(\"data_barang_hancur_tmp\")) ||\r\n                  [];\r\n                let hasil_cek = cek.findIndex(\r\n                  (hasil) => hasil.kode_barcode === e\r\n                );\r\n                //   console.log(index);\r\n                if (hasil_cek === -1) {\r\n                  cek.push(data);\r\n                  localStorage.setItem(\r\n                    \"data_barang_hancur_tmp\",\r\n                    JSON.stringify(cek)\r\n                  );\r\n                    this.props.dispatch(setHancurBarang(cek));\r\n                   this.props.change(\"kode_barcode\", \"\");\r\n                }\r\n              });\r\n            }\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          ToastNotification(\"info\", err.response && err.response.data);\r\n        });\r\n    }, 1500);\r\n  }\r\n\r\n  batalHancur() {\r\n    this.setState({ isLoadingBatal: true })\r\n    setTimeout(() => {\r\n      this.setState({ isLoadingBatal: false })\r\n      localStorage.setItem('data_barang_hancur_tmp', JSON.stringify([]))\r\n      this.props.dispatch(setHancurBarang([]));\r\n    }, 500);\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\"\r\n      onKeyPress={(e) => {\r\n        e.key === \"Enter\" && e.preventDefault();\r\n      }}\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-6\">\r\n            <Field\r\n              label=\"Kondisi Barang\"\r\n              name=\"kondisi_barang\"\r\n              onChange={(e) => {\r\n                this.setState({ kondisi_barang: e });\r\n              }}\r\n              options={this.props.datakondisi\r\n                .filter((list) => list.kondisi_barang !== undefined)\r\n                .map((list) => {\r\n                  let data = {\r\n                    value: list.kondisi_barang,\r\n                    name: list.kondisi_barang,\r\n                  };\r\n                  return data;\r\n                })}\r\n              placeholder={\"Silahkan Pilih Kondisi Barang\"}\r\n              component={ReanderSelect}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-lg-6\">\r\n            <Field\r\n              onChange={(e) => this.getKodeBarcode(e.target.value)}\r\n              name=\"kode_barcode\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Kode Barcode\"\r\n              placeholder=\"Masukan Kode Barcode\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <Tabel\r\n          keyField=\"kode_barcode\"\r\n          pagination=\"off\"\r\n          exportCsv={false}\r\n          data={\r\n            this.props.setHancurBarang.length === 0\r\n              ? JSON.parse(localStorage.getItem(\"data_barang_hancur_tmp\"))\r\n              : this.props.setHancurBarang\r\n          }\r\n          columns={this.props.columns}\r\n          empty={true}\r\n          textEmpty=\"Data Barang Kosong\"\r\n        />\r\n        <div className=\"row\">\r\n          <div className=\"col-10\">\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              type=\"submit\"\r\n              disabled={this.props.isLoading}\r\n            >\r\n              {this.props.isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Menyimpan\r\n                </>\r\n              ) : (\r\n                \"Simpan Data\"\r\n              )}\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              className=\"btn btn-warning\"\r\n              type=\"button\"\r\n              onClick={()=>this.batalHancur()}\r\n              disabled={this.props.isLoading}\r\n            >\r\n              {this.state.isLoadingBatal ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Membatal\r\n                </>\r\n              ) : (\r\n                \"Batal\"\r\n              )}\r\n            </button>\r\n          </div>\r\n          {/* <div className=\"2\">\r\n            {JSON.parse(localStorage.getItem(\"data_barang_hancur_tmp\")) ===\r\n            null ? null : (\r\n              <>\r\n                Total Barang :{\" \"}\r\n                {this.props.setHancurBarang.length === 0\r\n                  ? JSON.parse(localStorage.getItem(\"data_barang_hancur_tmp\"))\r\n                      .length || 0\r\n                  : this.props.setHancurBarang.length || 0}\r\n                <br />\r\n                Total Berat :\r\n                {this.props.setHancurBarang.length === 0\r\n                  ? JSON.parse(localStorage.getItem(\"data_barang_hancur_tmp\"))\r\n                      .map((column, key) => column.berat)\r\n                      .reduce((a, b) => a + b, 0)\r\n                      .toFixed(1)\r\n                  : this.props.setHancurBarang\r\n                      .map((column, key) => column.berat)\r\n                      .reduce((a, b) => a + b, 0)\r\n                      .toFixed(1)}\r\n              </>\r\n            )}\r\n          </div> */}\r\n        </div>\r\n        {this.props.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadaHancurDataBarang = reduxForm({\r\n  form: \"HeadaHancurDataBarang\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiPindahBarang,\r\n})(HeadaHancurDataBarang);\r\nexport default connect(maptostate, null)(HeadaHancurDataBarang);\r\n","const ValidasiPindahBarang = (value) => {\r\n    const errors = {};\r\n    if (!value.kode_gudang) {\r\n        errors.kode_gudang = \"Kode Gudang Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.kode_baki) {\r\n        errors.kode_baki = \"Nama Baki Tidak Boleh Kosong\";\r\n    }\r\n\r\n    if (!value.statusAktif) {\r\n        errors.statusAktif = \"Status Tidak Boleh Kosong\";\r\n    }\r\n\r\n    return errors;\r\n}\r\nexport default ValidasiPindahBarang;\r\n\r\n\r\n"],"sourceRoot":""}