{"version":3,"sources":["Validasi/ValidasiParamterPoint.jsx","pages/DataMaster/ParameterPoint/ModalParamterPoint.jsx","pages/DataMaster/ParameterPoint/FormParamterPoint.jsx"],"names":["ValidasiParamterPoint","value","event","errors","kode_group","berat","currencyMask","createNumberMask","prefix","suffix","locale","ModalParamterPoint","Component","[object Object]","args","super","this","state","aktif","componentDidMount","props","dispatch","GetDataGroup","setTimeout","isEdit","document","getElementById","focus","render","react_default","a","createElement","onSubmit","handleSubmit","autoComplete","onKeyPress","e","key","preventDefault","className","Field","id","label","name","options","datagroup","filter","list","undefined","map","nama_group","disabled","placeholder","component","ReanderSelect","Object","assign","ReanderField","type","normalize","NumberOnly","onBlur","setState","onClick","hideModal","isLoading","Fragment","loading_default","loading","background","loaderColor","reduxForm","form","enableReinitialize","validate","connect","datamaster","ShowModalParameterPoint","initialValues","nominal","poin","ParameterPoint","getParameterPoint","modalDialog","React","constructor","type_poin","bind","getData2","then","res","data","data_post","putData","ToastNotification","reset","catch","error","postData","ErrorHandling","kode_sales","formEditParameterPoint","dataEdit","showModal","showModalSales","columns","dataField","text","sort","formatter","row","toLocaleString","csvExport","headerClasses","rowcontent","react_router_dom","to","panel","tabel","keyField","tambahData","handleClick","exportCsv","empty","textEmpty","ModalGlobal","size","title","content","ParameterPoint_ModalParamterPoint"],"mappings":"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","file":"static/js/65.9457951f.chunk.js","sourcesContent":["const ValidasiParamterPoint = (value, event) => {\r\n    const errors = {};\r\n    // console.log(event.charCode==13);\r\n    if (!value.kode_group) {\r\n      errors.kode_group = \"Kode Group Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.berat) {\r\n      errors.berat = \"Berat Tidak Boleh Kosong\";\r\n    }\r\n    return errors;\r\n  };\r\n  \r\n  export default ValidasiParamterPoint;\r\n  ","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { GetDataGroup, hideModal } from \"../../../actions/datamaster_action\";\r\nimport { ReanderField, ReanderSelect } from \"../../../components/helpers/field\";\r\nimport ValidasiParamterPoint from \"../../../Validasi/ValidasiParamterPoint\";\r\n// import ValidasiMasterSales from \"../../../Validasi/ValidasiMasterSales.jsx\";\r\nimport Loading from 'react-fullscreen-loading';\r\nimport { NumberOnly } from \"../../../Validasi/normalize\";\r\nimport { createNumberMask } from \"redux-form-input-masks\";\r\n\r\nconst maptostate = (state) => {\r\n  if (state.datamaster.ShowModalParameterPoint !== null) {\r\n    //   console.log(state.datamaster.ShowModalParameterPoint);\r\n    return {\r\n      datagroup: state.datamaster.GetDataGroup,\r\n      initialValues: {\r\n        kode_group: state.datamaster.ShowModalParameterPoint.kode_group,\r\n        nominal: state.datamaster.ShowModalParameterPoint.nominal,\r\n        poin: state.datamaster.ShowModalParameterPoint.poin,\r\n      },\r\n    };\r\n  }\r\n};\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  suffix: \" ,-\",\r\n  locale: \"kr-KO\",\r\n});\r\nclass ModalParamterPoint extends Component {\r\n  state = {\r\n    aktif: false,\r\n  };\r\n  componentDidMount() {\r\n    this.props.dispatch(GetDataGroup());\r\n    setTimeout(() => {\r\n      this.props.isEdit\r\n        ? document.getElementById(\"berat\").focus()\r\n        : document.getElementById(\"kode_group\").focus();\r\n    }, 100);\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        autoComplete=\"off\"\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <Field\r\n              id=\"kode_group\"\r\n              label=\"Kode Group\"\r\n              name=\"kode_group\"\r\n              options={this.props.datagroup\r\n                .filter((list) => list.kode_group !== undefined)\r\n                .map((list) => {\r\n                  let data = {\r\n                    value: list.kode_group,\r\n                    name: list.kode_group + \" - \" + list.nama_group,\r\n                  };\r\n                  return data;\r\n                })}\r\n              value={this.props.kode_group}\r\n              disabled={this.props.isEdit}\r\n              placeholder={\"Silahkan Pilih Kode Group\"}\r\n              component={ReanderSelect}\r\n            />\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <Field\r\n              id=\"berat\"\r\n              name=\"nominal\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              // normalize={Gramasi}\r\n              {...currencyMask}\r\n              label=\"Nominal\"\r\n              placeholder=\"Masukan Nominal\"\r\n            />\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <Field\r\n              id=\"poin\"\r\n              name=\"poin\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              normalize={NumberOnly}\r\n              label=\"Poin\"\r\n              placeholder=\"Masukan Poin\"\r\n              onBlur={() => this.setState({ aktif: true })}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 text-right\">\r\n          &nbsp;\r\n            <button\r\n              className=\"btn btn-white\"\r\n              onClick={() => this.props.dispatch(hideModal())}\r\n              type=\"button\"\r\n              disabled={this.props.isLoading}\r\n            >\r\n              Batal\r\n            </button>\r\n            &nbsp;\r\n          <button\r\n              className={this.state.aktif ? \"btn btn-primary\" : \"btn btn-white\"}\r\n              disabled={this.props.isLoading}\r\n              type=\"submit\"\r\n            >\r\n              {this.props.isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Menyimpan\r\n                </>\r\n              ) : (\r\n                \"Simpan Data\"\r\n              )}\r\n            </button>\r\n            \r\n           \r\n          </div>\r\n        </div>\r\n        {this.props.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nModalParamterPoint = reduxForm({\r\n  form: \"ModalParamterPoint\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiParamterPoint,\r\n})(ModalParamterPoint);\r\nexport default connect(maptostate, null)(ModalParamterPoint);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\r\n\r\nimport {\r\n  showModal,\r\n  hideModal,\r\n  getParameterPoint,\r\n  ShowModalParameterPoint,\r\n} from \"../../../actions/datamaster_action.jsx\";\r\nimport { connect } from \"react-redux\";\r\nimport { ToastNotification } from \"../../../components/helpers/notification.jsx\";\r\nimport { reset } from \"redux-form\";\r\nimport { getData2, postData, putData } from \"../../../config/axios.jsx\";\r\nimport { ErrorHandling } from \"../../../components/helpers/function.jsx\";\r\nimport Tabel from \"../../../components/helpers/tabel.jsx\";\r\nimport ModalParamterPoint from \"./ModalParamterPoint.jsx\";\r\nimport ModalGlobal from \"../../../components/helpers/ModalGlobal.jsx\";\r\nconst maptostate = (state) => {\r\n  return {\r\n    ParameterPoint: state.datamaster.getParameterPoint,\r\n    hideModal: state.datamaster.modalDialog,\r\n  };\r\n};\r\nclass FormParamterPoint extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false,\r\n      modalDialog: false,\r\n      isLoading: false,\r\n      type_poin : \"GRAM\",\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getParameterPoint());\r\n    getData2(\"para-system/key/TIPE_POIN\").then((res) => {\r\n      // console.log(res.data);\r\n      this.setState({\r\n        type_poin : res.data.value === \"GRAM\" ? \"GRAM\" : \"RP\"\r\n      })\r\n    })\r\n  }\r\n  handleSubmit(data) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n\r\n    let data_post = {\r\n      kode_group: data.kode_group,\r\n      nominal: data.nominal,\r\n      poin: data.poin,\r\n    };\r\n    this.state.isEdit\r\n      ? putData(\"parapoin/edit/\"+data.kode_group, data_post)\r\n          .then(() => {\r\n            this.props.dispatch(hideModal());\r\n          })\r\n          .then(() => {\r\n            ToastNotification(\"success\", \"Data Berhasil Diedit\");\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(getParameterPoint());\r\n          })\r\n          .then(() => {\r\n            this.setState({ isLoading: false });\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(reset(\"ModalParamterPoint\"));\r\n          })\r\n          .catch((error) => {\r\n            ToastNotification(\"info\", \"Terjadi Kesalahan Saat Menyimpan Data\");\r\n            this.setState({\r\n              isLoading: true,\r\n            });\r\n          })\r\n      : postData(\"parapoin/add\", data_post)\r\n          .then(() => {\r\n            this.props.dispatch(hideModal());\r\n          })\r\n          .then(() => {\r\n            ToastNotification(\"success\", \"Data Berhasil Simpan\");\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(getParameterPoint());\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(reset(\"ModalParamterPoint\"));\r\n          })\r\n          .then(() => {\r\n            this.setState({ isLoading: false });\r\n          })\r\n          .catch((error) =>\r\n            ErrorHandling(\r\n              error,\r\n              \"sales/reactive/by-kode-sales/\",\r\n              data.kode_sales,\r\n              data_post,\r\n              this.props.dispatch,\r\n              getParameterPoint(),\r\n              hideModal(),\r\n              \"ModalParamterPoint\"\r\n            ).then(() => {\r\n              this.setState({ isLoading: false });\r\n            })\r\n          );\r\n  }\r\n  formEditParameterPoint(dataEdit) {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(ShowModalParameterPoint(dataEdit));\r\n    this.setState({\r\n      isEdit: true,\r\n    });\r\n  }\r\n  showModalSales() {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(ShowModalParameterPoint(false));\r\n    this.setState({\r\n      isEdit: false,\r\n    });\r\n  }\r\n  render() {\r\n    const columns = [\r\n      {\r\n        dataField: \"kode_group\",\r\n        text: \"Kode Group\",\r\n        sort: true,\r\n      },\r\n      {\r\n        dataField: \"nominal\",\r\n        text: this.state.type_poin === \"GRAM\" ? \"Gram\" : \"Rp\",\r\n        formatter: (value, row) => {\r\n          return value.toLocaleString(\"ko-KO\") || 0;\r\n        },\r\n      },\r\n      {\r\n        dataField: \"poin\",\r\n        text: \"Poin\",\r\n      },\r\n      {\r\n        dataField: \"action\",\r\n        text: \"Action\",\r\n        csvExport: false,\r\n        headerClasses: \"text-center\",\r\n        formatter: (rowcontent, row) => {\r\n          let dataEdit = {\r\n            kode_group: row.kode_group,\r\n            nominal: row.nominal,\r\n            poin: row.poin,\r\n          };\r\n           \r\n          return (\r\n            <div className=\"row text-center\">\r\n              <div className=\"col-12\">\r\n                <button\r\n                  onClick={() => this.formEditParameterPoint(dataEdit)}\r\n                  className=\"btn btn-primary mr-3\"\r\n                >\r\n                  {\" \"}\r\n                  <i className=\"fa fa-edit\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      ]\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Data Master</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Parameter Point</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Parameter Point </h1>\r\n        <Panel>\r\n          <PanelHeader>Parameter Point</PanelHeader>\r\n          <br />\r\n\r\n          {/* Parameter Pint */}\r\n          <div className=\"container\">\r\n            <Tabel\r\n              keyField=\"kode_group\"\r\n              tambahData={true}\r\n              handleClick={() => this.showModalSales()}\r\n              exportCsv={true}\r\n              data={this.props.ParameterPoint}\r\n              columns={columns}\r\n              empty={this.props.ParameterPoint}\r\n              textEmpty=\"Parameter Point Kosong\"\r\n            />\r\n          </div>\r\n          <br />\r\n          {/* End Master Sales */}\r\n          <ModalGlobal\r\n            size=\"P\"\r\n            title={\r\n              this.state.isEdit\r\n                ? \"Edit Parameter Point\"\r\n                : \"Tambah Parameter Point\"\r\n            }\r\n            content={\r\n              <ModalParamterPoint\r\n                isLoading={this.state.isLoading}\r\n                isEdit={this.state.isEdit}\r\n                type_poin={this.state.type_poin}\r\n                onSubmit={(data) => this.handleSubmit(data)}\r\n              />\r\n            }\r\n          />\r\n\r\n          {/* <Modal  title={ this.state.isEdit ? 'Edit Parameter Point' : 'Tambah Parameter Point' } content={ <FormModalKategori isEdit={this.state.isEdit} /> } isOpen={ this.props.hideModal} onSubmit={ (data)=>this.handleSubmit(data) } /> */}\r\n\r\n          {/* End Tambah Master Sales  */}\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(FormParamterPoint);\r\n"],"sourceRoot":""}